(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    814595,      15844]
NotebookOptionsPosition[    686608,      13388]
NotebookOutlinePosition[    800399,      15569]
CellTagsIndexPosition[    800156,      15559]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Generating Crossword Puzzles Out of a Given Set of Words", "Title",
 TaggingRules->{},
 CellChangeTimes->{{3.866902540207155*^9, 3.8669025498611107`*^9}},
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577,ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Aruj", " ", "Bansal"}], "Author"]], "Author",
 TaggingRules->{},
 CellChangeTimes->{{3.866902551761683*^9, 3.8669025552047043`*^9}},
 CellTags->"AuthorName",
 CellID->960727095,ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c"],

Cell["\<\
This project explores SAT solving as a method for generating crossword \
puzzles. Relationships between words, letters, and grid cell locations are \
defined to create crossword puzzles. A \"quality\" metric is defined based on \
the final state of the crossword puzzle and a heuristic is used to generate \
crossword puzzles of better \"quality\". A crossword grid size and a list of \
words can be specified and a crossword puzzle containing all the words \
present in the list can be generated. It is also possible to generate \
different crossword puzzle word arrangements for the same set of words in \
some cases.\
\>", "Abstract",
 TaggingRules->{},
 CellChangeTimes->{{3.8673184063672247`*^9, 3.8673184209637127`*^9}, {
  3.86733007677887*^9, 3.867330078138061*^9}, {3.867330114859837*^9, 
  3.867330435232263*^9}, {3.867330502250449*^9, 3.8673308983439074`*^9}, {
  3.867330930699048*^9, 3.867331080356621*^9}, {3.867331126440713*^9, 
  3.8673311678232803`*^9}, {3.867332489644816*^9, 3.867332691972166*^9}, {
  3.867372204818439*^9, 3.867372207466929*^9}},
 TextJustification->1.,
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573,ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 TaggingRules->{},
 CellChangeTimes->{{3.8669025580976133`*^9, 3.8669025607594957`*^9}, {
  3.866902667154941*^9, 3.8669026701428547`*^9}},
 CellTags->"SectionHeader",
 CellID->453852445,ExpressionUUID->"849c21e6-34ac-43f9-ad41-3a00597c0248"],

Cell[TextData[{
 "This project formulates crossword puzzle generation into an instance of the \
Boolean Satisfiability problem (SAT) in computer science, which is the \
problem of determining whether there exists an assignment of truth values to \
variables that satisfies a given boolean formula. Tools that solve the \
Boolean Satisfiability problem are called ",
 StyleBox["SAT solvers",
  FontSlant->"Italic"],
 ". Readers familiar with ",
 ButtonBox["propositional logic",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://brilliant.org/wiki/propositional-logic/"], None},
  ButtonNote->"https://brilliant.org/wiki/propositional-logic/"],
 " will find it easier to understand the various constraints and implications \
present in this project. Note:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8669025580976133`*^9, 3.8669025607594957`*^9}, {
   3.866902667154941*^9, 3.866902757089326*^9}, {3.8669398750319443`*^9, 
   3.866940134237485*^9}, {3.8669402198212442`*^9, 3.866940226017555*^9}, {
   3.866940324337501*^9, 3.866940358614797*^9}, {3.86694051306135*^9, 
   3.866940637984743*^9}, {3.866940711411858*^9, 3.866940735513884*^9}, {
   3.866940793439619*^9, 3.8669407995016537`*^9}, {3.8669408898842907`*^9, 
   3.866940928291039*^9}, {3.8669410345016823`*^9, 3.866941076636146*^9}, {
   3.8669829419842253`*^9, 3.866982942361556*^9}, {3.866986096721279*^9, 
   3.8669861402668962`*^9}, {3.866986177815382*^9, 3.866986225229504*^9}, 
   3.867147324066259*^9, 3.867156402732781*^9, {3.8671567383521357`*^9, 
   3.867156781933922*^9}, {3.867156879384781*^9, 3.867156880216508*^9}, {
   3.8671572022927027`*^9, 3.867157225515442*^9}, {3.8671572777093*^9, 
   3.867157286685895*^9}, {3.867160439299539*^9, 3.867160439569803*^9}, {
   3.867160476069888*^9, 3.86716049117864*^9}, {3.867246349928783*^9, 
   3.867246349929323*^9}, {3.867371883124487*^9, 3.8673719055687428`*^9}},
 CellID->1865274427,ExpressionUUID->"5f2b45a3-ce89-4555-920d-dc925c365a04"],

Cell["\<\
All logical operators and symbols used in this essay have their usual \
meanings.\
\>", "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.8669025580976133`*^9, 3.8669025607594957`*^9}, {
   3.866902667154941*^9, 3.866902757089326*^9}, {3.8669398750319443`*^9, 
   3.866940134237485*^9}, {3.8669402198212442`*^9, 3.866940226017555*^9}, {
   3.866940324337501*^9, 3.866940358614797*^9}, {3.86694051306135*^9, 
   3.866940637984743*^9}, {3.866940711411858*^9, 3.866940735513884*^9}, {
   3.866940793439619*^9, 3.8669407995016537`*^9}, {3.8669408898842907`*^9, 
   3.866940928291039*^9}, {3.8669410345016823`*^9, 3.866941076636146*^9}, {
   3.8669829419842253`*^9, 3.866982942361556*^9}, {3.866986096721279*^9, 
   3.8669861402668962`*^9}, {3.866986177815382*^9, 3.866986225229504*^9}, 
   3.867147324066259*^9, {3.867156403131897*^9, 3.867156535373646*^9}, 
   3.8671565796214848`*^9, {3.867156686518524*^9, 3.867156716169568*^9}, {
   3.86715692860369*^9, 3.8671570606373377`*^9}, {3.867157281011519*^9, 
   3.867157283230966*^9}, 3.867229740005069*^9},
 CellID->152521665,ExpressionUUID->"5a46b116-cd97-4cbc-a9b6-ed2dc80694c4"],

Cell[TextData[{
 "The function ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["generateCrossword", "TI"], TraditionalForm], "errors" -> {}, 
     "input" -> "\\it{generateCrossword}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "3ce76c25-7efe-4ff3-bda7-ae1b10eae267"],
 "[] encompasses almost all the code of in project. It accepts a grid size \
and a list of words to build the crossword out of."
}], "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.8669025580976133`*^9, 3.8669025607594957`*^9}, {
   3.866902667154941*^9, 3.866902757089326*^9}, {3.8669398750319443`*^9, 
   3.866940134237485*^9}, {3.8669402198212442`*^9, 3.866940226017555*^9}, {
   3.866940324337501*^9, 3.866940358614797*^9}, {3.86694051306135*^9, 
   3.866940637984743*^9}, {3.866940711411858*^9, 3.866940735513884*^9}, {
   3.866940793439619*^9, 3.8669407995016537`*^9}, {3.8669408898842907`*^9, 
   3.866940928291039*^9}, {3.8669410345016823`*^9, 3.866941076636146*^9}, {
   3.8669829419842253`*^9, 3.866982942361556*^9}, {3.866986096721279*^9, 
   3.8669861402668962`*^9}, {3.866986177815382*^9, 3.866986225229504*^9}, 
   3.867147324066259*^9, {3.867156403131897*^9, 3.867156535373646*^9}, 
   3.8671565796214848`*^9, {3.867156686518524*^9, 3.867156716169568*^9}, {
   3.86715692860369*^9, 3.8671570606373377`*^9}, {3.86715746351026*^9, 
   3.867157464490575*^9}},
 CellID->277751525,ExpressionUUID->"16ba0445-d156-4f54-a378-faf5e7419749"],

Cell["\<\
The following line is the signature of the crossword generation function for \
reference. It is not to be evaluated.\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.8673154184415216`*^9, 3.867315433918816*^9}, {
  3.8673721767169323`*^9, 3.867372186149329*^9}},
 CellID->816550230,ExpressionUUID->"1b29ad84-30c2-4a10-912c-5e91eb6e8140"],

Cell[BoxData[
 RowBox[{
  RowBox[{"generateCrossword", "[", 
   RowBox[{"gridSize0_Integer", ",", " ", "words0_List"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"gridSize", " ", "=", " ", "gridSize0"}], ",", " ", 
      RowBox[{"words", " ", "=", " ", "words0"}]}], "}"}], 
    "..."}]}]}]], "Code",
 TaggingRules->{},
 CellChangeTimes->{{3.867315365390295*^9, 3.867315408018772*^9}, {
  3.8673154523837843`*^9, 3.867315455998992*^9}, {3.867390019302392*^9, 
  3.867390040381323*^9}},
 CellID->886335147,ExpressionUUID->"4e630832-4324-4824-aa5d-86b367ad8eb3"],

Cell[TextData[{
 "Code in this essay is ",
 StyleBox["indexed starting from ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["1", TraditionalForm], "errors" -> {}, "input" -> "1", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],
  FontSlant->"Italic",ExpressionUUID->
  "041ba8f8-5326-4bb6-a2b6-d7a4abd84da5"],
 ", apart from boolean ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"0", "/", "1"}], TraditionalForm], "errors" -> {}, "input" -> 
     "0/1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "477b5747-5283-4bb7-9fb6-b105219f6e57"],
 " representations."
}], "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.8669025580976133`*^9, 3.8669025607594957`*^9}, {
   3.866902667154941*^9, 3.866902757089326*^9}, {3.8669398750319443`*^9, 
   3.866940134237485*^9}, {3.8669402198212442`*^9, 3.866940226017555*^9}, {
   3.866940324337501*^9, 3.866940358614797*^9}, {3.86694051306135*^9, 
   3.866940637984743*^9}, {3.866940711411858*^9, 3.866940735513884*^9}, {
   3.866940793439619*^9, 3.8669407995016537`*^9}, {3.8669408898842907`*^9, 
   3.866940928291039*^9}, {3.8669410345016823`*^9, 3.866941076636146*^9}, {
   3.8669829419842253`*^9, 3.866982942361556*^9}, {3.866986096721279*^9, 
   3.8669861402668962`*^9}, {3.866986177815382*^9, 3.866986225229504*^9}, 
   3.867147324066259*^9, {3.867156403131897*^9, 3.867156535373646*^9}, 
   3.8671565796214848`*^9, 3.867156686518524*^9, 3.867156717853443*^9, {
   3.867157429681838*^9, 3.867157448916607*^9}, {3.86716042831319*^9, 
   3.867160431065089*^9}},
 CellID->1323558088,ExpressionUUID->"9dee6b0f-7a49-413c-982b-1831e9a49f2f"],

Cell[TextData[{
 "Rows are denoted by ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["x", "TI"], TraditionalForm], "errors" -> {}, "input" -> "x", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f85e0bab-8f13-4322-9a62-23d770f42fef"],
 " and are numbered from ",
 StyleBox["top to bottom",
  FontSlant->"Italic"],
 ". Columns are denoted by ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["y", "TI"], TraditionalForm], "errors" -> {}, "input" -> "y", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "877036ab-912b-423c-b243-e1ec9b0ddd48"],
 " are are numbered from",
 StyleBox[" left to right",
  FontSlant->"Italic"],
 "."
}], "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.8669025580976133`*^9, 3.8669025607594957`*^9}, {
   3.866902667154941*^9, 3.866902757089326*^9}, {3.8669398750319443`*^9, 
   3.866940134237485*^9}, {3.8669402198212442`*^9, 3.866940226017555*^9}, {
   3.866940324337501*^9, 3.866940358614797*^9}, {3.86694051306135*^9, 
   3.866940637984743*^9}, {3.866940711411858*^9, 3.866940735513884*^9}, {
   3.866940793439619*^9, 3.8669407995016537`*^9}, {3.8669408898842907`*^9, 
   3.866940928291039*^9}, {3.8669410345016823`*^9, 3.866941076636146*^9}, {
   3.8669829419842253`*^9, 3.866982942361556*^9}, {3.866986096721279*^9, 
   3.8669861402668962`*^9}, {3.866986177815382*^9, 3.866986225229504*^9}, 
   3.867147324066259*^9, {3.867156403131897*^9, 3.867156535373646*^9}, 
   3.8671565796214848`*^9, 3.867156686518524*^9, {3.867157231133678*^9, 
   3.867157265691588*^9}, {3.867157592696327*^9, 3.8671575931348867`*^9}, {
   3.867231100993931*^9, 3.867231100998248*^9}},
 CellID->238392932,ExpressionUUID->"f2a6d553-6d6b-42a0-9dcf-c042b1d3a552"],

Cell[TextData[{
 "Statements like \[OpenCurlyDoubleQuote]placing a word at cell ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"(", 
         RowBox[{
           StyleBox["x", "TI"], ",", 
           StyleBox["y", "TI"]}], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "(x, y)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d0702bc9-aced-475b-9368-0e971f1490ee"],
 "\[CloseCurlyDoubleQuote] refer to the first letter of that word being \
placed at ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"(", 
         RowBox[{
           StyleBox["x", "TI"], ",", 
           StyleBox["y", "TI"]}], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "(x, y)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "3c686537-4118-4697-8082-aa1c807940bf"],
 "."
}], "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.8669025580976133`*^9, 3.8669025607594957`*^9}, {
   3.866902667154941*^9, 3.866902757089326*^9}, {3.8669398750319443`*^9, 
   3.866940134237485*^9}, {3.8669402198212442`*^9, 3.866940226017555*^9}, {
   3.866940324337501*^9, 3.866940358614797*^9}, {3.86694051306135*^9, 
   3.866940637984743*^9}, {3.866940711411858*^9, 3.866940735513884*^9}, {
   3.866940793439619*^9, 3.8669407995016537`*^9}, {3.8669408898842907`*^9, 
   3.866940928291039*^9}, {3.8669410345016823`*^9, 3.866941076636146*^9}, {
   3.8669829419842253`*^9, 3.866982942361556*^9}, {3.866986096721279*^9, 
   3.8669861402668962`*^9}, {3.866986177815382*^9, 3.866986225229504*^9}, 
   3.867147324066259*^9, {3.867156403131897*^9, 3.867156535373646*^9}, 
   3.8671565796214848`*^9, 3.867156686518524*^9, {3.867157231133678*^9, 
   3.867157265691588*^9}, {3.867157592696327*^9, 3.8671575931348867`*^9}, {
   3.867231101634124*^9, 3.8672311378078203`*^9}, {3.867231499331851*^9, 
   3.867231499336371*^9}, 3.867233969901079*^9},
 CellID->1427353553,ExpressionUUID->"4fc33455-9b11-435f-8d7f-791a9f187479"],

Cell["\<\
Constraints and implications for horizontal word placement are identical to \
constraints and implications for vertical word placement. Hence, explanations \
are provided only for horizontal constraints and implications. Code is \
provided for both horizontal and vertical constraints and implications.\
\>", "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.8669025580976133`*^9, 3.8669025607594957`*^9}, {
   3.866902667154941*^9, 3.866902757089326*^9}, {3.8669398750319443`*^9, 
   3.866940134237485*^9}, {3.8669402198212442`*^9, 3.866940226017555*^9}, {
   3.866940324337501*^9, 3.866940358614797*^9}, {3.86694051306135*^9, 
   3.866940637984743*^9}, {3.866940711411858*^9, 3.866940735513884*^9}, {
   3.866940793439619*^9, 3.8669407995016537`*^9}, {3.8669408898842907`*^9, 
   3.866940928291039*^9}, {3.8669410345016823`*^9, 3.866941076636146*^9}, {
   3.8669829419842253`*^9, 3.866982942361556*^9}, {3.866986096721279*^9, 
   3.8669861402668962`*^9}, {3.866986177815382*^9, 3.866986225229504*^9}, 
   3.867147324066259*^9, {3.867156403131897*^9, 3.867156535373646*^9}, 
   3.8671565796214848`*^9, 3.867156686518524*^9, {3.867157231133678*^9, 
   3.867157265691588*^9}, {3.867157592696327*^9, 3.8671575931348867`*^9}, {
   3.867231101634124*^9, 3.8672311378078203`*^9}, {3.86723150145807*^9, 
   3.86723155363041*^9}, {3.867233971324744*^9, 3.867233971326685*^9}, {
   3.867382416121642*^9, 3.867382420105315*^9}},
 CellID->736894797,ExpressionUUID->"1c6a7c8e-3814-438f-90d8-e661c93f06b5"],

Cell["\<\
It is assumed that words in the crossword will be at least 3 alphabets long.\
\>", "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.8669025580976133`*^9, 3.8669025607594957`*^9}, {
   3.866902667154941*^9, 3.866902757089326*^9}, {3.8669398750319443`*^9, 
   3.866940134237485*^9}, {3.8669402198212442`*^9, 3.866940226017555*^9}, {
   3.866940324337501*^9, 3.866940358614797*^9}, {3.86694051306135*^9, 
   3.866940637984743*^9}, {3.866940711411858*^9, 3.866940735513884*^9}, {
   3.866940793439619*^9, 3.8669407995016537`*^9}, {3.8669408898842907`*^9, 
   3.866940928291039*^9}, {3.8669410345016823`*^9, 3.866941076636146*^9}, {
   3.8669829419842253`*^9, 3.866982942361556*^9}, {3.866986096721279*^9, 
   3.8669861402668962`*^9}, {3.866986177815382*^9, 3.866986225229504*^9}, 
   3.867147324066259*^9, {3.867156403131897*^9, 3.867156535373646*^9}, 
   3.8671565796214848`*^9, 3.867156686518524*^9, {3.867157231133678*^9, 
   3.867157265691588*^9}, {3.867157592696327*^9, 3.8671575931348867`*^9}, {
   3.867231101634124*^9, 3.8672311378078203`*^9}, {3.86723150145807*^9, 
   3.86723155363041*^9}, {3.867233971495903*^9, 3.8672340036684437`*^9}, {
   3.867246324662449*^9, 3.867246324862649*^9}, {3.867246380278798*^9, 
   3.867246389335272*^9}, {3.867316764135433*^9, 3.867316764141972*^9}, {
   3.867382434636084*^9, 3.867382437464134*^9}},
 CellID->520237067,ExpressionUUID->"f7e6a454-3f75-4b2f-890b-3eeb49f4f82c"],

Cell["\<\
The example outputs in this essay are not generated by evaluating the code \
blocks in the \"Constraints, SAT Solving\" and \"The Crossword\" sections. \
See \"How Can I Generate My Own Crosswords?\"\
\>", "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.8669025580976133`*^9, 3.8669025607594957`*^9}, {
   3.866902667154941*^9, 3.866902757089326*^9}, {3.8669398750319443`*^9, 
   3.866940134237485*^9}, {3.8669402198212442`*^9, 3.866940226017555*^9}, {
   3.866940324337501*^9, 3.866940358614797*^9}, {3.86694051306135*^9, 
   3.866940637984743*^9}, {3.866940711411858*^9, 3.866940735513884*^9}, {
   3.866940793439619*^9, 3.8669407995016537`*^9}, {3.8669408898842907`*^9, 
   3.866940928291039*^9}, {3.8669410345016823`*^9, 3.866941076636146*^9}, {
   3.8669829419842253`*^9, 3.866982942361556*^9}, {3.866986096721279*^9, 
   3.8669861402668962`*^9}, {3.866986177815382*^9, 3.866986225229504*^9}, 
   3.867147324066259*^9, {3.867156403131897*^9, 3.867156535373646*^9}, 
   3.8671565796214848`*^9, 3.867156686518524*^9, {3.867157231133678*^9, 
   3.867157265691588*^9}, {3.867157592696327*^9, 3.8671575931348867`*^9}, {
   3.867231101634124*^9, 3.8672311378078203`*^9}, {3.86723150145807*^9, 
   3.86723155363041*^9}, {3.867233971495903*^9, 3.8672340036684437`*^9}, {
   3.867246324662449*^9, 3.867246324862649*^9}, {3.867246380278798*^9, 
   3.867246389335272*^9}, {3.867316764578432*^9, 3.867316797362232*^9}, {
   3.86737192899575*^9, 3.867371987424973*^9}, {3.867382451631472*^9, 
   3.8673824541826487`*^9}, {3.867382530753821*^9, 3.86738254861187*^9}},
 CellID->202006067,ExpressionUUID->"fb0b5ad9-ec05-4b72-8858-1c72262e4085"],

Cell["The following variables are used throughout the essay:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.86714733268155*^9, 3.867147351099172*^9}, {
  3.867229475107419*^9, 3.86722948389874*^9}, {3.867229663724802*^9, 
  3.8672296639064407`*^9}},
 CellID->413635360,ExpressionUUID->"dff05da6-eb85-4fea-a409-1eba898309ca"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"numWords", " ", "=", " ", 
   RowBox[{"Length", "[", "words", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"blankNum", " ", "=", " ", "27"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"alphabetMap", " ", "=", " ", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Alphabet", "[", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", " ", ";;", " ", 
        RowBox[{"blankNum", " ", "-", " ", "1"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"blankNum", " ", "-", " ", "1"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Append", "[", 
   RowBox[{"alphabetMap", ",", " ", 
    RowBox[{"\"\<blank\>\"", " ", "->", " ", "blankNum"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"satVariables", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"satConstraints", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}]}], "Code",
 TaggingRules->{},
 CellChangeTimes->{{3.8669025580976133`*^9, 3.8669025607594957`*^9}, {
  3.866902667154941*^9, 3.866902757089326*^9}, {3.8669398750319443`*^9, 
  3.866940134237485*^9}, {3.8669402198212442`*^9, 3.866940226017555*^9}, {
  3.866940324337501*^9, 3.866940358614797*^9}, {3.86694051306135*^9, 
  3.866940637984743*^9}, {3.866940711411858*^9, 3.866940735513884*^9}, {
  3.866940793439619*^9, 3.8669407995016537`*^9}, {3.8669408898842907`*^9, 
  3.866940928291039*^9}, {3.8669410345016823`*^9, 3.866941076636146*^9}, {
  3.8669829419842253`*^9, 3.866982942361556*^9}, {3.866986096721279*^9, 
  3.8669861402668962`*^9}, {3.866986177815382*^9, 3.866986225229504*^9}, {
  3.867147325055272*^9, 3.8671473260600157`*^9}, {3.867229508814598*^9, 
  3.8672295138989687`*^9}},
 CellID->1085202133,ExpressionUUID->"e4b442b3-db58-40ed-9036-e3414ac68a3e"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["numWords", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{numWords}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "5f00c4ab-d823-4c38-810c-e9d75b6642bd"],
 " stores the length of the words list."
}], "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.867229498496664*^9, 3.8672295284178667`*^9}},
 CellID->1522827300,ExpressionUUID->"a5cc46fe-a066-4c4e-a432-9aab38f46f72"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["blankNum", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{blankNum}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "bc87fd3d-7d3f-40c2-9df4-d299dd57890a"],
 " is a constant denoting which numeric value is assigned to an empty cell. \
Its value is fixed to ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["27", TraditionalForm], "errors" -> {}, "input" -> 
     "27", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "11839bf2-e40c-445c-a8ed-aa4ea0a75e15"],
 "."
}], "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.867229498496664*^9, 3.86722956124592*^9}, {
  3.867229779227639*^9, 3.867229790871956*^9}, {3.8673825823864107`*^9, 
  3.867382586165495*^9}},
 CellID->2065510407,ExpressionUUID->"b20f928c-bd62-4b01-8ebd-29aeee6c96a8"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["alphabetMap", "TI"], TraditionalForm], "errors" -> {}, 
     "input" -> "\\it{alphabetMap}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "39687fbb-651b-4853-abc0-1c9005e538ff"],
 " is a mapping of lowercase alphabets in English to Integer values from ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["1", TraditionalForm], "errors" -> {}, "input" -> "1", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2c9565f9-cc6c-4849-808e-ce54109dfb88"],
 " to ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["26", TraditionalForm], "errors" -> {}, "input" -> 
     "26", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "5f282a72-5052-4c0b-a07c-58847508e91f"],
 ". An empty character is mapped to ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["blankNum", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{blankNum}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "38ca2058-254e-4e37-a536-ca832e5d510c"],
 "."
}], "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.867229498496664*^9, 3.867229626451063*^9}, {
  3.867382576728881*^9, 3.867382580943963*^9}},
 CellID->138693104,ExpressionUUID->"9a9b5870-a317-4348-a946-a01af428c6fa"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["satVariables", "TI"], TraditionalForm], "errors" -> {}, 
     "input" -> "\\it{satVariables}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "0d758127-1bc9-40dd-ac11-5bb74516ab99"],
 " is the final list of variables that will be fed into the SAT solver."
}], "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.867229498496664*^9, 3.867229644380012*^9}},
 CellID->1950734194,ExpressionUUID->"56d29f3a-0b1e-4c0a-9a37-f290483e4e45"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["satConstraints", "TI"], TraditionalForm], "errors" -> {}, 
     "input" -> "\\it{satConstraints}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "632a3b30-f471-4ca2-8965-d15273f925b1"],
 " is the final list of constraints that will be fed into the SAT solver. The \
solver will try to find an assignment of truth values for variables in ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["satVariables", "TI"], TraditionalForm], "errors" -> {}, 
     "input" -> "\\it{satVariables}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "7d16d797-81fc-4e90-bd49-9fcc835f0b0e"],
 " such that every clause in ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["satConstraints", "TI"], TraditionalForm], "errors" -> {}, 
     "input" -> "\\it{satConstraints}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "6591a4cc-0ae4-4167-a871-0d12120d45f1"],
 " evaluates to ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["True", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{True}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2f744d4c-aaa2-4aaa-9b60-15bbdd442f19"],
 ". Formally, this means that the final proposition is in the ",
 StyleBox["conjunctive normal form",
  FontSlant->"Italic"],
 "."
}], "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.867229498496664*^9, 3.867229656419203*^9}, {
  3.867231290165595*^9, 3.8672313830338697`*^9}},
 CellID->530138565,ExpressionUUID->"726db643-becd-4e21-afa4-e8e8a2224173"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Constraints, SAT Solving", "Section",
 TaggingRules->{},
 CellChangeTimes->{{3.866902579267787*^9, 3.86690258450429*^9}, {
  3.866902759005259*^9, 3.866902764822392*^9}, {3.867144395154847*^9, 
  3.8671444053485117`*^9}, {3.8671570857354307`*^9, 3.867157086159607*^9}, {
  3.8673339374545393`*^9, 3.867333940739512*^9}},
 CellID->46032747,ExpressionUUID->"f538743c-a36f-43ff-9533-f940f294f015"],

Cell[CellGroupData[{

Cell["Main Setup", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.867159080598053*^9, 3.8671590828471003`*^9}},
 CellID->1549600826,ExpressionUUID->"2368c4fb-0b58-43ae-b178-6e20bfafc894"],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["wp", "TI"], 
        RowBox[{
          StyleBox["i", "TI"], ",", 
          StyleBox[" ", "TI"], 
          StyleBox["x", "TI"], ",", 
          StyleBox[" ", "TI"], 
          StyleBox["y", "TI"], ",", 
          StyleBox[" ", "TI"], 
          StyleBox["z", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{wp}_{i,\\, x,\\, y,\\, z}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "43d7bf49-5c3b-4e79-9b5d-0564a60f9405"],
 " represent word ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["i", "TI"], TraditionalForm], "errors" -> {}, "input" -> "i", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "53271862-ddd5-42c6-b9e0-4664b299dfc9"],
 " being placed at ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"(", 
         RowBox[{
           StyleBox["x", "TI"], ",", 
           StyleBox["y", "TI"]}], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "(x, y)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "34ee7346-b4a1-4a2b-8216-bba82c7a7cff"],
 " in the crossword grid with ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["z", "TI"], "\[LongEqual]", "0"}], TraditionalForm], 
     "errors" -> {}, "input" -> "z = 0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b589d210-3c43-442f-a4a6-9bf782fb06df"],
 " representing horizontal placement and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["z", "TI"], "\[LongEqual]", "1"}], TraditionalForm], 
     "errors" -> {}, "input" -> "z = 1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "3919d2a8-be67-4005-a8ac-94d44bc11f18"],
 " representing vertical placement."
}], "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.866902579267787*^9, 3.86690258450429*^9}, {
   3.866902759005259*^9, 3.8669027839229918`*^9}, {3.866982927164057*^9, 
   3.866982927492489*^9}, {3.866983589457282*^9, 3.8669835894641123`*^9}, {
   3.866983732515355*^9, 3.866984077513154*^9}, {3.86698416536206*^9, 
   3.866984198210582*^9}, {3.866984237091152*^9, 3.866984240272683*^9}, {
   3.866984272304813*^9, 3.8669843417212067`*^9}, {3.866986261817626*^9, 
   3.86698626265685*^9}, {3.866986325179429*^9, 3.866986395811084*^9}, {
   3.867043061350284*^9, 3.867043082057521*^9}, {3.867157096229679*^9, 
   3.8671571524132433`*^9}, {3.867229432479944*^9, 3.8672294405429573`*^9}, 
   3.867246936389352*^9, {3.8673993855394278`*^9, 3.867399388350431*^9}},
 CellID->845512656,ExpressionUUID->"e0b4cc2f-1446-40d5-9eef-716e73bbe8e0"],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["alpha", "TI"], 
         RowBox[{
           StyleBox["i", "TI"], ",", 
           StyleBox[" ", "TI"], 
           StyleBox["x", "TI"], ",", 
           StyleBox[" ", "TI"], 
           StyleBox["y", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
      "\\it{alpha}_{i,\\, x,\\, y}", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], " "}], TraditionalForm]],ExpressionUUID->
  "dedeffbd-91b9-4db0-ab6e-93a669f086a5"],
 "represent alphabet ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["i", "TI"], TraditionalForm], "errors" -> {}, "input" -> "i", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d8fedeed-730f-479a-ac09-6f47f459b8c5"],
 " being placed at ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"(", 
         RowBox[{
           StyleBox["x", "TI"], ",", 
           StyleBox["y", "TI"]}], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "(x, y)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1261d73b-8167-4cbc-9182-f5e656ea1b84"],
 " in the crossword grid. ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["i", "TI"], TraditionalForm], "errors" -> {}, "input" -> "i", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1d71f25e-fdb7-4558-906d-20cf4fd2becf"],
 " is an integer value in the range ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"[", 
         RowBox[{"1", ",", "27"}], "]"}], TraditionalForm], "errors" -> {}, 
     "input" -> "[1, 27]", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "eeacde2e-5a0a-481a-9610-abdd543c3a73"],
 ". Values ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["1", TraditionalForm], "errors" -> {}, "input" -> "1", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "83ef8021-d8cb-4e64-a3e1-965cc334c6fc"],
 " through ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["26", TraditionalForm], "errors" -> {}, "input" -> 
     "26", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "63f5a5f1-86a7-4883-95e9-c4bdefafdde5"],
 " represent characters from \"a\" through \"z\" while ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["27", TraditionalForm], "errors" -> {}, "input" -> 
     "27", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "376a3345-33c4-4b86-95e6-d92e6a64fc08"],
 " represents an empty character."
}], "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.866902579267787*^9, 3.86690258450429*^9}, {
  3.866902759005259*^9, 3.8669027839229918`*^9}, {3.866982927164057*^9, 
  3.866982927492489*^9}, {3.866983589457282*^9, 3.8669835894641123`*^9}, {
  3.866983732515355*^9, 3.866984077513154*^9}, {3.86698416536206*^9, 
  3.866984198210582*^9}, {3.866984237091152*^9, 3.866984240272683*^9}, {
  3.866984272304813*^9, 3.8669843417212067`*^9}, {3.866986261817626*^9, 
  3.86698626265685*^9}, {3.866986325179429*^9, 3.866986395811084*^9}, {
  3.867043061350284*^9, 3.867043082057521*^9}, {3.867157096229679*^9, 
  3.8671571524132433`*^9}, {3.867229432479944*^9, 3.8672294405429573`*^9}, {
  3.8673328296493387`*^9, 3.867332857784464*^9}, {3.867382617521734*^9, 
  3.8673826211867456`*^9}},
 CellID->1203046640,ExpressionUUID->"a2e84951-ef14-46dc-beeb-a614f1615230"],

Cell[TextData[{
 "Each word can only be placed at ",
 StyleBox["one",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " position in the grid. This means that among all ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["wp", "TI"], 
        StyleBox["i", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{wp}_{i}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "bf469c21-8768-42e4-b988-2ef1cbdf6f3f"],
 " for a particular word, we require ",
 StyleBox["exactly one",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " of those variables to be true."
}], "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.866902579267787*^9, 3.86690258450429*^9}, {
   3.866902759005259*^9, 3.8669027839229918`*^9}, {3.866982927164057*^9, 
   3.866982927492489*^9}, {3.866983589457282*^9, 3.8669835894641123`*^9}, {
   3.866983732515355*^9, 3.866984077513154*^9}, {3.86698416536206*^9, 
   3.866984198210582*^9}, {3.866984237091152*^9, 3.866984240272683*^9}, {
   3.866984272304813*^9, 3.8669844406733427`*^9}, {3.866984471616149*^9, 
   3.866984591275277*^9}, {3.867157676003428*^9, 3.867157850136985*^9}, {
   3.867158675734473*^9, 3.8671586810318336`*^9}, 3.867246939042041*^9},
 CellID->1015524914,ExpressionUUID->"af56b0b3-31cd-4a65-812e-88c2b0701539"],

Cell[CellGroupData[{

Cell[TextData[{
 "Each cell in the grid can contain ",
 StyleBox["at most one",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " letter. If it doesn't contain a letter, it will be empty. This means that \
for a particular location ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"(", 
         RowBox[{
           StyleBox["x", "TI"], ",", 
           StyleBox["y", "TI"]}], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "(x, y)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "799179d4-a0ee-4de6-a778-fef8f55b0581"],
 ", among all ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["alpha", "TI"], 
        RowBox[{
          StyleBox["i", "TI"], ",", 
          StyleBox[" ", "TI"], 
          StyleBox["x", "TI"], ",", 
          StyleBox[" ", "TI"], 
          StyleBox["y", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{alpha}_{i,\\, x,\\, y}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "ba703832-f320-4e2a-b36d-710d7440fdbc"],
 ", ",
 StyleBox["at most one",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " variable can be true. "
}], "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.866902579267787*^9, 3.86690258450429*^9}, {
   3.866902759005259*^9, 3.8669027839229918`*^9}, {3.866982927164057*^9, 
   3.866982927492489*^9}, {3.866983589457282*^9, 3.8669835894641123`*^9}, {
   3.866983732515355*^9, 3.866984077513154*^9}, {3.86698416536206*^9, 
   3.866984198210582*^9}, {3.866984237091152*^9, 3.866984240272683*^9}, {
   3.866984272304813*^9, 3.8669844406733427`*^9}, {3.866984471616149*^9, 
   3.866984591275277*^9}, {3.867157676003428*^9, 3.867157850136985*^9}, {
   3.867158675734473*^9, 3.8671586810318336`*^9}, 3.8672470104838533`*^9},
 CellID->1046341975,ExpressionUUID->"7abc263c-d0eb-449d-aea8-4a28b16a50a8"],

Cell[TextData[{
 "Even though we define a ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SuperscriptBox["27", 
        StyleBox["th", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
     "27^{\\it{th}}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "ad4bc908-24bd-4b55-beba-ba0e0c04b627"],
 " value to denote a blank cell, we use the ",
 StyleBox["at most one ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "constraint instead of the ",
 StyleBox["exactly one",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " constraint because it is logically equivalent and its enforcement requires \
one clause less."
}], "Subitem",
 TaggingRules->{},
 CellChangeTimes->{{3.866902579267787*^9, 3.86690258450429*^9}, {
  3.866902759005259*^9, 3.8669027839229918`*^9}, {3.866982927164057*^9, 
  3.866982927492489*^9}, {3.866983589457282*^9, 3.8669835894641123`*^9}, {
  3.866983732515355*^9, 3.866984077513154*^9}, {3.86698416536206*^9, 
  3.866984198210582*^9}, {3.866984237091152*^9, 3.866984240272683*^9}, {
  3.866984272304813*^9, 3.8669844406733427`*^9}, {3.866984471616149*^9, 
  3.866984591275277*^9}, {3.867157676003428*^9, 3.867157850136985*^9}, {
  3.867158675734473*^9, 3.8671586810318336`*^9}},
 CellID->125988542,ExpressionUUID->"5a068f36-50be-472b-bafd-e680aa1b619f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["oneTrue", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{oneTrue}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "3df8e652-7b9b-4d75-aba4-f7efb4388904"],
 "[]"
}], "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.867159093623644*^9, 3.8671591071613913`*^9}, {
  3.867159395369555*^9, 3.867159396639374*^9}},
 CellID->2008940669,ExpressionUUID->"ea61266e-161b-4f3c-a08e-e3d1be6e5cd2"],

Cell[CellGroupData[{

Cell["The Function", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.867159387522753*^9, 3.867159392300988*^9}},
 CellID->1385909908,ExpressionUUID->"87524243-34ce-4168-b37a-ddf30de0921e"],

Cell[TextData[{
 "Function ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["oneTrue", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{oneTrue}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f093603e-eae2-4b9f-9159-6224a6423a49"],
 "[] takes in a list of variables and generates constraints on those \
variables to enforce the ",
 StyleBox["exactly one",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " or the ",
 StyleBox["at most one ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "condition:"
}], "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.866902579267787*^9, 3.86690258450429*^9}, {
  3.866902759005259*^9, 3.8669027839229918`*^9}, {3.866982927164057*^9, 
  3.866982927492489*^9}, {3.866983589457282*^9, 3.8669835894641123`*^9}, {
  3.866983732515355*^9, 3.866984077513154*^9}, {3.86698416536206*^9, 
  3.866984198210582*^9}, {3.866984237091152*^9, 3.866984240272683*^9}, {
  3.866984272304813*^9, 3.8669844406733427`*^9}, {3.866984471616149*^9, 
  3.866984628622305*^9}, {3.866984940360301*^9, 3.8669850195062523`*^9}, {
  3.867042119482799*^9, 3.867042147856098*^9}, {3.867043414388873*^9, 
  3.867043416006961*^9}, {3.867157862946604*^9, 3.8671578651471033`*^9}, {
  3.867158968311316*^9, 3.86715900837608*^9}, {3.867229803595649*^9, 
  3.867229811219883*^9}, {3.8672458131875343`*^9, 3.867245814196066*^9}},
 CellID->1142010376,ExpressionUUID->"4248090d-29dc-4c51-83f8-e6aeec3f0079"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"oneTrue", "[", 
    RowBox[{"x0_List", ",", " ", "atMost0_Integer"}], "]"}], " ", ":=", " ", 
   "\n", "  ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"variables", " ", "=", " ", "x0"}], ",", " ", 
       RowBox[{"atMost", " ", "=", " ", "atMost0"}]}], "}"}], ",", "\n", 
     "   ", 
     RowBox[{
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\n", "   ", 
      RowBox[{"listSize", " ", "=", " ", 
       RowBox[{"Length", "[", "variables", "]"}]}], ";", "\n", "   ", "\n", 
      "   ", 
      RowBox[{"prefFunc", " ", "=", " ", 
       RowBox[{"\"\<pref\>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", 
         RowBox[{"Head", "@", 
          RowBox[{"variables", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], ";", "\n", "   ", 
      RowBox[{"prefVariables", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"prefFunc", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "&"}], " ", "/@", " ", 
        "variables"}]}], ";", "\n", "   ", "\n", "   ", 
      RowBox[{"prefConstraints", " ", "=", " ", 
       RowBox[{
        RowBox[{"Table", "[", "\n", "      ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Implies", "[", 
             RowBox[{
              RowBox[{"variables", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
              RowBox[{"prefVariables", "[", 
               RowBox[{"[", 
                RowBox[{"i", " ", "+", " ", "1"}], "]"}], "]"}]}], "]"}], ",",
             "\n", "       ", 
            RowBox[{"Implies", "[", 
             RowBox[{
              RowBox[{"prefVariables", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
              RowBox[{"prefVariables", "[", 
               RowBox[{"[", 
                RowBox[{"i", " ", "+", " ", "1"}], "]"}], "]"}]}], "]"}], ",",
             "\n", "       ", 
            RowBox[{"Implies", "[", 
             RowBox[{
              RowBox[{"prefVariables", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
              RowBox[{"Not", "@", 
               RowBox[{"variables", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}]}], "}"}], ",", "\n",
           "      ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"listSize", " ", "-", " ", "1"}]}], "}"}]}], "\n", 
         "      ", "]"}], " ", "//", " ", "Flatten"}]}], ";", "\n", "   ", 
      "\n", "   ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"prefConstraints", ",", " ", "\n", "    ", 
        RowBox[{"Implies", "[", 
         RowBox[{
          RowBox[{"prefVariables", "[", 
           RowBox[{"[", "listSize", "]"}], "]"}], ",", " ", 
          RowBox[{"Not", "@", 
           RowBox[{"variables", "[", 
            RowBox[{"[", "listSize", "]"}], "]"}]}]}], "]"}]}], "]"}], ";", 
      "\n", "   ", "\n", "   ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"atMost", " ", "==", " ", "0"}], ",", " ", "\n", "    ", 
        RowBox[{"finalConstraints", " ", "=", " ", 
         RowBox[{
          RowBox[{"Or", " ", "@@", " ", "variables"}], " ", "&&", " ", 
          RowBox[{"And", " ", "@@", " ", "prefConstraints"}]}]}], ",", " ", 
        "\n", "    ", 
        RowBox[{"finalConstraints", " ", "=", " ", 
         RowBox[{"And", " ", "@@", " ", "prefConstraints"}]}]}], "]"}], ";", 
      "\n", "   ", 
      RowBox[{"finalVarList", " ", "=", " ", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"variables", ",", " ", "prefVariables"}], "]"}], " ", "//", 
        " ", "Flatten"}]}], ";", "\n", "   ", "\n", "   ", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"finalVarList", ",", " ", "finalConstraints"}], "}"}], "]"}], 
      ";"}]}], "\n", "   ", "]"}]}], ";"}]], "Code",
 TaggingRules->{},
 CellChangeTimes->{{3.866902579267787*^9, 3.86690258450429*^9}, {
   3.866902759005259*^9, 3.8669027839229918`*^9}, {3.866982927164057*^9, 
   3.866982927492489*^9}, {3.8669836358270283`*^9, 3.866983657300167*^9}, 
   3.8669836926324043`*^9, 3.867042103363867*^9, 3.867042143058971*^9, 
   3.867052913479978*^9, 3.867144781821224*^9, {3.867229914405099*^9, 
   3.867229947398816*^9}, {3.867245400674214*^9, 3.867245425055972*^9}, {
   3.867332961243883*^9, 3.8673329701015453`*^9}},
 CellID->1420465418,ExpressionUUID->"41fe962a-eef1-4823-82dc-9d95815a6a3b"],

Cell[TextData[{
 "For a list ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["C", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{C}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "27448283-fb66-425a-bd4c-b12319750c16"],
 " of size ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["N", "TI"], TraditionalForm], "errors" -> {}, "input" -> "N", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "9e6e7e6b-9a1f-4946-b9bd-03024e720d40"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["oneTrue", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{oneTrue}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a27a23e0-de05-45d1-bf25-781aca238aa4"],
 "[] creates ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["N", "TI"], TraditionalForm], "errors" -> {}, "input" -> "N", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "991bb8aa-10e8-4dd9-8917-71fa92e00347"],
 " additional variables. Let's denote the ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SuperscriptBox[
        StyleBox["i", "TI"], 
        StyleBox["th", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
     "i^{\\it{th}}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "6a82849c-2555-4d2d-806d-52fb3cc03d04"],
 " variable as ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["pref", "TI"], 
        StyleBox["i", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{pref}_{i}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1e930bda-2203-410e-8712-dd5b1fa04315"],
 " for simplicity. ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["pref", "TI"], 
         StyleBox["i", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
      "\\it{pref}_i", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"]}], TraditionalForm]],ExpressionUUID->
  "954471fd-9344-440f-8b1d-9e1be493b0c3"],
 " is defined to be ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["True", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{True}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "43ce359c-7830-4542-af61-a13965488daa"],
 " if there exists a ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["C", "TI"], 
        StyleBox["j", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{C}_{j}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a0c70485-ad9d-406b-ac71-851c01b1c915"],
 " (",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"1", "\[LessEqual]", 
         StyleBox["j", "TI"], "\[LessEqual]", 
         StyleBox["i", "TI"], "-", "1"}], TraditionalForm], "errors" -> {}, 
     "input" -> "1 \\le j \\le i - 1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "225c5f34-6529-4506-b7c5-55b9858377ea"],
 ") that is ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["True", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{True}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "43145b8f-2109-4393-8839-d9e55e41284a"],
 " (the prefix ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"[", 
         RowBox[{"1", ",", 
           StyleBox["i", "TI"], "-", "1"}], "]"}], TraditionalForm], 
     "errors" -> {}, "input" -> "[1, i - 1]", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "de4e23be-7e2e-4ea4-8123-30c6a8475c71"],
 " of ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["C", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{C}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b18db486-31ef-4883-a64c-851cd52f2403"],
 "). We have the following logical implications from this setup:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867042228875186*^9, 3.8670423323050127`*^9}, {
  3.8670423884371*^9, 3.867042577396879*^9}, {3.867042840410207*^9, 
  3.8670428413819227`*^9}, {3.867382805390183*^9, 3.867382879986163*^9}},
 CellID->701023275,ExpressionUUID->"f81e7d5b-a4b5-4f5b-bc2e-3fe1115818e8"],

Cell[TextData[{
 "If ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["C", "TI"], 
        StyleBox["i", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
     "$C_i$", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "adc5ffb8-f9d7-4e63-bacc-fc01067cb073"],
 " is ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["True", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "$\\it{True}$", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b25ba2df-03c0-4fde-a1ba-3ca9ab8e6ae7"],
 " then ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["pref", "TI"], 
        RowBox[{
          StyleBox["i", "TI"], "+", 
          StyleBox["1", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "$\\it{pref}_{i + 1}$", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "67f7263e-44db-46da-9dc2-de23cc83327e"],
 " ",
 StyleBox["must",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " be ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["True", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "$\\it{True}$", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "ce9e2028-898f-4f0d-a9e8-46456581e504"],
 "."
}], "ItemNumbered",
 TaggingRules->{},
 CellChangeTimes->{{3.867042228875186*^9, 3.8670423323050127`*^9}, {
  3.8670423884371*^9, 3.867042568170726*^9}, {3.867042698362597*^9, 
  3.867042746382859*^9}, {3.867042857293529*^9, 3.867042857969893*^9}},
 CellID->1763857461,ExpressionUUID->"ef13ff2f-da37-4982-ae51-856bf40f7572"],

Cell[TextData[{
 "If ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["pref", "TI"], 
        StyleBox["i", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
     "$\\it{pref}_i$", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "cca22598-6edf-4d54-aa01-02c67ce65a7a"],
 " is ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["True", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "$\\it{True}$", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b97717fa-67e5-494a-8779-438c89cf0f93"],
 " then ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["pref", "TI"], 
        RowBox[{
          StyleBox["i", "TI"], "+", 
          StyleBox["1", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "$\\it{pref}_{i + 1}$", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4da567ce-2bab-4327-9117-3c9f2532dd64"],
 " ",
 StyleBox["must",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " be ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["True", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "$\\it{True}$", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "3ac2511c-0839-4cf5-8097-6561d1cbec14"],
 "."
}], "ItemNumbered",
 TaggingRules->{},
 CellChangeTimes->{{3.867042228875186*^9, 3.8670423323050127`*^9}, {
  3.8670423884371*^9, 3.867042568170726*^9}, {3.867042698362597*^9, 
  3.867042727541152*^9}, {3.8670428738753633`*^9, 3.867042926382641*^9}},
 CellID->1530663813,ExpressionUUID->"5a847731-8963-4346-ba4b-c7fd0643c749"],

Cell[TextData[{
 "If ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["pref", "TI"], 
        StyleBox["i", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
     "$\\it{pref}_i$", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1a45c34b-c652-4d9d-879e-2556160ea564"],
 " is ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["True", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "$\\it{True}$", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "ccb5af8c-85ea-426c-9e4f-6570d9363de7"],
 " then ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["C", "TI"], 
        StyleBox["i", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
     "$C_i$", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d6d7e960-9a49-4ce7-8ccd-52574032f4a9"],
 " ",
 StyleBox["must",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " be ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["False", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "$\\it{False}$", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "7414b724-a8e0-4826-9070-9cd8eb480f4d"],
 "."
}], "ItemNumbered",
 TaggingRules->{},
 CellChangeTimes->{{3.867042228875186*^9, 3.8670423323050127`*^9}, {
  3.8670423884371*^9, 3.867042568170726*^9}, {3.867042698362597*^9, 
  3.867042727541152*^9}, {3.8670428738753633`*^9, 3.867042938209793*^9}},
 CellID->483974490,ExpressionUUID->"d6972dbb-93d9-478b-a3d0-b2c181c0366c"],

Cell[TextData[{
 StyleBox["These constraints enforce the ",
  FontSlant->"Italic"],
 StyleBox["at most one",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" condition. To enforce the ",
  FontSlant->"Italic"],
 StyleBox["exactly one ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["condition, we simply add another clause ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"(", 
         RowBox[{
           SubscriptBox[
            StyleBox["C", "TI"], "1"], "\[Vee]", 
           SubscriptBox[
            StyleBox["C", "TI"], "2"], "\[Vee]", 
           SubscriptBox[
            StyleBox["C", "TI"], "3"], "\[Vee]", "\[Ellipsis]", 
           SubscriptBox[
            StyleBox["C", "TI"], 
            StyleBox["N", "TI"]]}], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "(C_1 \\lor C_2 \\lor C_3 \\lor \[Ellipsis]  C_N)", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b5a27157-619c-4340-8935-fa63d9fd8942"],
 StyleBox[" which, if used alone, signifies that ",
  FontSlant->"Italic"],
 StyleBox["at least one",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" value must be ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["True", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{True}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4a299e07-0f25-4a7c-8f49-6421e66e5651"],
 StyleBox[".\nNote: The additional variables created are present only to \
enforce our constraints. We do not care about their final truth values.",
  FontSlant->"Italic"]
}], "Text",
 TaggingRules->{"AttachedInlineCell" -> CellObject[429489]},
 CellChangeTimes->{{3.867042989261902*^9, 3.867043053108109*^9}, {
   3.8670431049122353`*^9, 3.867043133002911*^9}, {3.867043197450409*^9, 
   3.8670432035438223`*^9}, {3.8670434645910482`*^9, 3.867043506668861*^9}, {
   3.8670516192389097`*^9, 3.8670516234116898`*^9}, {3.867229843677202*^9, 
   3.8672298853535023`*^9}, 3.867318001494481*^9, 3.8673341359706297`*^9, {
   3.8673829107085342`*^9, 3.867382938927938*^9}, 3.867402782251851*^9},
 CellID->279766939,ExpressionUUID->"eb3c5229-2384-4ae3-855b-383def588f9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Its Application", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.8671593777688007`*^9, 3.867159381740189*^9}},
 CellID->706601752,ExpressionUUID->"45ef7cc8-5ea5-4d47-b747-67e35a1bd56f"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["oneTrue", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{oneTrue}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a70d6ce6-54f6-4a6c-9e71-bcf123133a91"],
 "[] is used to make sure that every word is placed in ",
 StyleBox["exactly one",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " cell of the crossword and that every cell has ",
 StyleBox["at most one letter",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " present in it."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867042989261902*^9, 3.867043053108109*^9}, {
  3.8670431049122353`*^9, 3.867043133002911*^9}, {3.867043197450409*^9, 
  3.8670432035438223`*^9}, {3.8670434645910482`*^9, 3.867043506668861*^9}, {
  3.8670516192389097`*^9, 3.8670517352939663`*^9}, {3.8671576156291027`*^9, 
  3.8671576245988007`*^9}},
 CellID->1500473072,ExpressionUUID->"f0daece1-8cc0-4bee-bcfb-3ee790cedfbe"],

Cell[TextData[{
 "Generating ",
 StyleBox["exactly one",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " constraints on word placements and ",
 StyleBox["at most one",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " constraints on letter placements:"
}], "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.867245734701103*^9, 3.867245777157984*^9}, {
  3.867246748598741*^9, 3.867246758406355*^9}},
 CellID->106265360,ExpressionUUID->"785a6f5c-4221-480c-910d-0ac9ce9c5d3e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"wordPlacementConstraints", " ", "=", " ", 
    RowBox[{"Table", "[", "\n", "   ", 
     RowBox[{
      RowBox[{"oneTrue", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"wp", "[", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "i", ",", " ", "j", ",", " ", "k"}], 
             "}"}], "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "1", ",", " ", "gridSize"}], "}"}], ",", 
           " ", 
           RowBox[{"{", 
            RowBox[{"j", ",", " ", "1", ",", " ", "gridSize"}], "}"}], ",", 
           " ", 
           RowBox[{"{", 
            RowBox[{"k", ",", " ", "0", ",", "1"}], "}"}]}], "]"}], " ", "//",
          " ", "Flatten"}], ",", " ", "0"}], "]"}], ",", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "1", ",", " ", "numWords"}], "}"}]}], "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"alphabetPlacementContraints", " ", "=", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"oneTrue", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"alpha", "[", 
              RowBox[{"{", 
               RowBox[{"x", ",", " ", "i", ",", " ", "j"}], "}"}], "]"}], ",",
              " ", 
             RowBox[{"{", 
              RowBox[{"x", ",", " ", "1", ",", " ", "blankNum"}], "}"}]}], 
            "]"}], " ", "//", " ", "Flatten"}], ",", " ", "1"}], "]"}], ",", 
        "\n", "    ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "1", ",", " ", "gridSize"}], "}"}], ",", " ", 
        
        RowBox[{"{", 
         RowBox[{"j", ",", " ", "1", ",", " ", "gridSize"}], "}"}]}], "]"}], 
      ",", " ", "1"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"satVariables", ",", " ", 
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], " ", "&"}], " ", "/@", " ", 
   "wordPlacementConstraints"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"satConstraints", ",", " ", 
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}], " ", "&"}], " ", "/@", " ", 
   "wordPlacementConstraints"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"satVariables", ",", " ", 
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], " ", "&"}], " ", "/@", " ", 
   "alphabetPlacementContraints"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"satConstraints", ",", " ", 
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}], " ", "&"}], " ", "/@", " ", 
   "alphabetPlacementContraints"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"satVariables", " ", "=", " ", 
   RowBox[{"satVariables", " ", "//", " ", "Flatten"}]}], ";"}]}], "Code",
 TaggingRules->{},
 CellChangeTimes->{{3.867042989261902*^9, 3.867043053108109*^9}, {
  3.8670431049122353`*^9, 3.867043133002911*^9}, {3.867043197450409*^9, 
  3.8670432035438223`*^9}, {3.8670434645910482`*^9, 3.867043506668861*^9}, {
  3.8670516192389097`*^9, 3.867051703149063*^9}, {3.867229963570293*^9, 
  3.867229972615408*^9}},
 CellID->1914990853,ExpressionUUID->"e1aef048-8c8b-4249-b278-35ae5c31e50e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Word - Letter Implications", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.867159123716152*^9, 3.867159128766768*^9}},
 CellID->1247321661,ExpressionUUID->"b0277c8d-72b9-415e-8fda-236709853e82"],

Cell[TextData[{
 "What letter implications are created when a word is placed at a particular \
cell? Consider the word ",
 StyleBox["\"wolfram\"",
  FontSlant->"Italic"],
 " being placed horizontally at the position ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"(", 
         RowBox[{"1", ",", "1"}], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "(1, 1)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "02daa5f2-66e3-4c1c-8d4b-1e8083a7cd62"],
 ". If \"wolfram\" is the first word in our word list, ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["i", "TI"], "\[LongEqual]", "1"}], TraditionalForm], 
     "errors" -> {}, "input" -> "i = 1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "50b4bf4e-d8d4-4954-9560-1bb4c515053e"],
 " in the definition of ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["wp", "TI"], 
        RowBox[{
          StyleBox["i", "TI"], ",", 
          StyleBox[" ", "TI"], 
          StyleBox["x", "TI"], ",", 
          StyleBox[" ", "TI"], 
          StyleBox["y", "TI"], ",", 
          StyleBox[" ", "TI"], 
          StyleBox["z", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{wp}_{i,\\, x,\\, y,\\, z}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "bc8f4cb3-a67e-4ecc-ad40-8bba685c82c5"],
 ". So, we have ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["wp", "TI"], 
        RowBox[{
          StyleBox["1", "TI"], ",", 
          StyleBox[" ", "TI"], 
          StyleBox["1", "TI"], ",", 
          StyleBox[" ", "TI"], 
          StyleBox["1", "TI"], ",", 
          StyleBox[" ", "TI"], 
          StyleBox["0", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{wp}_{1,\\, 1,\\, 1,\\, 0}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4f6bb25d-1b20-4802-84aa-c268fae563af"],
 " representing ",
 StyleBox["\"wolfram\"",
  FontSlant->"Italic"],
 " being placed horizontally at ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"(", 
         RowBox[{"1", ",", "1"}], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "(1, 1)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "00454e63-6c45-43f3-a2a6-0ee33b2f9e23"],
 ". This has the following logical implication:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867051766504427*^9, 3.867052050364496*^9}, {
  3.867052346469911*^9, 3.8670523477300158`*^9}, {3.867159871115933*^9, 
  3.867159896712914*^9}},
 FontFamily->"Source Sans Pro",
 FontSize->15,
 CellID->1016876241,ExpressionUUID->"5f6a1f50-5afe-4431-8761-9c24eb6dc677"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[<|"boxes" -> FormBox[
      RowBox[{
        SubscriptBox[
         StyleBox["wp", "TI"], 
         RowBox[{
           StyleBox["1", "TI"], ",", 
           StyleBox[" ", "TI"], 
           StyleBox["1", "TI"], ",", 
           StyleBox[" ", "TI"], 
           StyleBox["1", "TI"], ",", 
           StyleBox[" ", "TI"], 
           StyleBox["0", "TI"]}]], 
        StyleBox[" ", "TI"], "\[DoubleLongRightArrow]", 
        StyleBox[" ", "TI"], 
        RowBox[{"(", 
          RowBox[{
            SubscriptBox[
             StyleBox["alpha", "TI"], 
             RowBox[{
               StyleBox["23", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["1", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["1", "TI"]}]], 
            StyleBox[" ", "TI"], "\[Wedge]", 
            StyleBox[" ", "TI"], 
            SubscriptBox[
             StyleBox["alpha", "TI"], 
             RowBox[{
               StyleBox["15", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["1", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["2", "TI"]}]], 
            StyleBox[" ", "TI"], "\[Wedge]", 
            StyleBox[" ", "TI"], 
            SubscriptBox[
             StyleBox["alpha", "TI"], 
             RowBox[{
               StyleBox["12", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["1", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["3", "TI"]}]], 
            StyleBox[" ", "TI"], "\[Wedge]", 
            StyleBox[" ", "TI"], 
            SubscriptBox[
             StyleBox["alpha", "TI"], 
             RowBox[{
               StyleBox["6", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["1", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["4", "TI"]}]], 
            StyleBox[" ", "TI"], "\[Wedge]", 
            StyleBox[" ", "TI"], 
            SubscriptBox[
             StyleBox["alpha", "TI"], 
             RowBox[{
               StyleBox["18", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["1", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["5", "TI"]}]], 
            StyleBox[" ", "TI"], "\[Wedge]", 
            StyleBox[" ", "TI"], 
            SubscriptBox[
             StyleBox["alpha", "TI"], 
             RowBox[{
               StyleBox["1", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["1", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["6", "TI"]}]], 
            StyleBox[" ", "TI"], "\[Wedge]", 
            StyleBox[" ", "TI"], 
            SubscriptBox[
             StyleBox["alpha", "TI"], 
             RowBox[{
               StyleBox["13", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["1", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["7", "TI"]}]]}], ")"}]}], TraditionalForm], 
    "errors" -> {}, "input" -> 
    "\\it{wp}_{1,\\, 1,\\, 1,\\, 0} \\, \\implies \\, (\\it{alpha}_{23,\\, 1,\
\\, 1} \\, \\land \\, \\it{alpha}_{15,\\, 1,\\, 2} \\, \\land \\, \
\\it{alpha}_{12,\\, 1,\\, 3} \\, \\land \\, \\it{alpha}_{6,\\, 1,\\, 4} \\, \
\\land \\, \\it{alpha}_{18,\\, 1,\\, 5} \\, \\land \\, \\it{alpha}_{1,\\, \
1,\\, 6} \\, \\land \\, \\it{alpha}_{13,\\, 1,\\, 7})", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], 
  TraditionalForm]],ExpressionUUID->"54caaa71-35bf-487d-b1c4-c8487a1f4f2f"]], \
"Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867051766504427*^9, 3.8670521599794703`*^9}, {
   3.867052458596066*^9, 3.867052521140747*^9}, 3.867052781689228*^9, {
   3.867389356425418*^9, 3.86738935875776*^9}},
 TextAlignment->Center,
 FontSize->17,
 CellID->1195908432,ExpressionUUID->"09af6554-a1d2-4a3f-a833-10ce6952543d"],

Cell[TextData[{
 "There's a slight issue with this approach. What if we have the words ",
 StyleBox["\"wolfram\" ",
  FontSlant->"Italic"],
 "and ",
 StyleBox["\"wolf\"",
  FontSlant->"Italic"],
 "? Placing a single word ",
 StyleBox["\"wolfram\"",
  FontSlant->"Italic"],
 " could satisfy the boolean formula. Technically, the solver can place ",
 StyleBox["\"wolf\"",
  FontSlant->"Italic"],
 " inside ",
 StyleBox["\"wolfram\"",
  FontSlant->"Italic"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8671395786411123`*^9, 3.8671396051529083`*^9}, {
   3.867146498415215*^9, 3.867146526506136*^9}, {3.867158837262844*^9, 
   3.867158854089499*^9}, {3.867230083686487*^9, 3.867230195753983*^9}, {
   3.8672302266884003`*^9, 3.8672303343314943`*^9}, 3.8672305854634733`*^9, {
   3.867399813776511*^9, 3.867399813875752*^9}},
 CellID->310498368,ExpressionUUID->"55502eee-4319-4516-82cf-b00e9284c0a9"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[<|"boxes" -> FormBox[
      RowBox[{
        SubscriptBox[
         StyleBox["wp", "TI"], 
         RowBox[{
           StyleBox["1", "TI"], ",", 
           StyleBox[" ", "TI"], 
           StyleBox["1", "TI"], ",", 
           StyleBox[" ", "TI"], 
           StyleBox["1", "TI"], ",", 
           StyleBox[" ", "TI"], 
           StyleBox["0", "TI"]}]], 
        StyleBox[" ", "TI"], "\[DoubleLongRightArrow]", 
        StyleBox[" ", "TI"], 
        RowBox[{"(", 
          RowBox[{
            SubscriptBox[
             StyleBox["alpha", "TI"], 
             RowBox[{
               StyleBox["23", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["1", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["1", "TI"]}]], 
            StyleBox[" ", "TI"], "\[Wedge]", 
            StyleBox[" ", "TI"], 
            SubscriptBox[
             StyleBox["alpha", "TI"], 
             RowBox[{
               StyleBox["15", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["1", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["2", "TI"]}]], 
            StyleBox[" ", "TI"], "\[Wedge]", 
            StyleBox[" ", "TI"], 
            SubscriptBox[
             StyleBox["alpha", "TI"], 
             RowBox[{
               StyleBox["12", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["1", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["3", "TI"]}]], 
            StyleBox[" ", "TI"], "\[Wedge]", 
            StyleBox[" ", "TI"], 
            SubscriptBox[
             StyleBox["alpha", "TI"], 
             RowBox[{
               StyleBox["6", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["1", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["4", "TI"]}]], 
            StyleBox[" ", "TI"], "\[Wedge]", 
            StyleBox[" ", "TI"], 
            SubscriptBox[
             StyleBox["alpha", "TI"], 
             RowBox[{
               StyleBox["18", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["1", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["5", "TI"]}]], 
            StyleBox[" ", "TI"], "\[Wedge]", 
            StyleBox[" ", "TI"], 
            SubscriptBox[
             StyleBox["alpha", "TI"], 
             RowBox[{
               StyleBox["1", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["1", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["6", "TI"]}]], 
            StyleBox[" ", "TI"], "\[Wedge]", 
            StyleBox[" ", "TI"], 
            SubscriptBox[
             StyleBox["alpha", "TI"], 
             RowBox[{
               StyleBox["13", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["1", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["7", "TI"]}]]}], ")"}], 
        StyleBox[" ", "TI"], "\[Wedge]", 
        StyleBox[" ", "TI"], 
        RowBox[{"(", 
          RowBox[{
            SubscriptBox[
             StyleBox["wp", "TI"], 
             RowBox[{
               StyleBox["1", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["1", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["1", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["0", "TI"]}]], 
            StyleBox[" ", "TI"], "\[DoubleLongRightArrow]", 
            StyleBox[" ", "TI"], 
            SubscriptBox[
             StyleBox["alpha", "TI"], 
             RowBox[{
               StyleBox["27", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["1", "TI"], ",", 
               StyleBox[" ", "TI"], 
               StyleBox["8", "TI"]}]]}], ")"}]}], TraditionalForm], 
    "errors" -> {}, "input" -> 
    "\\it{wp}_{1,\\, 1,\\, 1,\\, 0} \\, \\implies \\, (\\it{alpha}_{23,\\, 1,\
\\, 1} \\, \\land \\, \\it{alpha}_{15,\\, 1,\\, 2} \\, \\land \\, \
\\it{alpha}_{12,\\, 1,\\, 3} \\, \\land \\, \\it{alpha}_{6,\\, 1,\\, 4} \\, \
\\land \\, \\it{alpha}_{18,\\, 1,\\, 5} \\, \\land \\, \\it{alpha}_{1,\\, \
1,\\, 6} \\, \\land \\, \\it{alpha}_{13,\\, 1,\\, 7}) \\, \\land \\, \
(\\it{wp}_{1,\\, 1,\\, 1,\\, 0} \\, \\implies \\, \\it{alpha}_{27,\\, 1,\\, \
8})", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], 
  TraditionalForm]],ExpressionUUID->"fd05fe2c-ab86-4178-88ca-1e39a893b6cb"]], \
"Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867051766504427*^9, 3.8670521599794703`*^9}, {
   3.867052458596066*^9, 3.867052521140747*^9}, 3.867052781689228*^9, {
   3.8674012909054832`*^9, 3.867401303458329*^9}},
 TextAlignment->Center,
 FontSize->17,
 CellID->606484318,ExpressionUUID->"58e50465-11e0-4930-a910-18bd3738f9b0"],

Cell["\<\
Fortunately, there's an easy fix to this problem. We can force the cell right \
after the last letter of a word to be empty.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8671395786411123`*^9, 3.8671396051529083`*^9}, {
  3.867146498415215*^9, 3.867146526506136*^9}, {3.867158837262844*^9, 
  3.867158854089499*^9}, {3.867230083686487*^9, 3.867230195753983*^9}, {
  3.8672302266884003`*^9, 3.8672303343314943`*^9}},
 CellID->2021351407,ExpressionUUID->"3f828ef3-ab36-4dc0-89b9-d3c87ac3d44c"],

Cell[TextData[{
 "Now, if the solver tries to place ",
 StyleBox["\"wolf\" ",
  FontSlant->"Italic"],
 "inside ",
 StyleBox["\"wolfram\"",
  FontSlant->"Italic"],
 ", it won't be able to do so because it will require the ",
 StyleBox["\"r\" ",
  FontSlant->"Italic"],
 "character cell (location ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"(", 
         RowBox[{"1", ",", "5"}], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "(1, 5)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2422b085-ccbb-43a3-a066-bd3e5492b96c"],
 " in our example) to be empty."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8671395786411123`*^9, 3.8671396051529083`*^9}, {
  3.867146498415215*^9, 3.867146526506136*^9}, {3.867158837262844*^9, 
  3.867158854089499*^9}, {3.867230083686487*^9, 3.867230195753983*^9}, {
  3.8672302266884003`*^9, 3.8672303343314943`*^9}, {3.867230441445257*^9, 
  3.867230504736658*^9}, {3.86738310176012*^9, 3.867383101925952*^9}, {
  3.867383133141676*^9, 3.867383136322719*^9}},
 CellID->162243244,ExpressionUUID->"19781adb-4f04-43c9-b0b7-f83aca7c5005"],

Cell["\<\
As mentioned earlier, vertical word placement is analogous to horizontal word \
placement, so it isn't discussed here.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8671395786411123`*^9, 3.8671396051529083`*^9}, {
  3.867146498415215*^9, 3.867146526506136*^9}, {3.867158837262844*^9, 
  3.867158854089499*^9}, {3.867230083686487*^9, 3.867230195753983*^9}, {
  3.8672302266884003`*^9, 3.8672303343314943`*^9}, {3.867230441445257*^9, 
  3.867230570380912*^9}, {3.867230934562705*^9, 3.867230945607209*^9}, {
  3.867245503818035*^9, 3.867245504800002*^9}, {3.867383146497149*^9, 
  3.867383152358429*^9}},
 CellID->1808342631,ExpressionUUID->"7e105890-f7bf-43c4-8397-31873369a26e"],

Cell["\<\
Generating the constraints described above for both horizontal and vertical \
word placements:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.8671395786411123`*^9, 3.8671396051529083`*^9}, {
  3.867146498415215*^9, 3.867146526506136*^9}, {3.867158837262844*^9, 
  3.867158854089499*^9}, {3.867230083686487*^9, 3.867230195753983*^9}, {
  3.8672302266884003`*^9, 3.8672303343314943`*^9}, {3.867230441445257*^9, 
  3.867230570380912*^9}, {3.867230934562705*^9, 3.867230945607209*^9}, {
  3.867245503818035*^9, 3.867245542023079*^9}, {3.867246767086804*^9, 
  3.867246771275919*^9}},
 CellID->216624700,ExpressionUUID->"23fed046-1283-43c8-917d-33d65879053e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"letterConstraints", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", "\n", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"wordLen", " ", "=", " ", 
        RowBox[{"StringLength", "[", 
         RowBox[{"words", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";"}], "\n", "  ", "\n", 
      "  ", 
      RowBox[{"(*", " ", 
       RowBox[{"Generating", " ", "letter", " ", "implications"}], " ", 
       "*)"}], ";", "\n", "  ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"letterConstraints", ",", " ", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Table", "[", "\n", "     ", 
          RowBox[{
           RowBox[{
            RowBox[{"Table", "[", "\n", "       ", 
             RowBox[{
              RowBox[{"Implies", "[", 
               RowBox[{
                RowBox[{"wp", "[", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", " ", "j", ",", " ", "k", ",", " ", "0"}], 
                  "}"}], "]"}], ",", " ", "\n", "        ", 
                RowBox[{"alpha", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"alphabetMap", "[", 
                    RowBox[{"StringPart", "[", 
                    RowBox[{
                    RowBox[{"words", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", " ", "y"}], "]"}], 
                    "]"}], ",", " ", "j", ",", " ", 
                   RowBox[{"k", " ", "+", " ", "y", " ", "-", " ", "1"}]}], 
                  "}"}], "]"}]}], "]"}], ",", "\n", "       ", 
              RowBox[{"{", 
               RowBox[{"y", ",", " ", "1", ",", " ", "wordLen"}], "}"}]}], 
             "\n", "       ", "]"}], " ", "//", " ", "Flatten"}], ",", "\n", 
           "     ", "\n", "     ", 
           RowBox[{"{", 
            RowBox[{"j", ",", " ", "1", ",", " ", "gridSize"}], "}"}], ",", 
           " ", "\n", "     ", 
           RowBox[{"{", 
            RowBox[{"k", ",", " ", "1", ",", " ", 
             RowBox[{
             "gridSize", " ", "-", " ", "wordLen", " ", "+", " ", "1"}]}], 
            "}"}]}], "\n", "     ", "]"}]}]}], "]"}], ";", "\n", "  ", "\n", 
      "  ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"letterConstraints", ",", " ", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Table", "[", "\n", "     ", 
          RowBox[{
           RowBox[{
            RowBox[{"Table", "[", "\n", "       ", 
             RowBox[{
              RowBox[{"Implies", "[", 
               RowBox[{
                RowBox[{"wp", "[", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", " ", "j", ",", " ", "k", ",", " ", "1"}], 
                  "}"}], "]"}], ",", " ", "\n", "        ", 
                RowBox[{"alpha", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"alphabetMap", "[", 
                    RowBox[{"StringPart", "[", 
                    RowBox[{
                    RowBox[{"words", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", " ", "y"}], "]"}], 
                    "]"}], ",", " ", 
                   RowBox[{"j", " ", "+", " ", "y", " ", "-", " ", "1"}], ",",
                    " ", "k"}], "}"}], "]"}]}], "]"}], ",", "\n", "       ", 
              RowBox[{"{", 
               RowBox[{"y", ",", " ", "1", ",", " ", "wordLen"}], "}"}]}], 
             "\n", "       ", "]"}], " ", "//", " ", "Flatten"}], ",", "\n", 
           "     ", "\n", "     ", 
           RowBox[{"{", 
            RowBox[{"j", ",", " ", "1", ",", " ", 
             RowBox[{
             "gridSize", " ", "-", " ", "wordLen", " ", "+", " ", "1"}]}], 
            "}"}], ",", " ", "\n", "     ", 
           RowBox[{"{", 
            RowBox[{"k", ",", " ", "1", ",", " ", "gridSize"}], "}"}]}], "\n",
           "     ", "]"}]}]}], "]"}], ";", "\n", " ", "\n", "  ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"letterConstraints", ",", " ", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Table", "[", "\n", "     ", 
          RowBox[{
           RowBox[{"Implies", "[", 
            RowBox[{
             RowBox[{"wp", "[", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "j", ",", " ", "k", ",", " ", "0"}], 
               "}"}], "]"}], ",", " ", 
             RowBox[{"alpha", "[", 
              RowBox[{"{", 
               RowBox[{"blankNum", ",", " ", "j", ",", " ", 
                RowBox[{"k", " ", "+", " ", "wordLen"}]}], "}"}], "]"}]}], 
            "]"}], ",", "\n", "     ", 
           RowBox[{"{", 
            RowBox[{"j", ",", " ", "1", ",", " ", "gridSize"}], "}"}], ",", 
           " ", "\n", "     ", 
           RowBox[{"{", 
            RowBox[{"k", ",", " ", "1", ",", " ", 
             RowBox[{"gridSize", " ", "-", " ", "wordLen"}]}], "}"}]}], "\n", 
          "     ", "]"}]}]}], "]"}], ";", "\n", "  ", "\n", "  ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"letterConstraints", ",", " ", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Table", "[", "\n", "     ", 
          RowBox[{
           RowBox[{"Implies", "[", 
            RowBox[{
             RowBox[{"wp", "[", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "j", ",", " ", "k", ",", " ", "1"}], 
               "}"}], "]"}], ",", " ", 
             RowBox[{"alpha", "[", 
              RowBox[{"{", 
               RowBox[{"blankNum", ",", " ", 
                RowBox[{"j", " ", "+", " ", "wordLen"}], ",", " ", "k"}], 
               "}"}], "]"}]}], "]"}], ",", "\n", "     ", 
           RowBox[{"{", 
            RowBox[{"j", ",", " ", "1", ",", " ", 
             RowBox[{"gridSize", " ", "-", " ", "wordLen"}]}], "}"}], ",", 
           " ", "\n", "     ", 
           RowBox[{"{", 
            RowBox[{"k", ",", " ", "1", ",", " ", "gridSize"}], "}"}]}], "\n",
           "     ", "]"}]}]}], "]"}]}], ",", "\n", "  ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "numWords"}], "}"}]}], "\n", "  ",
     "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"letterConstraints", " ", "=", " ", 
   RowBox[{"And", " ", "@@", " ", 
    RowBox[{"Flatten", "@", "letterConstraints"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"satConstraints", ",", " ", "letterConstraints"}], "]"}], 
  ";"}]}], "Code",
 TaggingRules->{},
 CellChangeTimes->{{3.8671395605567627`*^9, 3.867139563845995*^9}, {
  3.8671443123126097`*^9, 3.867144337445513*^9}, {3.867146965363165*^9, 
  3.8671469913747997`*^9}, {3.867383164359434*^9, 3.867383166631362*^9}},
 CellID->1570325732,ExpressionUUID->"82271e77-6754-45a3-a987-8dcad1fffd7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Invalid Placement Constraints", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.867159144111559*^9, 3.8671591468917513`*^9}},
 CellID->666047636,ExpressionUUID->"c78f11ed-6471-46fd-a124-0fd5f8086b69"],

Cell[CellGroupData[{

Cell["Out of Bounds Placements", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.867159306530184*^9, 3.867159316823802*^9}},
 CellID->434660529,ExpressionUUID->"a40bd1ee-1f01-4a51-a621-cc2f2718696a"],

Cell[TextData[{
 "Even in an empty grid, it's just impossible to place some words in certain \
locations. If placing a word ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["i", "TI"], TraditionalForm], "errors" -> {}, "input" -> "i", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1310f5d8-5cd3-427a-a223-51a2a4877e03"],
 " at a location ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"(", 
         RowBox[{
           StyleBox["x", "TI"], ",", 
           StyleBox["y", "TI"]}], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "(x, y)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "9687a6a2-88e9-4e3e-9e28-7e3a1bc963e5"],
 " causes its last letter to be placed outside the crossword grid, it's \
impossible to start the word at ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"(", 
         RowBox[{
           StyleBox["x", "TI"], ",", 
           StyleBox["y", "TI"]}], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "(x, y)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a3f4bf5e-261c-4d92-bb97-edde83c852d2"],
 ". For such words the following constraint is added which makes it \
impossible for the solver to place it there:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867139635228355*^9, 3.8671396491888237`*^9}, {
  3.86714646537722*^9, 3.867146494050623*^9}, {3.867158862853548*^9, 
  3.8671588725993433`*^9}, {3.867230954024292*^9, 3.867231097058485*^9}, {
  3.867231170380074*^9, 3.867231179186717*^9}, {3.867231277865724*^9, 
  3.867231283681623*^9}, {3.8672314060189953`*^9, 3.867231406447308*^9}, {
  3.867231452658565*^9, 3.867231485066517*^9}, {3.867232673525906*^9, 
  3.867232673725197*^9}, {3.8672468670221233`*^9, 3.867246870244755*^9}, {
  3.867383193767342*^9, 3.867383232437018*^9}},
 CellID->447011485,ExpressionUUID->"ab4705b9-4938-4c20-8984-0b73289ee35b"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[<|"boxes" -> FormBox[
      RowBox[{"\[Not]", 
        SubscriptBox[
         StyleBox["wp", "TI"], 
         RowBox[{
           StyleBox["i", "TI"], ",", 
           StyleBox[" ", "TI"], 
           StyleBox["x", "TI"], ",", 
           StyleBox[" ", "TI"], 
           StyleBox["y", "TI"], ",", 
           StyleBox[" ", "TI"], 
           StyleBox["z", "TI"]}]], 
        StyleBox[" ", "TI"], "\[Vee]", 
        StyleBox[" ", "TI"], "\[Not]", 
        SubscriptBox[
         StyleBox["wp", "TI"], 
         RowBox[{
           StyleBox["i", "TI"], ",", 
           StyleBox[" ", "TI"], 
           StyleBox["x", "TI"], ",", 
           StyleBox[" ", "TI"], 
           StyleBox["y", "TI"], ",", 
           StyleBox[" ", "TI"], 
           StyleBox["z", "TI"]}]]}], TraditionalForm], "errors" -> {}, 
    "input" -> 
    "\\lnot\\it{wp}_{i,\\, x,\\, y,\\, z} \\, \\lor \\, \\lnot\\it{wp}_{i,\\, \
x,\\, y,\\, z}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], 
  TraditionalForm]],ExpressionUUID->"65023d7e-9092-4d37-a0e4-a361e3f769a7"]], \
"Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867051766504427*^9, 3.8670521599794703`*^9}, {
   3.867052458596066*^9, 3.867052521140747*^9}, 3.867052781689228*^9},
 TextAlignment->Center,
 FontSize->17,
 CellID->735618045,ExpressionUUID->"8161d267-00b5-46d8-b2dd-4f6799de219a"],

Cell["Generating constraints as described above:", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.86724555601583*^9, 3.867245567616406*^9}, {
  3.867246779358528*^9, 3.867246785119102*^9}},
 CellID->874023650,ExpressionUUID->"4f1258f6-8e1c-40e3-a476-cc7d151cad61"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"horizontalConstraints", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Not", "@", "#"}], " ", "||", " ", 
         RowBox[{"Not", "@", "#"}]}], "}"}], " ", "&"}], " ", "/@", " ", 
      RowBox[{"Select", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"wp", "[", 
             RowBox[{"{", 
              RowBox[{"x", ",", " ", "i", ",", " ", "j", ",", " ", "0"}], 
              "}"}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "1", ",", " ", "numWords"}], "}"}], ",", 
            " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", " ", "1", ",", " ", "gridSize"}], "}"}], ",", 
            " ", 
            RowBox[{"{", 
             RowBox[{"j", ",", " ", "1", ",", " ", "gridSize"}], "}"}]}], 
           "]"}], ",", " ", "2"}], "]"}], ",", "\n", "      ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"StringLength", "[", 
            RowBox[{"words", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], " ", "+", 
           " ", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], " ", "-", " ", "1"}], " ", ">", 
          " ", "gridSize"}], " ", "&"}]}], "]"}]}], " ", "//", " ", 
     "Flatten"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"verticalConstraints", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Not", "@", "#"}], " ", "||", " ", 
         RowBox[{"Not", "@", "#"}]}], "}"}], " ", "&"}], " ", "/@", " ", 
      RowBox[{"Select", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"wp", "[", 
             RowBox[{"{", 
              RowBox[{"x", ",", " ", "i", ",", " ", "j", ",", " ", "1"}], 
              "}"}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "1", ",", " ", "numWords"}], "}"}], ",", 
            " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", " ", "1", ",", " ", "gridSize"}], "}"}], ",", 
            " ", 
            RowBox[{"{", 
             RowBox[{"j", ",", " ", "1", ",", " ", "gridSize"}], "}"}]}], 
           "]"}], ",", " ", "2"}], "]"}], ",", "\n", "      ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"StringLength", "[", 
            RowBox[{"words", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], " ", "+", 
           " ", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], " ", "-", " ", "1"}], " ", ">", 
          " ", "gridSize"}], " ", "&"}]}], "]"}]}], " ", "//", " ", 
     "Flatten"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"satConstraints", ",", " ", 
    RowBox[{"And", " ", "@@", " ", "horizontalConstraints"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"satConstraints", ",", " ", 
    RowBox[{"And", " ", "@@", " ", "verticalConstraints"}]}], "]"}], 
  ";"}]}], "Code",
 TaggingRules->{},
 CellChangeTimes->{{3.867139635228355*^9, 3.8671396842591476`*^9}, {
  3.867231590199085*^9, 3.867231603743722*^9}, {3.867231635841618*^9, 
  3.867231641460375*^9}, {3.867245455114192*^9, 3.8672454635574627`*^9}, {
  3.867246801199718*^9, 3.867246823321282*^9}},
 CellID->1481401489,ExpressionUUID->"11cb3635-6774-4be9-894b-fe4bbc08d5a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Invalid Starting Points", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.86715932613229*^9, 3.867159335751748*^9}},
 CellID->691640678,ExpressionUUID->"b98c190f-1cd3-47dd-bf1f-2cca229ed4a7"],

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnQecFOX9/7fd0a1RYxI1Go2/GLvRmMS/Gv1pbLEkGvVnirEkVhCQcsB1
4ESUIqIISEepioCACNK79CK9l6PXA67x/e8zewt3u8/OM7M7s9+7Zz/vvN4/
j7uZ2dvPPbO7n9/MPHP5C43+8h+fx+NpWjv4f/7y7xZ/bNLk3xl/PSf4j6ca
Nn31vw1ffunBhm+//N+Xm9z+gj/4zR7B//NI0EDwawIAAAAAAAAAAAAAAAAA
AADABuIQE4QQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhKmq7iAXOchFDnKRg1zkIBc5
3O9ruqk73PlCCKFK3UEucpCLHOQiB7nIQS5yuN/XdFN3uPOFEEKVuoNc5CAX
OchFDnKRg1zkcL+v6abucOcLIYQqdQe5yEEucpCLHOQiB7nI4X5f003d4c4X
QghV6g5ykYNc5CAXOchFDnKRw/2+ppu6w50vhBCq1B3kIge5yEEucpCLHOQi
h/t9TTd1hztfCCFUqTvIRQ5ykYNc5CAXOchFDvf7mm7qDne+EEKoUneQixzk
Ige5yEEucpCLHO73Nd3UHe58IYRQpe4gFznIRQ5ykYNc5CAXOdzva7qpO9z5
QgihSt1BLnKQixzkIge5yEEucrjf13RTd7jzhRBClbqDXOQgFznIRQ5ykYNc
5HC/r+mm7nDnCyGEKnUHuchBLnKQixzkIge5yOF+X9NN3eHOF0IIVeoOcpGD
XOQgFznIRQ5ykcP9vqabusOdL4QQqtQd5CIHuchBLnKQixzkIof7fU03dYc7
XwghVKk7yEUOcpGDXOQgFznIRQ73+5pu6g53vhBCqFJ3kIsc5CIHuchBLnKQ
ixzu9zXd1B3ufCGEUKXuIBc5yEUOcpGDXOQgFznc72u6qTvc+UIIoUrdQS5y
kIsc5CIHuchBLnK439d0U3e484UQQpW6g1zkIBc5yEUOcpGDXORwv6/ppu5w
5wshhCp1B7nIQS5ykIsc5CIHucjhfl/TTd3hzhdCCFXqDnKRg1zkIBc5yEUO
cpHD/b6mm7rDnS+EEKrUHeQiB7nIQS5ykIsc5CKH+31NN3WHO18IIVTpJIf2
76S53/SjL3s2p4HvPk8ftXqIujS9mz7Nf5pGfNSYpnzRlfYXbnH0MVW4mUvx
gVI6vrNE6ok9Jer1D5XFXF94quxUok8/Jm7mUlpUbvq8orLaXWKsc+qUe8/X
KsnYj0oOm//dqyNu51JecsrWmLFqydEyF1NxPpejh07Qnp1HYhovRUeLTbdb
XlYe97ZlcL+v6aYdThwupMM7V8a0OsKdL4QQqkyUstISmjn2E3rvzd/RWw/V
sWS3FvfT6kWTHXiVVeNWLqXHymhF+10xXdtjj3IbO8YdMt2Gm5/13Bwv6/vu
NX1esVz5zi5a8+Fu2tB/H+385rClzuk0ydiPVr1faJpDdcTtXHaMN98X4nX3
9Pg7hhWczKW0pIz6dJxJPdtPj2lJcXyvCXMnbzDd7okiZ/c17vc13bTDd+/f
QRPb3xjT6gh3vhBCqDIRFk0bTvkvXGO5J0X6RY+3g+//Jxx6xZXjVi6iy6Av
yVnfJ76+JHPjoP106IcTdKo8OceekrEfreqIvhSJal9Ihb4kUPWlY0dOxvV7
Th+3NuY2xWM6Dff7mm7aYXLH36EvQQihw8ZDeVkZDe/eKO6eVNl3Xr2Fdmxc
5vCr7xncygV9KTZO9qWwW0YeSMr5esnYj9CXokFfCjGi10LTvnRg77G4fs/J
o36Iuc1hnyyI9+nHhPt9TTdt/a3RlyCE0HHtUnyiiD5u82dHulLYpo+eTTs3
u3NetVu5oC/Fxo2+JNw16bBreYRJxn6EvhQN+lKIb4avNO1Lhdvi2wfGD10e
c5vjhiyP9+nHhPt9TTftgL4EIYTOa5eBHf/taFcSftTqYeM6KDdwKxf0pdi4
1ZeE+xbE9/9frw65hEFfigZ9KcScSebXGW1dvz+u33P0gCUxtzlj/Lp4n35M
uN/XdNMO6EsQQui8dpj1dS/Hu1LHN26nE0XufaZxKxf0pdi42ZdWFNTcXMKg
L0WDvhRixfc7TPvS+pW74/o9R/SOfZ7fkjlb4336MeF+X9NNO6AvQQih81rl
4N7t9PZj51jqQLnPX02DO71Ms8d/Sivnj6dJw9+nPm2fpRZ/vSBqucP73f18
6FYu6EuxUfWl/YuL6Njmk4ZH1p+kA0uP055ZR2lDv33WjjHNd+8Yk9v7kQB9
KRrVvrBp8H5jGbseWVuz5pMRx4/M+tKqRTvj+j0/7z7PpIOpX6vswv2+ppt2
QF+CEELntYqYy85KVxrS5dWY59Yd2L2Vurd8wFiu1dM/pd3b1jj1chsTt3JB
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
N+PhyIFCavxwXWkn6pn9BDV/4nzpz8Q6Yt1kwp0vhBBGqkLMyzCw6xxl71k6
d1vUuuJ7qvUGfTDX1bkfuPPVTRVijoepXe9V9p7NcwdErSu+p1pv2gf3uTr3
A3e+MDW1QtG+A9T1lvtNe1Kn6++hRYNGKrcl7quzYtR42rV8daK7jCW489XN
eJg9oU/sc+5GdKaPWj0c8+di3WTCnS+EEEaqYuPqvcrOM33c2pjri5+p1t+8
dp+TL7VV4M5XN1XsXj1Z2XlWjsuPub74mWr9PWunOTlEqsCdL0xNrfB9v6HK
40pifvHqCHe+uhkP4hhSzPss/TCPJn7+Tsyfi3WTCXe+EEIYqQpV3xH3VDp5
PPY1SOJnqns1zZjg3vw73PnqpgpV3xH3VCo5fjjm+uJnqns1rZrQ3skhUgXu
fGFqaoWRrzRXzgcurm+qjnDnq5t2OXn8KL392DnSLtTs8XOprLSENqyYFbMv
iXXFNpIFd74QQhipipGfLjTtOhOGrVBuQyxjto0v+ixy4iVWCne+uqlizqdP
m3adRcPeVG5DLGO2jTl9nnViaEjhzhempirEtUhdb33AtC9Nbt/Vtf0iUbjz
1U27LJn5Rcwu9GHLPxnLlJYUG90p1nJiG8mCO18IIYzUjNKSMupVYH4u3drl
6utAxTKqY1SlpeVOvdRWgTtf3TSjrOQEfVtwi/mc4MvHKv9mYhnVMaqy0pNO
DZEqcOcLU1MVO5asVJ6Lt2/9Jlf2CSfgzlc37TKw479j9qAJg9udXq57ywdi
Lie2kSy484UQwkjN2Lf7qPLao2NH1J9bxTKq7ezffcypl9oqcOerm2Yc2b1G
ee3RiSPqe26JZVTbObI79jVzicCdL0xNVaz9drp5X7ruj1RaXOzKPuEE3Pnq
ph3Kykop428Xx+xB65fNOL3shM/ax1xObENsKxlw5wshhJGasXPLQWXPsTK3
nVhGtZ2dWw459VJbBe58ddOM/VsWKHuOmD9PhVhGtZ0DW753aohUgTtfmJqq
EPdQMutLn9z7lCv7g1Nw56ubdlizZErMDiTOvystOfP/81y/fKbpvZjEtpIB
d74QQhipGZvW7DPtOOIetlZR3e928xp35sjjzlc3zdi95jvTjiPuYWsV1f1u
d6+ZkuDIkMOdL0xNVcztOci0Lw19vpEr+4NTcOerm3YY+XGTmP1HnH9XGdU1
TGJbyYA7XwghjNSMNUvNrzsa2mOB5dc/sazZtsRjuQF3vrppxo6lX5l2nJk9
Hrf8dxPLmm1LPJYbcOcLU1MVC/oOMe1Lo9/KcmV/cArufHXTDjn/uir2tUuf
Rc81anYNk9hWMuDOF0IIIzXjh8W7TDvOyN4LLb/+iWXNtiUeyw2489VNM7Yt
HmnacWb3/pvlv5tY1mxb4rHcgDtfmJoq94eP+pn2pc+ee82V/cEpuPPVTats
W7/Y9Pw6cf5dJGbXMAnFNt2GO18IIYzUjPUr95h2nMEfzrP8+ieWNduWeCw3
4M5XN83YtXKCaceZ/uEDputXRixrti3xWG7AnS9MTVUsGTLKtC/1uPsvruwP
TsGdr25aZdzAPNPuc3Dvdjp6aG8Vl84aZbqO2KbbcOcLIYSRmrF1wwHTjvNp
hxmm61dGLGu2LfFYbsCdr26asXfDLNOOM6nDbZb/bmJZs22Jx3ID7nxhaqpi
zYQpyvnES09ifrxU0SodXrvVtPvEo9im23DnCyGEkZqxe/th5bx2JcVlytc+
sYxqO+Kx3IA7X90049D2Zcp57UqLi5R/M7GMajvisdyAO1+YmqrYOn+xsi8V
rlzjyj7hBNz56qYV9u3a5HhXCiu2jfECIUwlzTh66ISy54h7NKmwch8n8Vhu
wJ2vbppx/NBOC/dNUn+ms3IfJ/FYbsCdL0xNVRQfK6LON95r2pfGvp3ryj7h
BNz56qYVpn75gWt9SWwb4wVCmEqqGNB5jmnPWThjs3Ib30/fbLoN8RhuwZ2v
bqqY0vmPpj1n/Yweym2sn/6x6TbEY7gFd74wNbXCkH++qTzGtGfNBtf2jUTg
zlc3rdCt+X2u9SWxbYwXCGEqqWL80OWmXWd4T/V9Q8UyZtsQj+EW3PnqpopF
Q98w7Tqzev5VuQ2xjNk2xGO4BXe+MDW1wpweA5R9adSbrS2P9fKysqT1K+58
dVPFscP7qPEj9VzrS2Lb4jEwXiCEqaKKhTO3KM+l27/nWMz1xc9U64vHcAvu
fHVTxYaZPZXn0h3dsz7m+uJnqvXFY7gFd74wNbXCwa3bqdP19yg70/hWBcq5
H44fOkzDX25qLL9y9EQndh1TuPPVTRXzvh3oWlcKKx4D4wVCmCqqOLT/uLLv
jPx0IZWWRM/7IL4nfqZa//CB42685Bpw56ubKor2b1H2nTmfPkNlJdHXq4nv
iZ+p1i86sNWNoWLAnS9MTa0yvnWBsi8JBzz5Eh3aLr+n3e5Va6nXn545vay4
LmrjDOv3hogH7nx1U0XvvL+Zdp0F331O65ZOM/Wr3i1NtyEeA+MFQpgqWmHM
oKXKzjPpy1V06tSp0+uIr8X3VOuJbbsJd766aYUFg15Sdp6lXzYPjpHy0+uI
r8X3VOuJbbsJd74wNbWKcYzpBvUxJqE4FtXv8edpQpt36PsBw2luz0E07MUm
0mW73voA7Vy6EvtVDdGM4pPHqdkT58XsOW2evbTKe3Usdm5aYdqXxGOIx3ID
7nwhhDBSK2xYZX7f2rADu8yhSV+sMhRfW1lHbNtNuPPVTSsUrpqo7D3CqV3u
oaVfNDMUX1tZR2wb4wXqph3m9R5sqS/ZtfsfHqX9G9w5N5o7X900Y/mcMaY9
p1/B3y39zUSnav3Mz0y3JR7LDbjzhRDCSK1i5RiTXd0+tiTgzlc3rWLlGJNd
3T62JODOF6amdhnTJNuVzvTl6xku7FXYr5I5Xj7r9B/TjjNrXG/Lf7c+bZ81
3ZZ4LDfgzhdCCCO1ysF9RdS7wwzHupLYltim23Dnq5tWObZvM33b4VbHupLY
ltim23DnC1NTu5QUHafhL8nPrYvXnvc9TQe37nBhr8J+lazxIuY8VB0T2rMj
9nw7kUwf87Hptlo/c4nxmE7DnS+EEEZqh/Urd1OvgsS7ktiG2FYy4M5XN+2w
a+V4mlhwc+J9KbgNsa1kwJ0vTE3jQXxOndLhQ0e60qcPPUeHdxY6vDedgTtf
3YzF+uUzTftNzj+vtPV327l5pXKePPGYTsOdL4QQRmqXtcsKE+5LYhvJgjtf
3bTLjmVjgp3npgT60k3GNpIFd74wNU2EDdPmGPPhxdOTxNwRUzt+RMVF7s1R
KuDOVzdj8WXP5qbdZvD79s5pDl3DdInpNsVjOg13vhBCGGk87Nx6iIb2WGC7
J4l1dgXXTSbc+epmPBzYupBm9njcdlcS6xzYusjhEWEOd74wNU0U8bl23aQZ
xv1qP7jtQfXcDnc8ShOzO+J+tTXUWHzU6mHTbjN/0iDbf7u+7Z8z3aZ4TKfh
zhdCCCONl7LSclo6dxuN6K2+v5JYRiwr1kk23PnqZryUlxbT5rkDaHbvvyl7
klhGLCvWSTbc+cLU1EnKSkpp24IltGzEWJr7yQD6ruADmpTfmWZ/1M/43tb5
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
cdTyuc//MilzjHPnq5sqrPalgibto9btltst5fpSxxbv2v5MJ9ZJNsnIBX1J
DvpSNKq+1CWzMw3uPsi2yxYsczEVd3LZNLc/rRyXp1TVhaxsQzxWdcoFwkRU
gb4E7YwXweIZI5VdadMPc2OuX3TkAI3s0ZSaPFL/9PLb1y9xakiYwp2vbqqw
2peEle91UlpSSg2fejOl+pKYVz3W3Ovd8z6kRn9rGLM7mM3J7gbJyAV9SQ76
UjSqvrRg+gIXn138JPP1JRJVX+KE+30NpqYq0JegnfEimPJFV0fmbBDXQPUr
+LvRv5IFd766qcJOX6o8r/jqZastr6dLX5r5zYyYz3HiFxOpa1aXmD8X6yaT
ZOSCviQHfSka9CX7oC9BWFUV6EvQzngRTBr2nvJ+Slz30VTBna9uqrDTlyrP
K/5lf+tzauvSl8QxpFjPceOajTRu2LiYPxfrJpNk5IK+JAd9KRr0JfugL0FY
VRXoS9DOeBGIa5JUczf0afuscd5ddYM7X91UEasvtXi+edT3Ks8r3r5xu6jP
x+LnuvalE8dP0JtPviF9fuK8xLLSMlq3cl3Mz4NiXbGNZJGMXNCX5KAvRYO+
ZB/0JQirqgJ9CdoZL4K9Ozdamu+u+RPn08iPm9CuLatc+/vbhTtf3VQRqy/l
vZFLrV9uFX0cZfUGOnr4aNT3OzTroHVfWjRrYczPep1bdzKWUV3TJbaRLJKR
C/qSHPSlaNCX7IO+BGFVVaAvQTvjRSDOtZPNcWdm58Z30fxJg4Kf+dz7bGsF
7nx1U4XZ8SUx/1Tk978ZMYEWz1kc9f0xg0fHnAtBh77Ut1OfmJ/1xlaa07hz
m84xlxPbSBbJyAV9SQ76UjSqvtS/az/6bsxkS86YMJ3KyspcTOMMyXp9kYG+
BGFVVaAvQTvjJYxqzodYtnn2Uho3MI8O7d/p2pgwgztf3VQRqy+98dfXpcdU
PszrRsN6D4v6/oqFK2J+FqrpfUl8Nmv6f/JjZ8K1K9aeXlbcDybWcmIbOn3O
Q1+Sg74UjdP3X1qYpGO1yRgvsUBfgrCqKtCXoJ3xEkbcV7bDa7fGfW/aJn9u
QEO6vGqc25dMuPPVTRVm8z0c2HuAXnui6jGjxs+8RW0b5lf5XrN/vE2F23dp
25dWL/0h5nMT59+VlJScXnZdsDuZfc4T20oGycgFfUkO+lI0TvelZJ2/l4zx
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
eHvhjpbjO92t/O8G/93UQ79ofQ397rk72cdDKo0XGdz5wtRUd7jz1U3d4c4X
Qggj1YU9RXuo5dgMurjVxeR900u1ctPJmx86/87fLtSZPG28lJ6fRn5jPruK
Y0aV57fL8UT0GrXR1zAF+1JW+Lqo0PwOlftS6DhT+DE9xrl+ae38FGhemy5v
chX96KofsY+JVBgvseDOF6amusOdr27qDne+EEIYqQ6s2b2GHu/9JKW3qWN0
E1+Oz1LX4daXk0aBYKcKiGNf7YKd6m0vXfXKldV6nnHd4c4Xpqa6w52vbuoO
d74QQhhpjaacaOGmhXR7/h0UaHpWaI7wHE+N0ZvjD83XJ44/5XspLS+dzm54
Nl374K/Zx4WW48UC3PnC1FR3uPPVTd3hzhdCCCOtsZwimrluBl2XdT35GtcO
9o7aoXPscjw1RmNO8+DvXKsgnTzGtVYBqp1Rh65r9GuqVTudfWxoNV4swp0v
TE11hztf3dQd7nwhhDDSmsroRaPpF81/QekZwa6Un2b5eqNqZV6wM2V5KRDs
SV4x90R7r3H90/lNz6ef/7/L2MeGTuPFKtz5wtRUd7jz1U3d4c4XQggjrYl0
m9CNLm15OflEVzLm9PZQoPK83TXF4O/tb+sjX1bwOYh5y8Vc5+08VKt1Lbry
uWAXrJXGPj50GC924M4Xpqa6w52vbuoOd74QQhhpTaP3jE/p7MY/In/rOuTN
Cxjz3xn3nrUxp121Udy3Nt9r9CVvli9076b2we9leunnzS6jBpc0YB8fNX28
2IU7X5ia6g53vrqpO9z5QghhpDWF8uD/es/uST/J/hl5MgOheyeJe8LmVNwn
KcfD33/sWnE/W9GXfGKuCuN+uh7jv+c0PYtu/OsN7OOjpo6XeOHOF6amusOd
r27qDne+EEIYaU3gVPB/PaZ+TA3ebECeFsHfu8BrHIsR9zMS88sZ9zLKD993
1lOzFJ0p20d+cYxJ/Dv4vHzt/RRomkY3vnUjeT1e9jFS08ZLInDnC1NT3eHO
Vzd1hztfCCGMtLpTdqqMuk/qRue+dU6wG6WTryA0Z7hXHJcx7gMr7jnrr7j3
bA3tSzmha5j8WaH763rb+8jbOkDnv/QjuuCS89nHSE0aL4nCnS9MTZ3k6J59
tHzk1zTl3e70dYu2NPylJvTZc6/TV43a0OR2Xej7/sPo8I5djj6mCu58dTNR
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
t2k6+QrqGB3B3zZQ0Zd8lbqSv6InVdynNUqPlvrEdVqtfVQrqzaltapD9Zuf
T9e0uZmuurtm3F/JyfEiKCs9Scu+yoi7Ky38/FXjnkzJgjtfmJomyqlTp2jd
pBnG/Wo/uO1B9dwOdzxKE7M74n61NdR42L1tDY3+tJUxJ57V40ldmt5NqxdN
dng0qOHOF0III7XDkP6z6C+dn6T6TeuGelBBGnlz0skjjqfkhOcKr+hDud6q
96wV82vnho836duXRC5pbWtRICON6jeqT3e3vZOu/O2V7H9njvFSmUM7lhv3
sbV0TVPBzTR/4Au0b8PsuB8vXrjzhampk5SVlNK2BUto2YixNPeTAfRdwQc0
Kb8zzf6on/G9rfMXU3lpmaOPqYI7X91MlCMHd9Oy2aNp5thPaPygfOO8PXFf
23ED82jqqG7GXOEnig478JePD+58IYQwUquUB/+XNTyLzmt6LgXEtUn5ntB5
eJm1yZcV7Ex5njP96HRPqmxwnbz0kDWuL1k/NuYVzy8jnS5odSE9WPC/dMk1
P2H/G3OMl1iI4037N82jLQs+M+YRX/1tR+PrdVO7Gfdt2rN2qnEeHxfc+cLU
VHe489VN3eHOF0III7XCqXKi8cu/oUtb/Jx8LbzkzfeG+pLRi4L/zvOa9CTP
mc5R5fy8WMtVRyuOj2WHNOa1MOYADH4/02Pch9cX/Hkgx0/pjevR9fm/oXsa
3Us/vuxC9r8vx3ipyXDnC1NT3eHOVzd1hztfCCGM1AprCtfSve/fT4HG6RXz
vXlCx5OEbSv+naOzXqMn+bLFdVqBirn/Qj/zthfH2DxUq00a1W1Um+5udzc9
+fZTlJaWxv635RovNRnufGFqqjvc+eqm7nDnCyGEkao4fPIIvdjvJarTsB55
Wlc6jpRdcZxIdCXN+5I4niTm/fNnpgX/mxY6n1D0xAIPBToEv27qoR83uYge
bvcg3XjXdex/U87xUtPhzhemprrDna9u6g53vhBCGKkZp04RdfnmA7qgxYXk
a+M/c1ypoj8Yx1nCx5ly9NWX5aO0TL8xB6DRlUQOoi9leoyu9IvWV9A9r99N
9c+pz/735BwvOsCdL0xNdYc7X93UHe58IYQw0pgEu9LElZPomuxryfO2OO+s
Yo4H49y0iq6UAvODG30pM2DMlW4cV2sbUswbfkHWhXRr61vpituvYP87so8X
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
N9ReYot8iS3yJbbIl9ii81NiEn3+txt2l2h/CSKfsav+8fWbOLpiINRyNk9J
gRxk+UIK5yWZz2Ey8lKO9i/xsYWszp9qZD89L6mVMoZWDsZfPnjG1B9qL7FF
vsQW+RJb5Ets0fkpMYk+/9sNu0u0vwSRz9hRW/dsxbz6BXDVdoLq0fNEncQz
hhIZe+dXwnlJyoLc0wECLePwVLcD/Ur74J71dyfkEbWX2CJfYot8iS3yJbbo
/JSYRJ//7YbdJdpfgshnbKfDwJV/vhKdy7tD9rqa62ozFF4LTw33L0m5W+/B
q+ejoAo5oED2KdD8TvQu74tr/nINmvR/iYjaS2yRL7FFvsQW+RJbdH5KTKLP
/3bD7hLtL0HkM3bTq/95DSPrR0CuYmsrOXl/kuxjWUnHo/E5P7mel2S2Dm1A
hVKnoPDSIqgXqvj5rb/Ezn07E/aJ2ktskS+xRb7EFvkSW5k8P+3dsg2bPvyk
XRoPHTLdxo6NX8fdBuPw4cOm20lWos//diMRbd+8EV9+9o4lsG1bKdH+EkQ+
01Ed1s9FDV9uxIG33sTev/wZO++9B9uvuxrbb7wOO397F3b/4VHsf/1VNO1K
/Fo+Ve0+tAdn3XQ2lCpWw8EByevktbYVj8zH5SkeB2QdVlfuyJrcOYVHglqr
orC+EI7lTpxx7Zn4asfXSXlldXs5fPAgGjZsSDtNO61tR/Q5ii0rfDl84IAl
bSQWjZs25Ywviahx8ybzY95szTEnokyen25e/H1cPn5eu2z/b/xr2M0ff4ar
py6Ju42bFp6LpobGdFjTSqLP/3YjET107SVY8Z1CS2DbtlKi/SWIfCZVHW5o
wL51z2OLz43NFSUJsf2aK7H/jddxuCmxMWNJ7Y/+7/ZXbkdPby8jU/hVXg+B
jcFjfUvGeq4OA5aX2GNyFf14nH4X5GUypvun47NtnyXtl9XtZfejv0u4XSTD
nmeeTvpYk1G+f47akxW+7LznLkvaSEzPfnN9zvhiJva+bwl4TY95S9Cb0TYS
rUyen1iWSTUvNRw4iLvO/r+4z79i0gJsfPOddFnTSqLP/3YjEVFeIggiFZIV
G5PA/ga+dXVdytcuWy9dhQPvvJ3W75F3vnobY4NjIJXrxxWMrE2r8LF4zTmD
ZSi/xu/j4/N4jsq9+nh83pJXxeDaoVj32To+ZytZWd1edj/yMOWlOMrWz1F7
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
yk13W+xOi0Sf/+1GOkR5iSCIWKRbbE3OPX/6I7aEfAmfv/c++0zrbTQ2YvXT
q9HT09PIGUG2zpIDsi9H81Jz3XD9Z69R80GuY3XRJfSv6Iu7Xroz7e+Dmaxu
L7RebceUjs9ROiXSl3zNS42bN6U9KzX3S222tr5iJs9PieSlKyYuwIbX3+KP
f/Ha2+I+luWpvVszU7df9PnfbqRDlJcIgoiFVWJ1k9k6m2x+sdm5u9VYosP6
+eyTFzHaNxpyhQy5XuLj2WSfg9eQE5+BkiGck7yR3BTOSn4ZzqCLz1ladv/F
2NeQmRpn0bK6vVBeSo9S/hylWSJ9yde8lOpaXQlla33b2ehLKj4lkpdevaXl
s7F/xy5cO+PUuI//a91VVlnTSqLP/3YjHaK8RBBELKwWm4e+dU1d3HM3qxMW
0c4DO/Hdm74PdYWej2rZmDU9c3gko28m5/qXJCMzecPrRYXrPsgeBerFGpZe
eTI27tho+XsQS1a3F8pL6VWyn6N0S6Qv+ZqXtt9wrWV5iW07G31JxSezvPTo
RZVtagKuv+72uM+58riF2PaF9d/Nos//diMdorxEEEQskhH7WzdbK3Pvc88m
tU48GycU79zNaiJHdPXfrken4u6Q3SpUPV842NpEem7iNRN8uUpUjTwdpULF
KPcYvPjZelYEUIisbi+Ul9pXJj5H6VYmfGlP+ZiXmnbv4mtsWZWX2LbZa2Sb
L6m0H7O8tOXT/7R5zv6du037mJ4o9qbZlbYSff63G+kQ5SWCIGKRjHb97qGo
a7PVOPjxvxN63p4nn4h77t5x0w38cW9vfAuTVk+FVKXxjKF4JWhuVkNOghzK
olrizbUblJa+I5/c+v7wY+TwGDxeH4/Nw6qV0a2kOyrursdhUWEJlJfakx0+
R1YoE760p3zMS/tfe8W6rBSGvUa2+ZJK+zHLS9v/G7ufaP31d5iO4/vq7ffT
aUsbiT7/2410iPISQRCxSFT71j0f85y787570PDtN+0+7+C/P4q73jxj1+8e
xL6mffjp/T+Bs7qgpT/GF17rVceojZcFmSkypk7PSWqtkyN7tZZ980c9Rs9K
To+Lz1eS1xj3uy5x4adXnY/br8psPbwjZXV7obwUW1Z/jqyS1b7EUz7mpR13
3Bo/6/zjdb72Ujx2P/GH+Plaf41s8yWV9pNqXkqkj+mBny5Lpy1tJPr8bzcS
0avP3I0rV85tl/ayUoR4z/3rw1dQeyEIm5KIDv7rfdOxIaxG7e7HH+PziPe9
+AL2/PlP2H79NQn9nZNt/6Z1N6N3TR+oPkdUH040WZKXwvvG8pLiceiwtZQi
eYn1ObE+pXDe88rhdXYlY62lMhWn3nA6br3lz7i5fh0evf3NdnnzRWvXlLSy
vTCZ5aWtq+uw/ZorU8JK5frnKBd9MVO+5aXDBw9gc01Fu8fL1ic+cj5OLDV8
+WV87/TXYK9lhTJ5fko1LzEl0sf0yd/Wp8uWNhJ9/rcbieihay8xzUSpwrZt
pUT7SxD5jJkavv4KW2qrOzTuI+5186Wr8K+v3seJwVlwFDuhBmLkJd5nc8SY
N8HI3kgdByW8vpKxf7JXhexR+f1yQIEcVPj6UUqpipG+0bj07rt4VjJj3VOJ
jdHK9Pduokr3erWZuj7O5c9RMnOhssWXRJRveenAu2/HPd6d99yV0L6xTLXF
5467LfZaVihT5yemjuQl1sd03cz4fUx3nP4TNDU2psuaVhJ9/rcbiYjyEkEQ
qWCm7b+53rJrPPb3zX2bNuDX912Mzhd3gctXBLmWZYwjclEW5SU+Do/lIbYv
4foNHD5eUNMzlEN/jIPnJta/xPZdczsxqGYoam6/HLeueYHyUh7mJas/RyyP
5aIviSjf8tKuB+6Le7z7Xk68v2Pn3XfE3RZ7LSuUqfMTU0fyEtNLCfQxvf3w
E+mwpY1En//tRiKivEQQRCqYic2p2HblpZZc5+1/4zU888kzGFJzDNRSJ2Q/
yxj6ftUdMfauuX6CeFjfkerRjPwWruFgZDk1nJc0RI8d1PTbu5R1xf/ecCFu
u+bvCWUlykv2y0tWf46sltXtJZ7yKS+x2olmfUINm75NeP/2vbgu7rbYax22
oO8kU+cnpo7mpQO7zPuYfjPvuzi0b386rGkl0ed/u5GIKC8RBJEKiejwoUPY
/ejv0neNV1mKPX/6Izbv24yFVy+CvEKBK1RgZI+QTkBulTmyLy+prWre8X1l
t7HxeaxvrN7IUor+e8EKB+avWYDrrnsi4axEecl+eYnJqs9RJmR1e4mnfMpL
rE5DvGNl6xYnI9bvaOYfe810K5Pnp47mJaaXbrjTtI/p5d/c3VFb2kj0+d9u
JCLKSwRBpEIyatiwATvvubND64LsuO1mfg4/rP+74q9XoLe7Lx/jxse01Unh
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
yCHhviVW/0HxOCB5syAvsVoUkcyk/656DPj+6plOLnNgYmgyFvxsfof9SURm
85ZYVvpmw852n79/3yE+7u6WVS2P3/y1teM/IhLd/giCIMww0yd/W2+aeZ4N
Xtnu89l9Zs//7IVX0/nV20qi/bUbqeilp29vf8zd767EDdWntns/e24mJdpf
Ij2wsV2KrEBV9etrVb921WTIhfr/RTqF+vUsw6U/rkA2cMr8MapD5Wv/sOeL
PoZ8Yv7/noSjq/tAq5bgWusw8khQaulHiuQlPSsptS49qyhZkpeU1nkpcp/H
iU4VfXB66LsoKirosD+J6O2XN8TNS0/e905C29m2eQ+effQD3veUKYlufwRB
EGaY6dnQVXGzzpXHLcKBXe3/DYrdxx4TbxvPrbomnV+9rSTaX7uRilgfUrvr
LP3rVTxz/+p272fPzaRE+0skh6Zq6Na3G/oM74vu47uhcIITXaZ2Qq853dH3
5D4YcM7R6P/jo9Hzp33R5+KBOOqSPii8pCdcl3SD89ddUXhRD3T5dR/0OL8f
ev9Uf+z3j8aAMwagx5yu6DS5EF2P64yew7ujqFOR8GO1K6OnjML8wCw4ylg9
PD0ThbOREtTziKf1mDfWt6RmS17i4wJb9kOO5KagE1JpAU5YPQdjZo5Ni0eJ
6M31X5iupyRqHXAziW6DBEEQZpjpt98/P27WeeziatNtsMfE28a9P7wwHV+5
MSXaX7uRrA7s243SM7vFzEJlZ3VHY8MhfPre+nbzEnsu20amJNpfIjasr8jZ
2YlOfTtj2KxjcdzPp+LYC4aj24+7ofcFPTGguC96V/VEF3dndK7phCJ3AVw1
LmhuJzSfS7+W1SAHjRprUpChX4uHNON/P7udre3jgOx2wFHrRIH+3M41Rejp
7Yb+K3tj2M+OwYkXz8TkJcfx/irRftgFl8uFJVWL0G3lUdDYODaWi3wSr53A
6j20miMUyK7xeHJAaclJbP9CbN6Vvn+lGsYEx+PsmnMgy+npp0xEn3242XT+
EpunlIn5SMlKdDskCIIwI54aDh407RtidcbNZFaL/KrJi9F46FC6vnpbSbS/
diNZvfXio+1moesql/LHNBw6yLNTe49j28iURPtLtKbPqH4YMm8wxv1gLI6v
OQGDS4eiy4ru6O7uCWeVE1K1nqXYdXTkOjtCZPxWpKZa5Ho7Cl7HzB9+7pFE
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
yUy8j1BFc22MqDqDUlQ/mKrnPbXGiSmBqRgze6zwtmg1dpdof+2G3SXaXyI/
sbtE+0sQhDV06dMNE7zjIVVL2bNebTLo+6uxdWEDTv0YHBjrn4DPtnxmyffg
l3u/xNRV06FWOo35SrX6a9fJfO4XH98m2ovocYy8hmAYvzHfi637K3u0lrVp
de+6V/bE/JULef0P0W3Rauwu0f7aDbtLtL9EftJRHdi9Bx888Qz+tuY6PFHi
xwM/XcZhP7Pb2H3sMaIk2l+CIKzjZP8pcJW59Ayg5l5e8km8XoEU0vc94EDX
ku64/YVbm7+7tmzejI3//W9Mvvnqa9Pvvu1bt/HHbtjwBap/X4Wi0s5G302A
va6x5pKsZxI5JD4vsRzE19NqtUYV609y6LfpeZLVd/AadTSYZ5pbw6w1szFw
1EDhbTATJKKd2/Zh01e7YrJ1k/k5mD2mveczmhqbEtqPVCTaX7vRUTU0HMK3
X2/Eh+/9Ay///U948pG7cP9tV+DBO6/BH393B557+hG8989XsGf3zjS8+8lL
tL9EfpKqtn2xEY+v8OCqyYtx+fh5cWGPYY9lz8m0RPtLEIR1HHPiMPQu7wtn
oED4NX/SeI28pNSpPBvIK1Scc92ZaNT/7d65CzXLitvliuAq0+++xx54iD/W
fWUphlUM1TOGS89mRh5pzksh8TUFjbykZyGPnot8Sst6vgG2b5qBv2U+k1It
o39Nf0z/8Qzh7S9TmGnvnoO4uX5duzz4m9dNt8EeE28be3cfTOicm4pE+2s3
UlVjYwPeePlvuOHSalwZXJEQ995yGd5/+zU0NVmXp4+UaH+J/CRZHdY/Ey9d
f0dCOSlWbnrphjv5NjIl0f4SBGEd/UYMwPG+mZDLsqE2XvKwGm9yncJzi1yj
YXjlEDz3wV+wa8fOtOSler8HSy9fCm2FA2pQa1vjLhAe/ybaC1Zf3cMyrxpV
0zyclwKqsZ/hdaJcpU4s8CxEn6P7CG9/mcJMLMtQXiISbS9H6vDhw7wv6bZr
AwnnpCO54/o6/PuDtyxoHW0l2l8iP0lGTY2NeLIilHROOpI/VdVnLDOJ9pcg
COtg65NOO38GjirvApWP3ZJyCj5nh9WnY/09fg1dyzqj9qEq7NrZ8bz0hwd/
h2U3Lkf30p5w+l18farIGrTGuLeo2grCvWBrUrnC6/i2eCNHajwEJTjWOKFU
KxhWdSzmnjtPeNvLJGaivEQk016O1N+feSzlnHQkf33qYd5PZaVE+0vkJ8no
qcqOZ6UIT7tXW/RJai3R/hIEYS3zf7IQx1QP06+ltSy47k8OJajytXZZ3QWl
ToNa4cD0wFR89uW/O5yXHn7qfpyw9kRIyyRe44GNv1M9UnhtIyXL8hLbD2e4
1kPYG4+xDjH/PaTvu1tDj7LumFcxH6qiCm93mcRMlJeIZNpLtD587820ZaUI
D99zvUUtxZBof4n8JFH968ln05aVInz0zPMWfqIMifaXIAhr6T+kP2b4Z0Au
Vozra5+UM8gBBWpAheqVw/OZCtB1ZXc8/upjcC8vSTkvHdb/LfvtMhQsK4Rr
VQGvIagFND2DRGWlQKSPKRs8C2e38Fg8lu3YvvK+MD6fSf//QgknrZqNMTPH
CG9zmcZMlJeIZNpLRJu//QrXri5Pe15i9SCslGh/ifwkEe3bvgM3nHRm2vPS
jXPPxv6du+lzRRBEhzj30nPQqawo9/KSnhMUPSfINRKv8c3q5MnLC/D/rv0x
/KWVKeel5z9bhxGhUXqGZHXDVaP/KhiuncDmAwXl5rrcoj1oJrJmrT88Fs8T
rvPA9lX3Z5B7IJZcspivVSy6vWUaM1FeIpJpLxE9dNc1ac9KD911LZqaGi1r
K0yi/SXyk0S0/rrbzfPPhPn4/SU1ePuhxznsZ3ab2fNevvEu+lwRBNEhJsyb
gLGe0ZDd4bk5bIybPzzOrLnGgRwei5YlNQ58rD9JharnJTb2TOF1DRSobhdG
VAxHYE11Snlpf9N+fPeW78FR6UJB0AXJLcGxWoNcG+5bCoT7lo6s/SAanpeM
907xhtdjqpN5TT+lRMW8+vkYftyxwtuaCMxEeYlIpr0w7dy+1TT7XLOqDM88
8QA++fAdfPnfT/HR+29i/XN/xO8fuAU3rK1s8/hbr/Zh7x5r/wbOJNpfIj8x
E6vxcNOCc01zzz/uebjNc9ltZs+7efH3La39INpfgiCsp//R/XHepedCKpYg
Bx2Q9GtttT5c/4HXpmbX4Xo24Wv8qOFxaJJwFFbTu/l3pXnd3aNqj8L51/4c
7mWxx+S1m5cOA/f98wH0CfU36sl5xR9jIshhL4y1aZ36+6ToeVf/fZVxf/+q
gTh12WnC25kozER5iUimvTCZzVtiWenLDZ+3+/z9+/bwcXdXhYqbH//tV/9N
U4uIL9H+/n/2zgM+juJu/9ckN0ogNiT5hxJaqAFCD6EkgVDekELyAimEEJIA
eWnutnq1jTHYGEwxYDoYDNi4YxtXcO+9d1vuRW6q9/vf7ElayTe3s3u3c3Oa
fb58vh9j6Xale7Q72se7Owu9qYi1k74Vdp4JxX3jLs8+J1p+/bRZbu5KTVCd
L4RQvqFAiH72jxvopOyTKFjaJnL8HaRAaYAChXXPPzXOJ7Fnogbr5lxLn77U
cG6FfU918x2EskJ0e6/bqTCnu6O+tOngJrq+1w3ka+9Lr3NHNvXns3usMqLn
lth1eaV+CnQK0u3P/ZpO/X9tlW9nqhSBvgSdbC+MudO/tuxLn3/wiq317NlV
RiM/e8c495QqVOcLvamICSX9LLtO3ytuo4ry+Odf2efYa6zWMbFnfzd3pSao
zhdCmBqv/f3VdGWfK8iflUmBkoyGedZ8+fXzwNVdg1eYLtfj+aPfG/s+68+B
sXnsiiO9LjdE5+SdS52KnrLdl6oj/3X5vBO1fro1BXODafD+HFgYvQ6PnVcK
5QUars3zdwvSJUUX04333aB8+1KpCPQl6GR7YcyaNs6yL70zoJTC4dQ9K9MJ
qvOF3lTEB/f/x7LrDH0iS7gO9hqrdXz458fd2IW4qM4XQpga2Tx5txTeQqHO
LSnQI9oX2PNgg8b5ioxoP6m73i09zr34o89pZT2pxNdwzaC/KEQZxZnUulNr
eqjP3yi/QxdxXwqH6au1Y+js7DPJ94yPgiXNbG71wmhXDOXVnXMz7q0K0Umd
TqXbu/6KWrZuqXz7UqkI9CXoZHthrF6xSHj/ErtPKRX3IzlFdb7Qm1pRXVkp
PDfE5hkXIZqLvN+Vt1NNVZVbu1ITVOcLIUydd3a+i9plnR7tQz0ivSE/SJnZ
LSmYW/dsn7SaEy4Q6UuZ0fkXjL7kM/qSL/I9B9jcFJ19dEPP66gwN/aavOP7
0t6KvXTHy7+mQCc/tejRIg3em0PrzvkFCnwN59sC2a3o6txr6cdXX6B8u1Kt
CPQl6GR7Yezfu8vWfHfsvqQJoz6hnWVbpf38naI6X+hNrdi9Zr3w3qPDu/cK
t232GtF69qzd4NKe1BTV+UIIU+dPf30VndftfMosyCQ/u54rz08ZWS0oxPpS
gdmXzDkWVFrXl9h9S/XfV6Qr+fOi912F8v30g66nUcGA2Hnyju9LPcb3pDad
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
9T6Q8wBd9cKV5Ovmi86Tl+7PrNVAf1GQ/AVB434x42PFPgoVZtD3s75Hv3j8
F8q3ieakCPQl6GR7YVRXV9GEUZ+61pP6lbSnaV+PkLaNNEZ1vtCbJsLW+Yvp
7Xv+7rgrsWXYsqlEdb4QQvVeefOVdOeLvyZ/Bx9l9shAX0qBxrNpcyKWhMhX
GulKz7aklp1a0S8Kb6GT2+HZtE4Ugb4EnWwvjdmxfTONGDJIOPeDlV989Brt
3invuTDHozpf6E0Tpaaqiua++ym998dHhD2JvYa9li2TalTnCyFMDx8Z+DCd
0uVkCuYFos9fSqu55PTTH8k5kB8if8+QcS2ePzeDzu50Fl1x9+XKt4Xmpohj
R6rojV7T4nad4e8tFK6DvQZ9SQ8TYe/uHcYzlT4Y2Nv2+aTBg/rSxrUrXN4a
xKjOF3pTN9i7bhMtG/4VzXrjQ5rUe4Ah+3/2MfY5lajOF0KYHv7+/35HPym9
hPzdfehKKZDNfR4sChn3LAVKg5TZqSXd9PSN1OrEVsq3heam7qjOVzeT5cjh
clqzcjEtnPMNTZ88hr4ePYQmjvks8v+jaf6sybR+zTKqqDjmwk8+MVTnC72p
7qjOF0KYHp514Vn09w//SsEOgejcAwVQpsb9SzmRrtQjSKHuGXRR9vl03jXn
KN8OmqO6ozpf3dQd1flCb6o7qvOFEKaHrdu0pr8//yCd1OVESps55HTWeNZV
pDMVhuiEDifQbdm3UiCAZ9Mmou6ozlc3dUd1vtCb6o7qfCGE6eMv/norXdzr
EvLnBtX3Cd3N81GLXm3I1z5AN/S4li75+YXKf/7NVd1Rna9u6o7qfKE31R3V
+UII08fLf3453dj7JvJ1ZnNd4xyTbP25ITqty/fotqd+RQE/zi0lqu6ozlc3
dUd1vtCb6o7qfCGE6WNGRgbd+ezdlNm9daQvBZT3CZ31FwUo0CVAt/S+lc67
6jzlP/vmrO6ozlc3dUd1vhBCCKHu/iH7j3Ra9x+QP//4a/L8xj03xtx5mD8v
jn7T+pwKj/9c9GOBvCC1zW5Ht3W4TfnPHEIIIYQQQmjPiy+/hK7rdjP5uoeM
Y/tASUR2zJ/LjvUD5Cv2Ncyf58+Pqr6npIfGM2iNnlnXl1hOhdG5w0OFGeTL
9pO/KGJpxKcDdM+L99IPL/ih8p85hBBCCCGE0J4ntjmR/tn/cfI9GT2uN475
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
Huut+PhTKftPsvuRXUR9acj7A4zXOHXdarn3d8nMRdSXNnw1wdhGmDvmLaBN
X0+mVUO+oMldsu2dYxoh7xyT7O3lm4ISW+9x1IOP0Ow+/Wj9mHFUNnsurfp8
GM169nka8ZeHmryOzalXXVEhLY96VI9TumuXkT2P2upKwwqPxL22bt+22oZ7
n3r94iDtWi9/LhXV+ULYHDz5NydRKK85zo/ni96j1NCXQhEzjDnx2Odad29J
HYZ0cG0+PIwvUIV2EPWlcf99mrtc9dFjNLF9l2Z5HZFdRH1pxZJ5Et9d4sjM
RdSXrJ4ftHfFKhr+wIPW51OKeroVQwwyc9m3Zq2trsTyY3P48ziyc1dDr2T/
HsGeW5UKVI9TumuH8t21VHS9dU8quOaA8RwmEWwO+/nDK2nLEvlzKzJU5wth
c/D7v/0Btc5qY8y5zXoGm08uVBwkPzt3k8+ua4vapKMUpIGldd8Lmy+cdaT8
6PNp/UV+CnYL0iXZF9HGvRsxvsBmrR0S7UuMzVOmWS47t9/Lbu0yXGTmwkBf
iiWZvsTYNGmK5fJfP9PZjQi4yMxlZq8+wq70bVEP498ZrGD3/K0bOYYOl+1w
4y3bQvU4pbt2YNfTic4rDS89KnlLSAzV+ULYHDzj+rPphP87JdKTMihYEqJA
XqRv5ASMc06hQva8V59hQ1cq8qnvTOzrl/iMfhQqbEWhojbkL430pWejHz+t
c1t6rOCfFJZ4ya/qnxv0hnZIpi/tmL/Actnlml+Ph77kvC+Jno88+qF/uxEB
F1m5VB0+Ytx7ZfW+Rv7lH1R1FMe7XtQO7/73sGVXYvc1HSiTP+d+IqjOF8Lm
YDAUpHOeOC/Sj1qQvyhIviwftYz8mZHD5k/wG/cD+YqisjkVgvXdSaV155X8
rN8VZUb+Hohelxf5XEaXDLor/w7K7dAJ4wts9tohmb7E7mOyWnbrtOlu7TJc
ZObCQF+KJdm+VFtdbbk8u4dHFrJy2T5rjvDc0vIPB0t7X8miepzSXRHVlWEq
/pn1uaWRvdKzazNU5wthc/HMm86gk7ueFOlKAcqI9I9QboBaFYUomBv5PJuL
rjhoyJ5vlJnD5uxWPZ9epMvlZVCouFV0PrwePuO8Ukb3DLqs66WUk92Zsp/q
gPEFNnvtkGhfOrRtu+VcYGP++SjVVFW5udvEIDMXBvpSLMn2pYMbN1kuP+GJ
9m5EwEVWLovefNvyPbFnOFceLJf2vpJF9TiluyI2LagWXou3Y438eRsSRXW+
EDYXA/4AXfSPC+ikzidTMK8l+fIC0fuY2P1ABZHXsPNORdG+xLpUOvQlf04L
ChW0jJ5XYn2pk4/OyDqLnih4NNKVOqIvQS20g7AvPfakcc8Fu5bo8PYyY96z
pe98YDyT1mo5NveXbGTmwhD1pdFD36e5MybacuHsqVQj+XlU9cjMJdm+tOC1
NyyXZ/f4yEJWLpM6drN8T2wuvHRG9TiluyKWjq8S9qWqCnnPT0oW1flC2Jw8
4dTWdPUz11Jmh5PJV9Iqot+4VylQUH//Ut21eYaq+1LEvEh/K4o+f8mf56d2
WafTg4V/odynOhldCX0J6qAdZDx/aen7H0ndf+qRmQvD7ecvrVo2X2IaJjJz
SbQvsWcIsXkMRNsO61OykJXLmEcea7bX4jFUj1O6K2L2EOu5HvrcmZp5EhNF
db4QNjdP/eGp9NMu11NGlxMoVNzSmGuOzZsXKoh0kpzIa1g/KUifucfZ9xcq
DFHLzq3oN6W/obwuXRq6EvoS1EE7uNmXRj74T1rz5Uip+05jZObCcLsvper6
PZm5iPrSlinf0P616wx3L11GmydPpZWffGbreV3M3UuWNbtcvrzvr5bvaeOE
iTHL7Jg735hb3a7z+r8iIxID1eOU7oqY/MYxy7406F+HpP3s3UB1vhA2R9ue
146uzLqKMju2jHSRTAoUBiiQG+lMxp9sjoWM6HNiC3zqZPM9RL6nlj1bUvDJ
EF3R/QrqltW+SVdCX4I6aAc3+xJ71ihbX6qQmQsDfSkWUV9Kxkmduje7XNjz
ZEXvi13DejzsObVOspn9vLxr+lSPU7or4pv3rM8vfdzxsLSfvRuozhfC5ur3
zz+NfpZ/A2W2b0kZRS3JnxugYFGAQiVBo6eoPq/EDBUFyd8+QJfl/oS6lXSI
6UroS1AH7SDjery5fV8y5liWjcxcGOhLsUjrS3+4n3bMW9Dscqk+dkx4L9+B
jZtilkNf8o4iJr5mfX5p4N9xfglCXT3zsjPo2txrqFWn1sa1eWwOCH9u9H4m
1V2JzSUe6hqk/9fh/1GXFztQ3jOd0ZegltpBRl9ijv3X48Y1Wem4H9kFfSkW
WX1p3eixklORk0vVkSPi80uLl8Qsh77kHUXMHGx9funZX+H+JQh19rTz29HV
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
uPb/Q7lwHew1Vuso351+x3nQ+fZSMyZyrDZgaGocOjWtthcR4SPHrN/PB+OE
62CvsVoHO46UhaxcGOyYXtZ2wtYtE5m5WME6Qe3CtVTz8QT7eXw+hcIbypJ/
0zaQmUvNO2Os9wPBv6WEd++nmle/tM4q8jVk/PuD6vFbN+0yYdSn1Lf4Gded
PnmM69tIY1TnCyE0FcG6DPoStLO9sA6DvsSHdRn0JT7oS86oXbGJat4dm3gm
kxcY54JlIjOXmrdHJ9yX2Puu+Wi8dUavRNaxbbdLSTRF9fitm3YZP/IT9CUI
YVKKQF+CdrcX9KX4oC/FB33JHux8R+3E+e5k8+F445ozWcjMJZm+ZCe/2rmr
XEohFtXjt27aBX0JQpisItCXoN3tBX0pPuhL8UFfEhOurKKaYdPczefVYRTe
Lef+C5m5JNqXwmu3ijMZ/q2U+5bqUT1+66Zd0JcghMkqAn0J2t1e0Jfig74U
H/QlMcY8Dm7nM+wbaXOEyMwlkb7E5sSoeXOkdR7snqWjFS4n0RTV47du2gV9
CUKYrCLQl6Dd7QV9KT7oS/FBX7KmdtFa97MZ/LVxzkoWMnNx2pfCteHonIFW
eUi8Z6kxqsdv3bQL+hKEMFlFoC9Bu9tL7YLVZMxfLNDOMa7QyNdKp+1FBPpS
fNg1YdK2l5WbXc+iMTJzYRjnRV4dZq8DvTuWaifMpdqlG4jNg8fmETfmrHx9
eMzrwoePyguF0qsv1c5eId6GJN6z1BjV47du2kXUl4a8P8B4jVPXrV4qcWvB
9gJhOikCfQk62V7sIDp2UYmsXNCXEseL20s9tVMW2upKtV/Pi3ttXfjgYfPe
pzdHUniveMxOFpm5OOlL4e17jHNHlvlJvmepMarHb920i6gvrVgyT+JPPXFU
5wshNBWBvgSdbC928OLxL/pS4nhxe2EY24zoOUGRLsCewyRcV6QP1K7YSOEd
+5J9y7aQmYvdvhSuqBTPu56Ce5Yao3r81k27oC9BCJNVBPoSdLK92MGLx7/o
S4njxe2FYVxPJzqvJPn+rESRmYvdviScIyNF9yw1RvX4rZt2QV+CECarCPQl
6GR7sYMXj3/RlxLHi9sLo+bLb6zfO5sPvPyI5HeYGFJzsdGXapdvFHfNFN2z
1BjV47du2gV9CUKYrCLQl6CT7cUOXjz+RV9KHE9uLzU1VPOa9bV47N6mdEXm
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
0g/sR3xU/77XTbtMGvuFZV8aM+yDmGXmzZxkuQxbp2xU5wshNHUC+lIsOJ4R
w84hxcuHPWdpy4tvxP08WzaVyMwl2eO8yl17LJdnz/mVhcxcnPQlY5uZv6TJ
8uhL6Qf2Iz6qf9/rpl0OlR+g/j06Wp4rqjh2tMky7wwojf/6yLrYOmWjOl8I
oakT0JdiwfGMNdXlh2jG+Tdws5lxwY1UW1llPFsnXn5sWbaOVCEzl2SP82qr
qi2Xn3XZrW5EwEVmLk770uqnc5ssj76UfmA/4qP6971uOmHCqE8tzxctnDOt
4bWbN6y2fC1bVypQnS+E0NQJ6Eux4HjGmt3Dx8XNZsl9/zFeU1tREelOP4uf
4XA5zwLkITOXZI/zjqxca7n8gtvucyMCLjJziduVI316xnnXczs0O0dQD/pS
+oH9iI/q3/e66YSD+/fSi6Ud4nagDwaa8z6M/OyduK9j62DrSgWq84UQmjoB
fSkW0fEM+7fwbQPft2XZu58a//aZClKxvTBWPZEVN5vNL7zW8Lql9/8n7uvY
OlKFzFySPc5bl93LcvnlDz3lRgRcZOYSty9FutKKf3fifo5dw1nP2i7Fnu1L
XhxfvLgfweT2o3q+Esx3V7ZtEx0+dNCyV7F1pArV+UIITZ2AvhSL289H2T0i
NedSUrG9sGvtZl16a9z3yub7rYc9Dybe69g62LpSgcxcEj3OC9fU0PZ3PhFu
O+w4UBYyc7F6Tzs/Hc79+Jxr76JwdfTYf0NJP8/2JS+OL17cj2By+1E9+/bu
on4l7eN2oXEjPqaZU8fG/Txblq0jVajOF0Jo6gT0pVhcP55J0fU1qdhe9k+Z
Efd9suvv2HV49bDuZJULW1cqkJmL6DiP/ewPLV5ueHDmPNo1dDRt6f8mzb/l
D7a2HXYfWHPMxeo9lc9fTHNvvIefV911mlteegt9yUPjixf3I5jcftSY0V+8
ZzmPwwCL59uyZVOJ6nwhhKZOQF+KBccz8bG67oVdf9cY0T1MMv/NtzEycxEd
5yXjot/GzrPdXHKxel/7vp5Gm/vx509c8sdHjOXL3huCvuSh8cWL+xFMbj9q
zJ5dZZbX5FnJlk0lqvOFEJo6AX0pFhzP8AmHw8Y1U/HeJ7v+7nis7mGae93d
xjplIzMXacd5P7qW9k3+ttnmYvXedn0xmiq276Dp51zH/fzhFWuMfQZ9yTvj
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
SZIkSavpb/ikPp0=
     "], {{0, 460.}, {422., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
     MetaInformation -> <|
      "XMP" -> <|
        "XMPBasicSchema" -> <|
          "CreatorTool" -> 
           "Created with the Wolfram Language : www.wolfram.com"|>|>|>],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{377.05859375, Automatic},
   ImageSizeRaw->{422., 460.},
   PlotRange->{{0, 422.}, {0, 460.}}]], "Input",ExpressionUUID->
  "5dfba5f2-61d7-42c7-b835-df47bb3f743d"],
 "            ",
 Cell[BoxData[
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzsvQd4G9eZ7r+bvc8TZ7PJZve/u/fu3TgiJdvqUm5c0m9iWy5xSbKbm2yJ
45SN47jGce9VLurNLY7jLjnuTbYkq7nIlqzee6PYQJEg2CvA7z/fAEMOgG8K
wDkzQ8z7e543kUEA5Lw4Z+bFmXO+U/6r3/3bbz71F3/xF9cco/3Pv/3yhlOv
vvqXN/3oC9p//PjKay65+MqLfv29K6+96OKLrv7ar/5Ke3Ch9tybNf0P7d8E
AAAAAAAAAAAAAAAYMvCQHgRBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBpalSB77IwBcZ+CIDX2Tg
iwx8kYEvMkHln6io1IEvMvBFBr7IwBcZ+CIDX2Tgi0xQ+ScqKnXgiwx8kYEv
MvBFBr7IwBcZ+CITVP6Jikod+CIDX2Tgiwx8kYEvMvBFBr7IBJV/oqJSB77I
wBcZ+CIDX2Tgiwx8kYEvMkHln6io1IEvMvBFBr7IwBcZ+CIDX2Tgi0xQ+Scq
KnXgiwx8kYEvMvBFBr7IwBcZ+CITVP6Jikod+CIDX2Tgiwx8kYEvMvBFBr7I
BJV/oqJSB77IwBcZ+CIDX2Tgiwx8kYEvMkHln6io1IEvMvBFBr7IwBcZ+CID
X2Tgi0xQ+ScqKnXgiwx8kYEvMvBFBr7IwBcZ+CITVP6Jikod+CIDX2Tgiwx8
kYEvMvBFBr7IBJV/oqJSB77IwBcZ+CIDX2Tgiwx8kYEvMkHln6io1IEvMvBF
Br7IwBcZ+CIDX2Tgi0xQ+ScqKnXgiwx8kYEvMvBFBr7IwBcZ+CITVP6Jikod
+CIDX2Tgiwx8kYEvMvBFBr7IBJV/oqJSB77IwBcZ+CIDX2Tgiwx8kYEvMkHl
n6io1IEvMvBFBr7IwBcZ+CIDX2Tgi0xQ+ScqKnXgiwx8kYEvMvBFBr7IwBcZ
+CITVP6Jikod+CIDX2Tgiwx8kYEvMvBFBr7IBJV/oqJSB77IwBcZ+CIDX2Tg
iwx8kYEvMkHln6io1IEvMvBFBr7IwBcZ+CIDX2Tgi0xQ+Scq8pJUrJm6X99I
HXPepfY7Xqe2K56j1t88Re03vEQd0xdT1/zVlKps9PR3OuGHLzWpXtra222p
MKLal46+lK0nxaoulVToSnDn4YPJHsdj5+cEhUpf4tpnWkgb2J3spgbtNX19
fYqP2hmVvlQ7nFe6HI6ffx7UeQnnFxn0I5mg8k9UNFj6unup66V11PqLx6n5
Ow+4Utulz1LPx/s9aB3O+OHLxMQRGt5YYakwotqXW9vitp4Uq9kdCYWuBJPz
Utp59uREpeOx83NSAZ2TVfryg+baotrCSE3faqqiH2mvv6M9TnuS/n+nUunL
CIfjf76r1fb1d7bb90GV4Pwig34kE1T+iYoGQ/fibdTy44dd57tcdcxYTH2d
asco/PBlXCNyXi434zzsmnW9Xa6Pf7323CBQ6cv3i7w+SfrPlhi9091OvT7l
YZW+OB3r95prbF//u9b6ks15OL/kE8V+BHnbr8z09SapY8o7Rec7s1oveIyS
u2s9bjUD+OELcl4+OA+75/72RtfHz88NApW+eHl9MnRJ61Ffxj5V+uLmONf0
dFq+HjkvWueXKPYjyNt+ZdDX3kVtv1vgScbr12lTKbmvTkHrQc6zQrUvOA+7
57SmatfHz88NApW+qLg+sSb7kIlV+uLmGC/VrsNWIOdF6/wSxX4EeduvDHh9
hacZj+fr/f556utRM//VD1+Q8/LBedgde5M9BXuwN4D1GCp9UXV9Yj3V2TJk
fXFzfMdr4nVgEsh50Tq/RLEfQd72K6br5XWeZ7zWX/2J+trUzTnywxfkvHxw
HnbHwx1NBXvAr/Eblb6ovD4dp+mowjWUKn1xe4zTLPoEcl60zi9R7EeQt/2K
a6Y0nz7VVXZr+cnD1HHfQup+c5O+rrZrwWpqv+1Vaj57Rt7zUvXh/J5QCMh5
+Tidh3/aEtOfU6iWd3codMX/nPfDIs7N/Bq/UemL0/WJ15Wu7unU9V5PB72s
/Tdn3X9z6d2TCsciVPritj2clKgUa6xEOedF8fwSxX4EeduvOmYucbeG9oG3
Le/BpmqaBub2nTebkofrvWomlqj2hUHOy8fpPPxGd5vCoyseP9qLQSzVa+nP
z1vqaIxNu4pZ3KtThUpfnK5PdnUDN/R2Ofa/X7WomfvLqPSlkOz/ilBjJco5
L4rnlyj2I8i79pNqaKXmSdPsM96pU/Q6ek5wTcbud7ZScqc/88lVn28Y5Lx8
cB525rmuFkt/Hu1spgtaYpY/59f6iUpfBnN9Yl7tarN9/TkO9UcGg0pfCsl5
PxDGeJHzwgf6kUxQ+ScqcgPfd3Ucx5u+WFkbGAyqzzcMcl4+OA87w2N2Vv5w
nby5NnP3fq7wu7WESl8Ge32qTyVtX8/1pVWh0pdCch5rU05tReS88IF+JBNU
/omK3NB29Z/tc97pUylV16ysDQwG1ecbBjkvH5yH7WnpS+l16CVvRmnq7uvT
a6NZ+cev5ffwC5W+DPb61KN5Zfd63q9GFSp9KTTnXdWWPQ8GOS98oB/JBJV/
oiIneF+z5jOm24/lzVqi7PMfLKrPNwxyXj44D9vzVrf1PZJ/b4npz+G59aNs
PHzLRw9V+jLY6xPv02n3+jMV1hxU6YvV8XCbOMEi+9eb1kQi54UP9COZoPJP
VORE79ZKx3u2yQPWtTqDRvX5hkHOy8fpPMxjD3/sbHalZzpb9O+afuBHe2Gu
tLkGzzLVdvgPmzl6/B5+odKXwV6fbnPYx/WXIZw/7gar4+GMd3HrUfFnc001
d25oa4hszovi+SWK/Qjypv30rNzlmPP6uvxd+1cIqs83DHJePl7Xt1ro0/dz
P9oL35OdYNNmVpv2suJ6XlbP4/fojvD1Kakd+9Od1mtZDPH1SxUqfbE7phe7
WsXHv5ao6t+T9F6H/fRUgvOLDPqRTFD5Jypyovv1jfa18n70oLLP3gtUn28Y
5Lx8vD4P+3Ufxo/28kFPh+Vx8j05cy201TZz9Fj8Xn6g0hen6xN/9lt7u3V9
ovnxelcbzetoolNd7hdntwdsmH2xO6aNvV30raYq8WfG/fwHHWpwqwTnFxn0
I299gbxpP11Pf2S/Z9kVzyn77L1A9fmGQc7LB+dha+zuj/xHZm6egdMcPZXf
sc2o9EVlHX+p3shQ8cXuuFZo+X6ORY77ceaYn3UYo1EJzi8y6Efe+gJ50366
nl9jm/Pab3lF6ec/WFSfbxjkvHxwHpbh+pF8b83qOKV9l+zm6H1de68+H+7d
qvRF1fVphKb3FI93qvTF7the62rT97U9zuLnPKf+DZu1Psh5pXd+iWI/grxp
P51PfGi/P+3FTyv9/AeL6vMNg5yXD87DMpt7u2yPc7Vwb8Rujh5rS6+6/aEN
VPqi6vr0rOK91xmVvtgdm7Gv/G8t1mPc1R7Xr83IedE5v0SxH0HetJ/uV9bb
z8/7/hzlbWAwqD7fMMh5+eA8LDPNIbMdSfZSXSqZJadxGat97L1EpS9eX5/4
Pvfjnf7U81Tpi90xzsmsq/3YYv7m/0lU6ntZIedF5/wSxX4EedN+epbtcF5v
29HtQ0soDtXnGwY5Lx+n8/B97Y36nuFu5dd+rqp9OdPlnOdCpLKulYFKX7y8
Pp2meeFUP8JLVPpid5z3aP3H4KymGvE5T0Z4fl4Uzy9R7EeQN+2nd8Nh5/p5
Pu1VWwyqzzcMcl4+qGOaD583vc54hlSfk1X64uX1ieeL+zFf0UClL3bHeW1b
Q//zrPZJ/q+WmO0aHpXg/CKDfiQTVP6Jipzoa+ui5tOm2K/FuO1VH1pCcag+
3zDIefngPJzPY53NynLeY4rvr6j0xen6tKCrVZ+3yHKqCcfiNQp+odIXu2P8
nalGdntfSt+TqtA2oxKcX2TQj2SCyj9RkRvaLnvWeUxvb8z5jQJA9fmGQc7L
B+fhfH6ssO7Bj0Na98ANhdR37dQyjd16ZdY3tJ93+rT3r0pf3OY85h4X123k
vOBBP5IJKv9ERW7oemqVY85rv+5F159pX2+KkrvVXpcMVJ9vGOS8fHAezob3
HR2hKOOx+L3Ne5sOFV+YQuv4z7e4T2nWPNP+XypR6UshOe9QEXMCVILziwz6
kUxQ+ScqckOyMk7Np9rfu9Wz3l1vOK7JSCXaqe3K+frzu9/e4kUTsUX1+YZB
zssH5+FsXrDYp8pL8e8Yar4whV6feF+v0xzWs3CfrFOYew1U+lJIzmN+1VKH
nBfR8wsTxX4EeduvOu59yzHn6fX0fvG4ngslendUU8v/e2jg+Vp27Fm116um
IqLaFwY5Lx+ch7P571b7a/CrXW39c2esNNnh3hz/jqHmC1PMvpwLHWrNsK43
rVVQhUpfCs15TvXykPOCB/1IJqj8ExW5xe2YXn/eu+Ax6pj8JnUtWK3f9227
/Dn5uWdMo94tlaFrP4XglPO4/xWjBUN0fIZxOg//36aqon1RiQpfeJ683brH
ExOVrta27ezttvWUf0e7ovk0KttLMdcn9uv8ZrmeiCG+l82eqUSlL4XmvD4X
4zNRyXlROr8YRLEfQd72K6br2Y9d57yCdO4sSh44Gqr2UwhOOa9YSXtgeYVq
X7yuYzqUr0+Lutttj+fSVndtn8/JXP/W7r34d6lAZXsp5vrEfOBi/OqnLWrX
h6n0pdCcxzxRwJpuleD8IoN+JBNU/omKCoGvM1xDRUXWK2Qdhx/tpxCQ8/LB
eXiAq9vqbY+H65+5xWqfK0P8u1Sgsr0Ue31i/stm719DyxRlX0alL8XkvJa+
lOvzkUpwfpFBP5IJKv9ERYXS195NbVct8DTjtfz4YUpVNjr/8iLwwxfkvHxw
Hk7T62IM7kABNY6d9jjg39WroL6pyvYymOvTJoe9vVinN1Ur8YRR6UsxOY+5
rd1d31MJzi8y6EcyQeWfqKgYuC5K59yl3mS8/3yUUrXq1m774QtyXj44D6ex
2n/U0NcTVQX9fbuT9nP0WPw7vUZlexnM9YlxGuNkPaloL3aVvhSb8/a6rLGi
EpxfZNCPZILKP1HRYOj5aB+1/vcTxWW8U6dQ54PL9PFBlfjhC3JePjgPp7nL
YWzl9wXeZ+W5E19xGB/k3+k1KtvLYK9P+7SfH+fQZnicsynl/RoVlb4Um/OY
C1zch1MJzi8y6EcyQeWfqGiw8HWn5/3d1H7Ty9R89gzn8bvzZ1PH1HcouV9d
DQgzfvhyisN1t1gVMm+rUFT7Ukx9fjc6OaFubTbjtS9O19sXi1hTfYnD9+4L
FMyZVtle/t3GoxM0Nbio38W1H5zazqsK9nFS6ctYm++P3L/sWOKw9meo9aNc
cH7JJ4r9CPK2X7mhrzdJvZsqqPutzdT1zEfUOWcpdcxcotdV4cd6N1bo93z9
JAy+hBH4IgNfZOCLDHyRgS8y8EUmqPwTFZU68EUGvsjAFxn4IgNfZOCLDHyR
CSr/REWlDnyRgS8y8EUGvsjAFxn4IgNfZILKP1FRqQNfZOCLDHyRgS8y8EUG
vsjAF5mg8k9UVOrAFxn4IgNfZOCLDHyRgS8y8EUmqPwTFZU68EUGvsjAFxn4
IgNfZOCLDHyRCSr/QBAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQVAYVOrAFxn4IgNfZOCLDHyRgS8y
8EUmqPwTFZU68EUGvsjAFxn4IgNfZOCLDHyRCSr/REWlDnyRgS8y8EUGvsjA
Fxn4IgNfZILKP1FRqQNfZOCLDHyRgS8y8EUGvsjAF5mg8k9UVOrAFxn4IgNf
ZOCLDHyRgS8y8EUmqPwTFZU68EUGvsjAFxn4IgNfZOCLDHyRCSr/REWlDnyR
gS8y8EUGvsjAFxn4IgNfZILKP1FRqQNfZOCLDHyRgS8y8EUGvsjAF5mg8k9U
VOrAFxn4IgNfZOCLDHyRgS8y8EUmqPwTFZU68EUGvsjAFxn4IgNfZOCLDHyR
CSr/REWlDnyRgS8y8EUGvsjAFxn4IgNfZILKP1FRqQNfZOCLDHyRgS8y8EUG
vsjAF5mg8k9UVOrAFxn4IgNfZOCLDHyRgS8y8EUmqPwTFZU68EUGvsjAFxn4
IgNfZOCLDHyRCSr/REWlDnyRgS8y8EUGvsjAFxn4IgNfZILKP1FRqQNfZOCL
DHyRgS8y8EUGvsjAF5mg8k9UVOrAFxn4IgNfZOCLDHyRgS8y8EUmqPwTFZU6
8EUGvsjAFxn4IgNfZOCLDHyRCSr/REWlDnyRgS8y8EUGvsjAFxn4IgNfZILK
P1FRqQNfZOCLDHyRgS8y8EUGvsjAF5mg8k9UVOrAFxn4IgNfZOCLDHyRgS8y
8EUmqPwTFZU68EUGvsjAFxn4IgNfZOCLDHyRCSr/REVuSFU1UnJ3rayDRx1f
z8+xfL2mvt7kYJuJJV770pbooHhVk6WKpaO5y/Z9U8lU0e8tEYbzTVN3D61r
aKR3qmrpxcOV9MT+Q/TY3oM0/+ARequyhj6sq6d4V7env9MJlb7wsVS3d4iq
6+xyfD37ZfV6VrKvb7CHb4lKX9p7e22PK1exjk5q017Tp/B43eJHP2p2+NzD
iGpfelKpgtqMW7X09Ch0xXtfnM4JxcI++HmuCSr/REVOpOJt1PydByzV+tM/
OL4HP8fuPVINrV40FREvfentTtKfb1tK829cbKne7t6i/s6Nb++2fd+uNm/z
jqr24kSvdn5efTROD+0+QHdu2elKj+87RHuaWzw4amdU+dLa02t7jHN37Xd8
jze17Gv3HiqvUSrbC2d7t23BrLu37qRZO/fq7eNt7buCm6zsNX70o/u37bb1
IYyo9uUth75QrFbWOo9bDAYvfeGse+/WXbbH050qbnzg3ZqY7fvydzMvCSr/
REVOcAZDzhvghdvtc157c2dRf+cnr263fE/Oll6jqr3YsbkxQTO163Kx52A+
t/cUed5yiypfOIMh58n8ocicJ+nJ/YdpR6KZUj6N9fnRj+7dZn8tDyOqfXHq
C1HIeYxT2yj2nGCXozlbek1Q+ScqcgI5L5u3Z6+yzXlNseKOZdXzmy3f860Z
HxZ7+Jaoai8SPMb/xpFqT87D83bvV3qvSpUvyHnWeJnzDL1wqNKX+7p+9CPk
vHyQ89I8vMf+vsjRIse4X66osnzPB3c7n6sKJaj8ExU5gZyXzfvPbLTNeUcP
J4r6O1c+ud7yPVc8sb7Yw7dEVXvJpSuZpKf2H/b0XHy3ptqO4sZNnVDlC3Ke
NSpyHmtxdUyZHwZ+9CPkvHyQ89I8f+iI7fEcaWsv6u/kOdJW7/ncwYpiD9+S
oPJPVOQEcl42Gxbuss151buLO0+8++gay/dc+9qOYg/fElXtJRdeX+H1ufjp
A4cpmVIzVqPKF+Q8a1TlPNaa+rgyT1T7YoCclw9yXhr+LmN3PHubi7u28po4
q/dcqHnvNUHln6jICeS8bPZ8XGGb8w5tLq4PvD37I8v33PHewWIP3xJV7cUM
X2O9Pg8/sueAPkaoClW+IOdZozLn3aWJ18AMRV8MkPPyQc5L84nDOXZborga
EI/Y3A9eVddQ7OFbElT+iYqcQM7Lhsfr7HLe3jVHivo7X5/yvuV7Hi4yO9qh
qr0Y8Hp/Xg/p5tzKayZfO1JN6xsa9XW1fB7h+VW51zd+3lCre2CAnGeNU87j
dnGotU3XvpZW2hRP0Ad19fTHfdZjDmapHNNT3Y8Y5Lx8nPoCzxXh5xQq1ev6
vfaF+4OdD1y3qhhm79xnkx2biz18S4LKP1GRE8h52TQfbbPNeTveO1DU3/nS
3cst37O+org5f3aoai8GC6tqXV2DX9fyndU92ER3d//cvge27y56TnEhqPIF
Oc8ap5zX0GX9ufP8I6ccpGI+kYHqfsQg5+Xj1Be2NhZfy1QlXvvCfcPOB65B
WgxTtu+xfM9KBevggso/UZETyHnZJHtTNP8m65y3afGerOdX76mnV+5dkaU3
p31AfTnZ5vlblli+Z0eL9/lGVXthOG/c41DXie+ncR09J3jNJI/fVPlUD1aV
L8h51gwm5zGbtWu63ev5HpQqVPpigJyXD3JeGq5HaufDspq6rOfz+N/0HXuz
NHfXvry16Xb3YlTMgwgq/0RFTiDn5fPa/e+5XjOxYaFc/7ixZuD+QLInaV07
79Z3h4wvBnzf1Wkc7y0Fc3m9QJUvyHnWDDbnOdWgnrZjj+3rB4NKXwyQ8/JB
zhvAriZp7pqJJRbrNmKm+gV22XGygtp5g/EF8qZfIefls/QPn1jmslXPb8l6
7qJ5H4vP4/UcBp2tXZbv9+b0D4aMLwbPHKiwPQfzd0WevxdGVPmCnGfNYHMe
12e0ez3vJ6EKlb4YIOflg5w3wJM2dau4Dp4Zq772iWkOK+8paPV+8xTUzhuM
L5A3/Qo5L5/VL22zzGVcB8+gp7OXFljc4/1wweb+57XUW8/5W/GndUPGF4a/
C052uGfLe1SFFVW+IOdZM9icV9fZaft6FXVdDVT6YoCclw9y3gCv29SgN89N
5ToFd1k876XDlf3P4324rd7v2QNq5roGlX+iIieccl7z2TOp/e43bMXPKaWc
t235fstctuSRNf3Pq9plvTb31XtX9j8vXtVs+TzeD22o+MJUtLXbnn9ZMUU1
jr1AlS/IedYMNuctdPAF6zD8R7UvTn3hlYoq+uhogyvxWFZyCO+T936s3tKH
P+071P88Xkts9Tyep2dQ095h+TxV822Cyj9RkROOOc8DDbWcd2hTtWUuWzhr
Vf/zNr4tz80z1BpP1yqPHYhbPmf7SjVzyFW1F95b1Cnn9Sreo3YwqPIFOc+a
YnMe72HrVD+MpaKuq4FKXwyQ8/Lxun7edgW1QiRU+LLVZh3SQ7sHrh/v1tjX
VG7s6tafx/WLrJ5T7PpdVb5A3vQr5Lx8uM6J5TjdfSv7n7foQXlunqEDG9Jz
Jyp31Fk+59CmcH1/coLrNdmdS2aYvjeGEVW+IOdZ45Tz+DrGexqzDre20xbt
v3kMY84u6xpfZvF1ayj6YoCcl4/XOc+v+7wqfKm0GX+bsXPgfPuYQz/b3Jiu
37W7yXrcT5VPQeWfqMgJ5Lx8Olu7LXPZC7cv1Z/T02U9N8/Qmpe36c89uNF6
fLDY/XKD8IWxu4fA4v10wowqX5DzrFG5HwZf21Si0hcD5Lx8kPMGsFs3cV9m
DZLd3DxDb2TGvbfYjA8Wu1+uKl8gb/oVcp4M5zmrbJZK9Tnum2FeS2u3l1pH
s5rawKp84fkuducS3nc7zKjyBTnPGpU5j+uFqUSlLwbIefkg52Vj10Z4fgPv
c+vkgbGWdq3NXAhV55ig8k9U5ARynszbs1dZZjNeZ8v1kp1yHqurrZt2vH9Q
/Nnzt76bV78y7L7w/pB25xLV4yuDRZUvyHnWqMp5axXud2ag0hcD5Lx8kPOy
edhmP1oey+N6yW58aO/ttax/yrXvw3Y9grxpP8h5Mu8/s9Eyu/F93WV/XJv9
+E2Lxfu4vF/G1mXy+l3eN2Oo+eI0L37qdnU1a71AlS/IedZ4nfP4evTxUe/3
WpdQ6YsBcl4+yHnZ8H0Sq2Pj+7pPH8ivsSfdx+Xx7/di8nd13jcjbL5A3rQf
Nzmv+81Ntmr5wdySy3kbFu6yzHntTZ304h3Lsh7jPTQ4t+U+l2u0bLYY+1v+
uJraeSp92Zaw34OK1Y31tsh5JrzMeXwtcqrD4iUqfTFAzsvHqS/wvg9cR8St
VPYdM6p8WWyxzwWrubtHrxVufoz30JgrrGPi+dXLauWxv2cU1c4bjC+QN+0H
dZJl7ObUSXPzuN7xe09vyHucH7PKjGteUVM7T6UvB23W5Bvya6/aYlDlS7vN
XGnWHBffld9wuLbx71CFKl8YL3MezwtQdW9JQqUvBsh5+aBOcjZ291GkuXlc
71gaA1ygPWaVGd8MYX0iyJv2g5wnY7fOQhqfW//WLtq8ZG/e46/cu4LWvr5D
fJ9tK4be/utu1nW9cKjS8X2CQpUvjN0+Ife52JtrwUHrezOq9p00UOmLU85b
39Co10ZhWe3PadYWH6/xKn0xQM7LBzkvG7t1FtL4HGe55cLjXC95YVWt+D4f
xNTUzhuML5A37Qc5T6b5qPVeZe8+mr//7b61lXR4c434/BVPrBcf53orQ80X
hmuwO12La0K6J4ZKX3j/LTtPOCPb8ajNXGuVe3sxKn0ppE5yTyqlX4vsns81
w3p8mhug0hcD5Lx8kPOy4T5i5QXXssp9bIP23WmbRU37Zy32J1f5/Smo/BMV
OYGcJ5PsTelrK8SsJzzecKTJMhta1Wg5eqhxyPnCWM3jNauQvai4LkC1T/d6
Vfoy32Y8jnWgxbqeb6eWAe3GA1Xu7cWo9KXQ/TCcanGz3lc49mBGpS8GyHn5
IOdlw3sMOfUJs3jujFU2vC9nLp+hCkW18wbjC+RN+0HOs4bXVripnbLg5iWU
7Enq84ZeuMO67p60nmMo+tLQ1e1475b10uEqxzUZvFbsyf3ptWIb42pqRptR
6cs7FvdDDNnVFrSqdWCI77WoRKUvheY8zv3SHHKzOBv5MbdepS8GyHn5IOfl
w2sr3GQ8PjdzLuTrkVWmk9QcwnVekDftBznPmqV/yL8/K8m8563b1zx/yxLq
S6mbT67SF+bViipX5w7ef7Ehs69iLryfj/ncxecn3pNHJSp9We1QQ5ol1QPh
Wge56+VyxTlQJSp9KWZ/2+0u9lF+/Yi6eQ8GqvsRg5yXD3JePsb3YTfn3EJf
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
DNdrrvB8vVROzRWV/WiWQ82Crl77eyt2e1jOKqB2QjGo9OXRLVsdxxGqW1uV
Hp8rurupdsoUqjTfq7XZQ9qqljdk0zdzPdN8rjj5ZEpk7uE67cE6e6Pz2lJ+
jt17uNkLtlhU9aOo+gJ5dx52Ioo5b9vy/c57lsWsr038Mz3jXf2EnvGM+njZ
5z3UZ1AmY74e38M15SuV/cjpXMz3MK3o0PKo3XjgU9t3uPobikWlL8sdxhEK
PT6u61/ldS7kjDd1SmZdbRn6pU9K7yXCWe8kSixeTMsd6i2yYu3tlh8j/8zp
9VzTURWq+pFTHcpS9QXy7jzsRBRzXkt9m2POe2fuR9Tbkz9Gw4/xzxb+/gna
863vpOvjleH7v+8y1uHyPdxMzRWV/ejNAwdsz6PP7rT+vvx+pX2duTf2H3D1
NxSLSl/qOzroFodrDOv53Xsc12TwHEWurczPXxfzqNZXVxfFpk1L10AuM2og
I+epVvpcOKK/r1acdDJVv/UW3bRqlW07eXDTZuoR2gk/9qDNmLihhg7nvcmL
RVU/atD6kNNxlaIvkHfnYSeimPOYpY+tdcx6Hy7YTH2pgVVj/G9+bNHv/0R7
v30axYcPnNPEGsiYh6dUiTLeD3csVc+eqdfXU9leVlVX255HOet8WFWd9zqu
ZXDX6jW2r+UcqBLV55cX9+x1vM6w+N4S50IJXq9hrv/Ffg56nyYt4+njeBNy
ayAj56mWUf+y/xyoZ71T6N0nnnTxnWA3pUz1Mvnf/JjT6/64Te3+Kyr7Ef/t
UfMF8q79dC/cTK0XPWkpp5xn99quZ9zvHeFn+3FDxdZax5zHemXyCvpw/iZd
/O/Fv39cnI+Xm/MSyHn+XE846/F+uLNm0ac+9Sll7eVoe7urcSsej1py6LA+
L/q5nbscX8M/j7lYTzcYVPYjxu2YnqGZGzbQC3v26PmW7/v+wWKOH9cDO9Tc
XNxBd3ZS7QPp+Xi567Yhn5Q5B5rPhRUnn0IvPvgw3fyhfRu595O1tGDXbl38
bzftamu9mjrABir7Ef/tbo6xlHyBvGs/HdMWOWa5YsXvHcb24xY3Y3pZ93Kv
fpL2fvvUzDiew7gAcp5P15L0ffPY2HE0e/wE+tRf/qWy9vLKXvvaKMXoz7v3
FNM1CkJ1P2JWHqn03BvW3avXuKorkUVvL8VmTKdKp9opQbfdKMhcSznz2GEt
6z3/h8c8bSeqx6wY1f3IzZheKfkCedd+kPOsaT7aRs/fssRVxlt09VO071un
Uva9H9NcH2MdBmog+ybzGKpec2XMWC3rjae/KjDruaWpq8ux5nwh4pokDRb3
Mb1EdT9ieI4k11BRkfUKWqfS00OxWbP0fS4sx/FQH88/lY3Iq6XM/3/4pJNp
waN/8KR93Kb1Sav5AF6iuh/xMdzm4fkl7L5A3rUf5Dx7Dm2uoQU32We8xXoN
5O9So7HPhWmfBrE2Hq4fvkiq48D19TjrFTKuVwiLDh3y7DzMtZP9wI9+xHBN
/se3bfc04/GcPddZuL92Sk59vLzsMdB+gm7DkZHpvJge2xtBh046ieY/+mhB
9/xzxa/lfVn8wI9+xMcyGD+Gki+Qd+0HOc+Zgxuqab5F1nv19tdp8xlnUUP/
+coYw8vd1ywE51KIEuXp+npzJkx0nfUKgWsDu6kZ56Q5GzdRq8K9zsz41Y8Y
rovy1oGDnmS86evXU2Ony3WCmpex6dMz62rd1UBGzvNXWZ7r++GW0d5vfoP+
9MorRWeZjXV1RbXTYvCrH/ExDTb7DgVfIO/aD3KeO+oONtJbMz7My3kv3raI
Nl98C9Vk1WUw12bI3L/NvZ4g9wUmzno8rjdr/Dj6SxdZr1B6Uil9HUGx5+En
t+/Q86Jf+NmPDHbF4zRvk33tVrvr1MKDB13t66mjr6udalpXa/RBzJ8Ih4z6
oqbvxMPKKTZqFB28/np6YnXh9ypnbthY/BqdIvGzHx1qataPsZR9gbxrP50P
LkPOc0myN0U7PzhEb8/+KCvrvXT7Etp6yW1a1hufznp2+9f2X2OGI+sFoLjp
nnp6bcZ4x6xXLFwLhOsnu5mzx9mF1+LubbSup6wKv/uRAc/Z297QQM/s3El3
2tSJNnTPmk/0e9kFrbvIZLxqfT7eMLkvQiGQMd8l/f+xUaOp6oYbKNXeTr3a
9yauSTTXYU8HFj+Hn8uv8Ru/+1Gp+wL5cx4OO0H60lTXSgc2VNH2FQdow8Jd
tPntnXT4rqlUY9RpsNkzCQqLyunoGB7XG29bc2Ww8Pge74fxcXUNLauo0Mei
+N/vHj6s193bGY/7On6XSxjOL0nNo4NNTbS2NkYrjlTq93a5PjTXVeHHDmg/
S5pqg7mhT8t4NVPM9fFQAzl06j9Pmr5/jRpFVTfeqGe8XOq0xzbU1dHKykp6
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
vKAcmWogp+vjpcfxiqmBXOpE7nrkEuQ8d8AXmUj60tdHDQ896LwOFwqPhpVT
Pc/X46wXwnu4vvejzo50xjPWXJi+o2Bv2jAo/zujUQO5+vpracQ/FbfPRakT
yeuRC5Dz3AFfZCLrSypFDQ8+ODCuF/h1AbJUZjyEPyfeN4PH9fqSyaBbUBa+
9qPubr12Cme8+LCybJ/KkfPCoeycl854o6nm5psp1dYa3fOuA/BFBjnPHfBF
Jsq+8Nz+GM/Xy+yRlp0tML8plCrjcb1xVHN/uLKeb/2oo4Ni992fqY8nzDEI
+vOBBj6L/r39uD7eaIppGa9P+/x8bS9DDPgig5znDvgiE3lftKxQN2+eft2M
W+4dgGtoGDSwlrSMjo4bR9X33Ud9IZmv50s/0jJC7b2TqWrceGr4UlnW3FGM
4YVRmfl4o0dTrSnj+dZehiDwRQY5zx3wRQa+UHrfjDmzqUbLDvI9XOz/HgaZ
x1z1tRna51U1eTKluruDbkHq+1FXF9VNmUqVEyZQ/bCyvPVByHlhVHo+XtV1
11Ffa6u/7WWIAl9kkPPcAV9k4EuG3l4t62Xu4ebV10POC5v0+hSaeL5e5T3B
Zz2l/ai9g+qmTh2ogWzjC/JeOGSsq6287lpKtbT4216GMPBFBjnPHfBFBr6Y
SCWp4dFHtKw3IZ31xHN4eXreTc59XFxfg7ue1o8dT9UBj+sp60c8H2/yvXrt
lP76eDZzR9EOVcv0nc+qDnUm41Vdf72Y8ZS2lyEOfJFBznMHfJGBLzn0paj+
oYcoZmS9MuO6OiJzTi8jaVwP19fgFDfWZtx7b2D19ZT0I33Nxb3p+XjD5HYH
+S0h52XlvUzGu+46SuXcq1XeXkoA+CKDnOcO+CIDXwRSKZp/1ll61uO6bf1r
M8rM5/mgrzdQ1hpp7d8NXEv5nrsD2SPN837U3k6xe++jSr0+XpnWBpHzwqjs
73Zl6fl4N9+UNx9PeXspEeCLDHKeO+CLDHyR+fwxn+7Pev3rPPPO61CopK/N
GEtVd9/le9bztB/pGW+yXh+vvszId6iDHB4NfB7mz4IzXuWNN1Cf9vn52l5K
CPgig5znDvgiA19k+Bg/f8wx9NyZZ+q1lHn+O+8N3399RX29UCpuZL277vJ1
vp5X/YgzQt1995n2uRied28QOS8MMuVu7XOpGzVay3g3ap9fm6/tpdSALzLI
ee6ALzLwRcY4zi989rP0wllnUa1ec8V83RVyHmrsBS/+XLgu7dhx6azX1eVr
exlUP+rspKNTplAlaiAPHfGai5Gj6Mg111CfxZoLZe2lBIEvMsh57oAvMvBF
xnysX/jMZ+j5Mydlaq6UiettrdbeQcFIH9fjrHfnnb5kvUH3I85402fo8/Hi
w+QayBjDC5ky62qrb7zBcl2tsvZSosAXGeQ8d8AXGfgik3u8nzvmGHr61FOp
dtz4/lrK/dderM8Il4x8lFmHW33nHZRUfA93UP2ovZ3qM+N49Q57LSPvhUBl
6bZVN2ok1d50o/75+dpeShj4IoOc5w74IgNfZKRj/synP03PfPe7maxXnp3z
Morrc7OR98JwHU7/O1Nz5c67lO6RVnQ/amuj2D2T6YhRn7s8Pd/L6tiQ81TL
4fsafzbDeL/aUVR74w365+dreylx4IsMcp474IsMfJGxOu5jtKw3/7TT01lv
WFn2+b8/59mPyUA+K1NzpeqOO5RlvWL60Kknn0ixyZP1e7VZ43hY4xOg8tfR
JoaPGOjfw/he7Wiqvu5a6isy4xXbXqJ83oUv/uW8lo4mqm+uExVvOer4en6O
1etZfX19g7XDEj/aT6qumZK7ay0VRvzwpb2pk+JVTZYKI3bH/tlPH0PzTz+D
arm+nj5Xb0RGA9cJ47qBuVXByhjX4zrDPF+v+vbblczXK7T/TDrpJNp51e+o
Ul/fM4wa8d0gVMrqs1q/TpSVm+bj3UipNvv6eF63l0LOu/GjFVR1aKutaiq2
U2NDJXV1Du44vMZrXzhTVFdss/UilUoV9DfGqvbYvl9LIjZYG/LwK+f1JHvo
iXfn2qrdps20d7U5vr6nV90cGj/yTPM5s6j5Ow9YKoz44cuLdyyj+TcutlQY
cTp+nq83/7RJFMvcw3W6XiDnBS99vt6YsVR5662U6ujwtb1kZbyvfpV2XXUV
HdEyXnZ9PLSVcChnb0N9LC9dA7n6huupz4O2o+q8293VTrf895cK0m2/GU4P
3X0uLVxwB21bt5B6ujsHfXzF4rUvfDxOx797yzLXf19TvIZuu6jc9v3WrHjG
Cyuy8C3naRnMKaftqdph+fp91btKP+edPQM5T+CF25eWXM4zst6zkybp++GK
dTDM14nAr11QQp+3V0Z1Y8bQEd571MOs57bfnPX1r9MeLePxOF5efbxy5Lxw
KGdMXvucavle7c03UtJhnwuv20uh592uzraCc16u7v3dRFr62nRqbXK+R+c1
XvvCuZePx+54n5r1M9d/39JXpzl6x7/Ta8KU85Zvftvy9e9vW4KcF0KQ82Tc
+vB5rrly+iT9Hq65vl7CqLGXt/8lFPQ1XK+5MmYsVd1yK/V5tA7XTVs5/ZRT
aM/V12Tm45n3bBuOnBcqmWsg85qL0en9agusnTLY9hJUzjN09+VjacdGf8/P
KnxZuXCe47E2xA45/m29Wj6576r/Y/s+/LtUEKac9+yKRy3vdT//3uPIeSEE
OU+mEC8+f8xn6JlJOfdwy0zrJvv/H/Prg5aRofTrt5b1qm+9jfo8mK/n1EbO
+fa3ae+116bH8YaV5f1NyHbhU7p2yijPM56b9hKGnGdo0QuTPT12O1T40tnR
QvdcPs72GN/+812Of9um1a/avgf/Dv5dKghTzmPVNlblvTbeUu/qtch5/oOc
J1OoH3/96U/Ts5POoNj4gfp6+UKNvUCv25rM99f7x/VuvZX6Ogc3J8mubZz3
rf9L+66+Rq+d0mDM+yrL/ruQ88IlXjNfN3Kkkozn1F7ClvNY77/zsOceSKjy
ZdnrMxwzWneX/TyOR+/9oe178O9QRdhy3rq9H+W9duuhDch5yHklnfOMrFc3
d1466w2T8hxyXrDX7vw8ZR7XSxVR79apvfzgtNNo/zXXUuXYcdn3al3+fZDP
0jN4ugZy5TVXK8l4du0lrDnv1l8Poz1bVyjxwg9f2lsTdNelo22Pce378y1f
X314q+1r77p0lP47VBG2nPfaxwvyXrt4/WvIech5JZ/zdF96e6l29my9vl6D
qZayeU0uaimHS0bWq7qJ96EvLuuJGe+7p9LBm27W19XmrdOR/o5y5Dy1cvE9
i8d4R46ig7+7tKD9ar1oL37kvDsuPp42rHpRX2fxwh8u19fZus16U6/7GiV7
1dUaV+kLs/il+22Pb94dZ1m+9pUnrrV9Lb+3SsKW83Lrq/Qme+npZQ8h5yHn
RSPnMT09VDtnDtWON2e9gbl5fE8IOS9k4tpoo0dT5Q03Uqq98HW4ue3g304/
nQ5p73VkLM/Hy79XCwWh/BrIuW2AM171jTcVtZfZYNqLXzmPx51yObhnDc2+
9XRXWW/dB8+rsKMfldej1uZ6uuO3x9se36G9a/Nex+N0dq/jn/F7qySMOc9c
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
3OGRC/kElfMO7lnjmPP4OUERjpy3rf95H+9cmfdzvldrsHH/GuS8EIGcJ6PS
lzfXdoo5rz/r3TaHYkYt5bx5YMh5oVDe/sQYxwte6f7CtVPWahlv6mVf9m2+
XaGENectemGyY97ZsVHdOTuonMc4HXeQhC3nVceP5P28rXNgL3DkvHCBnCej
ypeO7j7LjNef9Za30qabueaK1b4ZWJcRuJDzfJYx707+LBL9ay5G0foff49m
ZGqnIOe5z3mJhiq64+LjbV/PNZLbWxOW7zFYkPNkwpbzUn0pff2toaqGiqz3
Qc4LF8h5Mqp82V3V65jzjHG9TTdNy6mlPJAlLHMe8gZUksrPeYnhI7LqIHPG
2/Djc/ozHnKe+5zHtULm3XGWY9Z5/pFLvLYiC+Q8mbDlPCeQ88IFcp6MKl+W
bLK+Z8vaW9NLNfGkrlhDD1XNnNdfcyWu5zw5x/EaAIzvQSUryzXn6b3mYpzx
fnIOTc+pnYKcZ5/z+PlLX5tOt/1muGPOYamuHYecJ4Oc544w5LzWi54sSt1v
bnL+5UUShpy3aN7HRWnfJ0cUuaLGl55kHz253GYM7732/H0jtf9umDtXH9dr
KDNq/dvUUcZ4HlSyyp+vqme8UaNo44+/R9OvyK+PN/2Gb9JDd59blFQSVM5j
vfncrfTkjJ/S1Ou+5irbGXpmrvracch5Msh57ghDzitWnU98qMiVcOS8YrVl
6T5Frqjx5VCd/T3bZVu65Bf2pejonNn6vhm8z1Y8pxZsVu0V5DyoZJX9/Sad
8UbTxv84N28czwupJMicV4weuOZkam2uV+qJSl/cgJyHnOcG5DwZ5Lw0723r
ss15Oyt7LF/b19tLsZmztKw3Xh/X0691xtwk1FGGIqDEcNN/62suxtDeiy6k
6VeepCTbqGQo5bzbfzOCjuzfoNQPA+Q8GeQ8dyDnySDnyXjtSyrVR8+stF97
kWhL2f5NetabNSszrmeMa0i1VyCoxNT/PSZTO2XkKKq5/gZa/OydSjIecl5a
9/7uy3Rg18dKvTCDnCeDnOcO5DwZ5DwZr32pjidtM96CDzrc/WE9PRSbNpVq
x40z7YdrVVMZgkpEmZzH9cO5Pl7VVVdRqrmZXnv6RuQ8E17mvD/c/2+UiFcr
9SEX5DwZ5Dx3IOfJIOfJeO3Lx7u7bXPeym0Wc/Mkenvp6IwZmT3SOONhPA8q
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
1f0u6aecF409Sx+66inbY1TOyUtGd857fu1jWec8PsZrtOW8M++k7pc3G+ss
2m96zlhnK70+45zZFFX0e5NqX5JxynlvPbGF1j39ftZqa1T3O5RKX1o6Io6Z
bd7Kdlr9QRftqwlRdWOYdleH6J2d3bR0Q5dwTe6i1zuoo1vxutuODlr/t78Z
Gc94V2usqU2ah5c+J88Y68O4XtBkrM0YMpQqrr+eIt32fb7K+6hqdy29OHWF
pRyznM2xm1dtc+OO0eILw3Vh+P2qTHabduFcem7SUnr35S20Y90eeuOxd+jx
m16k2382K+NzrYrXCvop56159G1H71TOyUtGZ85r72y1zHJL332WHlwx2/Lv
+Vgv0Zbzvjc545jQxgPUeuF9Ulmv+8WNKuzoxQ85r6fLm7Wi2aDSF6d5eZzx
ONtZ0dUTNd7Pzl3R9/m6ZvfX8qcQy3g1t99u1E5pSNRAbsh4Z5uWB4x3uMh5
gVFSjueffe3QoVR14w0U7bGuC+Vlf5TOTd+z6aNjf6cT1b7w2liZjPfCXcst
38E21TTTQ1c+aXzuzrPnUN2Bg25dviV+yXnlH1bRzT+Ybvt51XPyktGZ87Yd
2GyZ4zbvXU+L1z9t+fd8rJf4KecZx8Xurc67VzmP6Z07x5fzO7MBOS+VTft6
bHPey+/KzX062BoxaifvVl1TpbOTaiZOjK+56F+K+nhQStaruOEGy3E95Dwx
Kn3hesBOdd74feO6Zzc4nov7no3LPqCK7dX5XrIUfsh5/F7aqf6MF3PyktGZ
83jMzq5O3obd62zH+7zEbznPODZ2D7WPf9wx64ULdB27CXJeKhv22Oe8J97o
0FZPPIPODqq+/XYqN+vjId9BSeI2URfLepU3iMf1kPPEqPTlrSffdRzH4zor
fsQPOc9p7YpXc/KS0ZXzukPdNH/5TGGGe3DFLApHwlTVUG6Z8/hYPodX+DHn
MZzhHNfePum/ujzZgJyXyt4a53oqPA9P+Xw7Jzo7qfq223vr4+nOFJBP1T+e
9cpvzBzXQ84To9KXR659xjan8Lw91fu65YrunLdpxVbfzMlLRlfO21213TLD
vfT2k8ZnQuGQZRZk8Tm8wq85j2m79GHbc7Rf+5QbFghBzhOj0pfmdud1GOa8
u9e3dhv73XpOVxdV3XZbRg3k3tp4qIMMJcl8h1vO43pJ63CR88So8oXn2t32
k5m2OWXxrFfUX2CO6Mx5u9bvy1h7onNOXjK6ct4rmxZb5rd3d/XVfnvpnSct
P8fn8Ao/57zOB163PUfrb+5xwwIhyHliVPrCz4kHs9jHlvXM2g76sDwU+93J
g2dMVzfVTppEZcOHU52wBjLG9qBMNRjvcIdR+Y03UiSR9ZDzxKjypWxrpeN4
VO0+NTWO3UBnzuO1JnZ/P+Xc+zydk5eMjpzH72QXrLzbMr9VNpT1fva9XWst
P8fn4HN5gZ9zHtfJs12L8WN1zyQ/5LzNK3bR1tV7pLR/S5UiJ1JR7ctmh7UY
Vlrwaju9vaObWjsVjfHxutpYxjPm4yXW1fbJrIGc/ucQFFfvuN5NNxlZDzlP
jCpftq3ZaZ/zYteteo/afNCZ85zE+4roQkfOK6/fbzvvjt/XmnDms6ulx+fy
Aj/nvPAehzl6p9yubKzYDzkvW3W0ZL+ferao9oXrGT/1ZkfONZHnxvTq+13U
1OZi3ov1y9W335bYy6w0/m7WXHPR+542URMP6zEgCzUk1mZU3HwzfbJfP+Q8
AaqeL1wDzy6rTI1lHT/j55zH4norOtCR897Yusp6bt47T6Z81mmOHp/LC/yc
8yI1zY5rMaItavYtLcic11z4OY/hvc8Wrc4965l6ZUsXdYfy/D2gp4eqJ07s
nY/X6JDj8P4WEirxu0FD//i43sLvnESfyCHruUEx5rzXF9nX9n1w/BMeXF3u
+D3nzR+nxz+vcx6PKy16ba5lbuP3tOnYzdF7NHYuL+Y1+jrnNbQ55ryIojrk
yHlivPCFae+K0rPr8t8DjWux8PqOnOB1tXfeSeVGDWS5+njIeZCT4u9wh9Ej
J55AH+t3GHJeEqqeL28+ud42p/A+F37G7zmPtX3tbsUuZOJ1zqttqrJ9D5s8
N8/Ebo4eq7ZJfQ1GX+e88oPO43mK1iog54nxKucxvLZiy/4eWvhafmN7PHev
Ldt5e5zxJt7RWx8PNZAhN2XO13vkxBPpY4fJZz03KMac99rDa20zytx/POrB
1eVOIeS82Rc9RJGwtzUQvM5563e+aZvZWjqaqL2rLUW7Kz+0PYbPqRo/57zw
tkr7c3x3khsWCEHOE+NlzjPhvPfBgR5jbC6fd7jSxDJeVW8N5MTaCuQ7yGWZ
WW/BCSdIz9dzg2LMee+8sMk2o0w5914Pri53CiHnsXgepJd4nfOeemOBbWbL
RXxO1fg553W/tMl+ve3Zs9ywQAhynhgdOc+E5zGU1YdpyXu5vc+tbZJYw85r
LiZP7l1z0eCDPAAFWLE2Vj1sGD0Uy3of++hHkfMUPV8+eG2HY0bBetv8xTVW
ejqt93V2Gy9zXlNbo+sZzxSf248+OeFGzuuYvMS+ft7F892wQIgfct6ud8po
74ZKaYV61Nfi0ZnzkuE5d2/v7KZHXpPPee/tdnj+8H61iYzX0D+5Pl58zl0D
xvQgBeJxvZqhQ2NZ73jHrOcGxZjz9m0qc8wolTtqPLjC3PBDzuMxz7oDDXT7
z2fbfm71wnWK3ejDy5y3ee+7ynIen9uPPjmRb87jdbTNP7zL9hyd05e7ZUMG
fsh5xVYnORe4DgvXSV4osT7X9t1tdzdV38a1U4an7WWWyHilJVhfASlRI/9v
IuvNO/54OvwjH0HOc/n50hXrj27+wXTbfPLUrS97cIW5oTvn8d61+zaXG59/
5cE3bT/LObCtsV2lHb14mfNeXPeEspzH5/ajT07km/M6Z69yXIPRs1rd/nDI
eWL8lvNMeJ3FY2vssx6v3xXC72rNNRc8jpcxbleSUCnm6UGuqyHxe4W5Dnf+
ccdRP4txPTcoxpzHzBv7uGOeqd5Tp/gKc0N3zlvz6Nu9n+9o6aSJDmN6L898
RZETqXiV8zq625VlPFP8HX7zyYl8cl6kupmaz7zT/niukaxwrxXkPDFe+MJj
dFzreOOeHgpH5GsL8XtZpxorGfC72jvu6K2PF19Tm7RHbfp+tSWJesg+yAdQ
AJVYmzEvlvUOE4zruUGx5rzVj6xzzDOP3vC89L+V15Z6lQt15ryF/8zcu9Zp
TI/HThsq1M45Y7zKedvL31ee8/g7/OaTE7nmvPCOamr9w1zHsbz2659x24oU
kPPEeOHL6x90pWSziga5eYfrdnTb5ryX1qeN53V1URVnvER9PJl+GPXxIGVK
/E5hrsN94NvHZmQ9NyjWnMe5g98/OmW9Z+9c6rgmg8e0Fkx42vj8phVb3bh0
W3TmvNr9DRnHdLZ2OY7pPXHzS27bkIFXOW/Ze8/bZrSdFduM2nl2Wvfhattz
8Hf4zScnss15/PnOuaup+bQ7HDMei/OgSpDzxKj2ZYvF/rarNndRo81eZuX1
YXpghf38vNUfJM3P6+qk6jsmUvnw4VTfH+9jIZ8pkfXmfvvbdHjSO1w3KNac
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
/KfEu1oex9t39mVUO3aP7fO5YHMeE8sKVeOmUNWwo+Xq66GdaldjouZK1Sxx
zRUV7QU5LzcabqqXvm7+rA687LdNkPMgGQon50WNGlhGfTzeVz5jTS2kXWk/
D847NYMH0/5zLqO6sXsdn88FnfNitD3eTGW/n5i2RxrWZ/hd1Ym1Gek1V1S0
F+S87AlVhrK+dj7Ga7zst02Q8yAZCiLnRTnjzTIyXl36WEmJ2Zfq7y+gPpkZ
78CvxlD9+Mw1F0HMefzvrxtTRfsuuDVp3wzUUvaljHfncf95XK+G98Pl+nrR
vjn8KtoLcl72tC9ty/ra+Riv8bLfNkHOg2Q4WNli5DEryWQ5K+15ryL/RsFr
LmbN6q2PZ2SIlH4T4yW+UO97yNK+jPfLK6h27P6MLGelzrc7828vNqh+7ho5
j6/zikraf+Gtif1wMa5XEEq8w61Oqrmior20r2y3vQdMyfxO5CT+LhV4kV+S
abyzIfuMGzvGa7zst02Q8yA3cMp5Son9bl01cyZVCevjYSzEV0qrgbyPa6ek
ZTyWTlTfRyn98xUVVP67O5KyHnKe79Wb9eYY43o6n7tOOUYnXvoSbgpbetA0
q5Hqxlh7xMd6iY5+GzkPcgNtOY/H8e6ZQ5VcO6W/RQ1k3f0C1CuubcNrGHkv
s91nXUq1Y8TranWi+j5KH4epH1dFZb+71cgOfVlP/88KEshcAx37OVUOHUo1
99xDhx5yiLbnLnJenI7XO6zfzS5vo6YZ1u/B+Vgv0dFvI+dBbqAl53HGmxPL
eKNG9dVAzngu+6BvKFbF+sTG0vQ6yFw75euJ2inW62p1ovo+Er1vqx9bReW/
S3+Hm16HxqylnLaOBTX2PG7Xff/L2fzOYUfnlPXcADkvjjFmZ+EB18lrX2w9
d4+P9RId/TZyHuQGOnJe5YwZRsarS6+dAmlRQ6m4Pp6RQUri43hcH+/A2DFU
a1MfL+j9k9W8KiPr/XGSsW9G3xzT1JzXaM5LMHLGQNRS1q3Evhm5ZD03QM6L
/brfEaG6f1h4cEUNRUNR6tlhUz85diyfwyt09NvIeZAbeJ3zjDUXI0dSbUmp
Te1dyEsJc15J355e/K72wJgxFGlpKer+yW7+fP2Yaqq6cWpijzRRrkj7b8xN
0K6GxHy9bLOeGxTzfWTS9W6n5fU3To2vJY72RI3MZ/U5PodX6Oi3kfMgN/Ay
5/E+RJWJvcx4zyjkPB9JtO6FM97gQVR21ZVGxmOKuX9yWifZ+nAjVV4zRbgf
bqa3PviZQ0njesPoEMms5wbFfB+ZNM+z3gu47aW+PS/satXwObxCR7+NnAe5
gSc5j+vj3TOHqkamzcdL2fcdmc9XMsbxBtGBceMo0tZXq6qY+yeZehj1V1TQ
gd9PTMp6Nmtxk2q8QTrauDkH1RzXk8t6blDM9xHD72Trx9daXn/3jr49bDnz
Wd5vsXPwubxAR7+NnAe5gRc5r8rc54L3q016zsazXbwPRM7zkYw1F4No//jU
jMcUc/8kk/Pi73Arqez3dyayXgmh5or/1ZgY17sjlvUOPfRQ5c/dYr6PmO6t
XdbXz3PzevqyW7fdHD3OhLFzeYGOfhs5D3IDpTkvGu2dj9c7jpe2zzvmovtA
SfPFOJfwu9ryCRMo0pq5X3gx90+yOS+e9arogFFfbyhqKReKElnvrqOPts16
blDM9xHT+pj1XN/0fT6c5ujxubxAR7+NnAe5gbKcx7VT7r23dz5eaqYY2Jcr
SjGOp129GS9eO6V8/DiKtoifncXcP2WT8wyNqaT9F9ycqLmCcT3fq4TH9Qb0
jetZvMN1g2K+j7hGdcO1dZbXnjw3z8Rujl7DdXUp+9mpQke/jZwHuYGqnFfF
43ijRsXHMjDn3L8yx1UT8/Eqrhzfu+ZCRDH3T1nnvETWK/vtxIz6eobnpWk1
9tJ+JvHPYLzbm/tgYMoaaLus5wbFfB/17Ouxfw+bNDfPxG6OHovPqRod/TZy
HuQGKnJeZe98vJL4fDzkPK0S10wZkDqOx+tqx44RvqtNppj7p5xynpH1qqns
97GsN8yilrJxf5T2/WyQ87SrMVFLWZT13KCY76O25+0zW7g+TJGmVHWtt67B
YowBPm//3HIDHf02ch7kBm7mPB45530uqrgGslkfz6m+BKRc4nfjiXeIRsY7
isqvupLCNuN4JsXcPznlvLZnWql7S5dQXVs6qPKmyUbWOyhzTySPL+H3JD1K
rMO9I20drhsU83108Jb63H5fshGfUzU6+m3kPMgN3Mp5Rsa7555YxjsmUR8P
8+58LSM/lBj7XJSPH0/h1jbHnzFTzP2TU87jMQc7ouEw1U6bGst6R1MD9oIp
CPH7CM56E5OynhsU630Urgm5nvF6xwFj5/ajL/n028h5kBu4lfM44/XuV4u6
YP6SRQ1kznhl48ZRuE0u4zHF2j8x+eY8JhoKUe306cZ8vXqswy0MJdbhThwa
f4frBsV6H7WvsN6vNl/xuf3oSz79NnIe5Ab55jxjHO/u2VQ1cqTxrrbv2Tgg
dd4R5BvF5+PFMp4xjpfdvJZi7Z8YN3KeAY/rcdYbll5LWZQx8PuSViX5z+N6
dw07mqKR/PdULdb7qHGK9brZfMXn9qMv+fTbyHmQG+Sb86rvv7/3Xa2RIVKe
kxin8JvMdbW8X21IYj5eOsXaPzGu5TwmlvVqJk/uW4drNWcP8/N8pcpvDKGa
e+81aoPmQzHeR5GWCNVdpibjGYqdm7/Db77k028j50FukE/Oq547ty/j9c4Z
T14vaM71R1+lVck1kAfxutqxsYzXnFN7Kcb+ycTVnMfEsl7dzBlUzeN6/eP3
SuOA0syfne72A6X8PHhcj+ep5DOuV4z3UeebHeoyXkL8HX7zJZ9+GzkPcoNc
c14l71d7zKjUfS7s+iX0V1r7JnMvM854dvXxnCjG/snE9ZzHxLJCzfTpVJNS
S9kHbQYS3EcDE7WU4/P1avLIesV4HzXNabTPaOs6jNp5dmp92nofDRZ/h998
yaffdsp5z721KCd9WLZFkUvIeW5Lhl1vl9HiGW9ayinnpX9+6ey36L0rbjFq
pxj71WKszl+yWHNh7GU2zjnj8e/DjXc0WMqpf7I7tn2JP+dJy+KU8xqur7O9
fis1Tamnqql3UfXQoSnvbxsHDEz6mZpj46n1fFFfz+v7a0CiJmi85krNPbm9
wy22nBftst+7rH5CrdSeFqFy+xrLxt64XWr2xvCy3zZxynm56r1da5V4xOjO
RUGTDOueft8xy0nr2mX01sU3GOtq65LH8ZDzfKWGtL0V+F3tS6edKjWOl3Mt
YAnxuVWi+rmr0ptoqIcq74pnPXHNyaS5rr3zIxL5DzUqtcgc1+P9HbOl2HJe
10b7OsfNc5uk/m2cBeuvqrUfV9+Yw7i6BF722ybIeZAMruW8WMZ785LrU2sg
++BZCw3o3Zczta5uPBfUDhpML596Gn35M/8p1V6Q86xR6Q0T7YlnPX6Ha/7u
1Dum5/Dz194Gi1Wc9WLZvOa++yibUaRiy3ktD9nfOx2r26X/fc332b//5e9S
gZf9tglyHiSDGzlv4bVL6Y2LrqfKkfF3tQ0lVnssQHr6mtR3eeZ7pdrBg+mF
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
MrXx4vdqibGu9v4zv0uHHdYP7QX3kZBi67dzRXcuCpoKCSPrLV9OB8xxvSDU
2CsZkDpvydxPIHZtvJdZ2RVXuDIfL51iaC+5AF/EZOuHkfVONtdmiGopp98H
/lxjJVsDuWLkSLqP5+MJ1lygveA+MinGfjsXdOeioKnQMN/hHjju+LRxvcLN
eY3JWc9QSSzjDaby8VcqyXhMsbSXbIEvYnLx5OOxzFM7bVos6w0v+Pp6KXmv
tw5yXw1kzniidbVoL7iPkinWfjtbdOeioKkQMbLe0qW0/4QTBe9wC0hmvfyU
PqTUyHhl48ZRpL1dmYfF1F6yAb6IydmXcJhqYlmvKqWWctq+aGlZSmpvDS05
L/V3Sa7jXsnz8WIZ7+P9nN/Vor3Al2Lut7NBdy4KmgoVo77eqlWxrCear1dY
SqmBzO9qx49XNo5nUmztRRb4IiYvX2JZr3bGDKoaZma9hDjj9U+/Dwb6Muel
5tNSI+PxOF4uGQ/tBb4Ua78ti+5cFDQVMpz1WpYsobLjCn8dLvd/NYMG04Er
rqBQc7Ny74qxvcgAX8Tk7QuP602ZYqzD5bbeWGDjeck5j+sDVgwfSTVz7rGt
nYL2Al/SQb8th+5cFDQVOvF3uIVdc4XX6vG62rKxY11fV2tFsbYXJ+CLGFd8
iWW9upkzk/bDLYQ5tan/Rv53V44YRfUPzIs9fCJoLxbAFzHot+XQnYuCpiDQ
V3PlRKrv7/d+I0klA/v2qx0zhiKK39UmU8ztxQ74IsY1X2LZqGb6dKpJqaXs
g3tRIufFa6eMoLq5D8QeOlF3fQkY8EUM+m05dOeioCko8FO3efES2nfccdbj
ejprNxiZLv3PeC+zQVQxbrynGY8p9vZiBXwR46ov4TBVTZ3a+w43817py1cZ
NSU11dczxvFGHkMN8+f3ZjzXfQkQ8EUM+m05dOeioClImPP1Mt/h+vD9UKwv
MzLeVVdR1KN3tcmgvYiBL2Jc9yUUosqpdyXG9czxssx7tne+XqKWiZs5T3Y+
YHwcb2R8HC8SUetLQIAvYtBvy6E7FwVNQcNYh7tkKe074URq6F+SlvM8zHqi
PduTxinqBg2miitjGU9h7RQ70F7EwBcxSnyJZb1qrq9nZL1EHUkvx+hEOc+s
jWd+pn8plY8cJcx4ynwJAPBFDPptOXTnoqApiPDTuH3lKiPr1YtqdnmW9QTv
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
3t5leXxTYxv9+8pHaPDn/tj7+Q827Xfr0m3xst82Qc6DZNj62h7bnLfyfrn5
QU3VrUbtZB7r8woZDw5J1FKO19eTG9drSKzPjddAHkTlEyakZDwGOQ85z2Tl
yxscs9r1Yx6yPJ7/zun415ZvdtOKFLxoL1Ykj91wzRXOerVD0+vriX5HS/3z
BqMG8jHx+nguZWJVviDnWcPjwHbXJbuWguf4cR1yzo1e4WW/bYKcB8mwZdVu
x3p4UQ9rH2eDtBeJmiv7TjhJblyvxBzHG0QHrrySIu2ZuQ05DznP5IaxC2z7
pm/815+opcm6TfDf8WfszsFjFKrwor1Ykf6Ojt/hPnr6+VSTvEdaSeZeuKk1
kPsbNZBzqZ1ihypfkPOsueeul2yvi+vhRV0Yq1WBl/22CXIeJMOBLdWO8/N4
Hp4X8+2yJSs/YlnvxtNOi2U98x1uqTFu1yB6H5TIePvHjadIW5vwu5HzkPNM
fj76Rtu+6ZJfT3M8B3/G7hxnn/ZvNywQ4kV7sUI0F+ubsay36LTzElmvlBqT
176n3avGfrW8l9m8B1zNeIwqX5DzrOE5d05j27xvDL+f9Rte9tsmyHmQDC11
bVLrZ3ne3bqn3zf2u/ULWXuSkfUGpOa8koGJ+niD6MBVV2W8q00GOQ85j+nu
6nEci+N6K0441WThfTJ4f08VeNFerLCac2+szTj9fKrmrNc/lvV679PUNRdl
I0dS/bz5rmc8RpUvyHnW7N9b45jzWEf/7yV00/iHjf1u/YKX/bYJch4kA7+T
ffz6zDWzdnp5+hu08+0yCvWoXafuRE6+xLJe29KltO/441Pf4Rp7mQ2Ir7m4
YgyFW+zXZyHnIecxO7aWO/ZJMn2uU9/PUtWnedFerLBbW3nMkX+m6slTjKxn
7kPTux8Gj+PxfrX33OPKmgsRqnxBzrOG38mK1szajnWf/m96euEaZb8HyeJl
v22CnAfJsnW1/VoMKz1x00rasHg7tTV2KGwV1uTqC/cKLUuWGGsz6s25P/1L
qfbrg6ls7FgKOWQ8BjkPOY95583ttn0QexGWqO/Bn3GqJ8E1JFTgRXuxwu6a
jXYUiVDdzJm9Wa/RWHNREs94XDtF4VwtVb4g59njtBbDSscOvMyob1RTZV0f
QiVe99sMch4kC9czfvGuNTnXRF549RJ687HN1Fzr7ZyJfHzh3qHVGNeLZb1Y
v1E3aDCVp9VOsQM5DzmP4T3S7foerp0si1Od5VVLNuZrgRAv2osVjjmP+J1D
hGqmTku8wy2hyljGq+eMpxhVviDn2cP1jH90wj9zynqsoz7/J7rm7w8Y74C9
xOt+m0HOg7KB9z7j+sZ57YMRy3tvPLqJujt7FLWQVPL1hbNe88uLafcpp1D5
VRMoIpnxGOQ85Dzm2UffsO1zeH2gLPxZu3Pxd6nAi/ZihUzOYzjrVU65i/ac
9B1q4Pl4Hqy5VOULcp4zPEfh5CFjc856LK6hN+Fvc6mttVORE6no6LeR86Bs
6WjposUz38x7z7MXJr9OrQ3qs44bvnBv0bhhA3VnkfEY5DzkPOaJh1bb9jU/
G32D9L+PP2t3Lv4uFXj1fBEhm/OYcE8P1b7zjpI1FyJU+YKcJwdfA68zzyfr
sXhssOJAvQInUtHRbyPnQbkQ7gnTtjX76OlbXskr6z1500pqb1L7e5SXvqSD
nIecxzjV7z/16PHS/z7+rN25VNV81XkfZZPzvEaVL8h58vB69gfnLKcTBznv
N2Mn3idapSeMjn4bOQ/KB85729/cb9RJzjXr8TtclejwxQQ5DzmPWfPK+7b9
C9d/kIU/a3cu/i4V6LyPkPOQ82TgvLdw7irDm1yzHr/DVYmOfhs5D3IDXude
sb2OXpm3PqesV38gWM8bE+Q85Dxm83t7HPuXzg7nGuMd7V2O5+HvUoHO+wg5
DzkvG7g/en3lFrrol1Md16eL9MHGfa78O0To6LeR8yC34ZrKXEflqVtWSee8
zSus95zOF52+IOch5zFV5Q2OfYtM3TuZOnz8XSrQeR8VY85rPNhq+3M+c9QE
x3Ncd/l823Pwd6jCL/3R/j01NOmGJ+iEr/9DOufdPflF1/8dJjr6beQ8SBVc
h4XrJD99q/McPpXvbnX6gpyHnGfCc3/s+pbZk15wPAd/xu4c/B2q0HkfFWPO
Y4Z/6c+W1811gp34y2+mWx6fzVyBXPBbf8R1WB5/8DU66agxjjnvyj/fp+zf
oaPfRs6DVMPrLJ674zXbnMfrd1Wh0xfkPOQ8E6e9aX9y0r8cz8GfsTuHzB65
uaLzPirWnPfD46+z/Xnze3w77PZUzqaWTy74tT+qrjxIpw2/0tbXc864Wdn3
6+i3kfOgbOAxOq51/P6q3RQOydct4PeyTjVWVKHzeYOch5xnwu+CnMYRdu+o
tDye/64Q3ze5QbHmPKffDdat+dDy2NaWDtvxQJ67phIv2gvvD3PtZfPo/umL
jfE6WZzGxX9w3HXZXq40Ovpt5DwoG9Y+9X5KNqvaJVdv6L2XPrTNecvvVVML
gvHCFyuQ85DzTA7srXXMaWedepOxZjCdrs4e4++cjufvUIXO+6hYc97NExba
/rwvvXCW5bHzZi21PfbGcQvcskCIF+2Fr8G8Hh775P0FZeD5enbe/Pand+Zy
yVLo6LeR8yBZtr2+V5jR1izaSE011vN5K3fU0aJrl9rmvLVPbnGjaQjx4j6y
AjkPOS8Z7j+cstr4S+4z1gua8H/znzkdp7JvYnTeR8Wa8+bfvcz2Z87XvuDe
FRnHvfnqVmP+nt2xc2cscduKFFS3l4fvWym8rqv+cr+x9sIKHgMd+j8X23rz
z8vnu2GBEK/7bcYp5z331qKc9GGZ//ptKPf2Ur6t1tivzPbd65TXaf3zW2nr
6j304Rv7aOPSHbR09lqp9bZ8fr+1Fxk+LA/RM2s7LeWU8+yO3bBH7b5wXjxf
7HIe6+zT/52TnlygZs8HRqUvS55b75jXWDxXfNzF9xqSmTfO4nOrxIv2YkWx
5rw9O6uMfblkMv60W58x3ttf/rvZjsewZzLru/3qC9dMcbpGnst6+3WPGll5
4QOv0Izbn6XzfzRR6l56dZn/1gXmc1855bxc9d6utYpcQs5zW07wnraP/Wt5
3vucWYlrLGcz18+r9iLD61u7HbNcruJzq8SL54tTzstVMyc+p8gV9b5c+JM7
XPeDz6kaL9qLFcWa8xin2ii5aOxF9yp0JI4qX3Z+WKHsucL67jFXU09PyHe+
5HNfIedBTiybs05Zxnv0umVGjlSJyvsIOc8e5LxM9u2upiH/fZFrXvC5+Jyq
8aK9WFHMOY/Xhzq9Z8xGR33+T7R/r/V7TbdQ5csFP5Ybk8tFw754iVGj0o++
5HNfIedBTvDcuxfvWqMk5+1er/aeyqe9yICcZw9ynpiXnl5Hgz6bfZ3+dPE5
+Fxe4IUvVhRzzmPuvN5+3UA2Ujn3LBlVvuzaXkk/OuGfSp4rzyx6w7e+5NN+
kPMgGXgf23XPvO9avlt49RJjzwwvUOkLcp49yHnWPPfYmzntyZScb/gcXuGV
LyKKPedxjZRzv3dr3vfNj0/8FzXUNStyIhWVvvD68+vHPOTa84R/X5py01OK
HYnjZb9tgpwHZUNDeROtXrDBcU2GnVY9sF75u9pkVPqCnGcPcp4969/aQd/7
1jVZXz8fw8d6iZe+pFPsOY/hbMPz6nK9Z/541hRqafJujb8Xvry/YZ9RWyaf
35fYF9XvapPR0W8vevV+JTlv24HNilxCznNbucDvcrkm3kvT3pAev1s6+y2q
3F7ncmtwRqUvb21HzrPjxEFXKMl5vH5OFV7eR0x3d4gemLnEca8LFn+GP8vH
eI3XviQz4oi/WHqicq83Gbz2ZfN7e+jiX02VmuPJa1J/84Pbac2q9128Yjm8
9IVriE/81+NS95A5fvfLM2+mNa8Uji8q7is/41X+KRblS2drFx14v5q2v7Wf
Ni3fSW8/+wG989xW2rRsJ21bs8+omdLT6X2/ZIL7SAx8EaPTF557xHOE5kx5
kW69ZpEh/m/+M/47naC9iNHlC4/vcZ28B+csN2qq3HL1Ipo/e5nx/pFrJK9a
vIFamztcuMLc0OVLfW0zLX/xPXrk/pWGL/x+l+spT73lGcMfrplSiL7gvoLQ
XqyBL2Lgixj4Iga+iIEvYuCLGPTbcniVf4pFQQe+iIEvYuCLGPgiBr6IgS9i
0G/L4VX+KRYFHfgiBr6IgS9i4IsY+CIGvohBvy2HV/mnWBR04IsY+CIGvoiB
L2Lgixj4Igb9thxe5Z9iUdCBL2Lgixj4Iga+iIEvYuCLGN39PQRBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEOSNgo5uf4OmoANfxMAXMfBFDHwRA1/E6O7Xgq6go9vfoCnowBcx8EUM
fBEDX8TAFzG6+7WgK+jo9jdoCjrwRQx8EQNfxMAXMfBFjO5+LegKOrr9DZqC
DnwRA1/EwBcx8EUMfBGju18LuoKObn+DpqADX8TAFzHwRQx8EQNfxOju14Ku
oKPb36Ap6MAXMfBFDHwRA1/EwBcxuvu1oCvo6PY3aAo68EUMfBEDX8TAFzHw
RYzufi3oCjq6/Q2agg58EQNfxMAXMfBFDHwRo7tfC7qCjm5/g6agA1/EwBcx
8EUMfBEDX8To7teCrqCj29+gKejAFzHwRQx8EQNfxMAXMbr7taAr6Oj2N2gK
OvBFDHwRA1/EwBcx8EWM7n4t6Ao6uv0NmoIOfBEDX8TAFzHwRQx8EaO7Xwu6
go5uf4OmoANfxMAXMfBFDHwRA1/E6O7Xgq6go9vfoCnowBcx8EUMfBEDX8TA
FzG6+7WgK+jo9jdoCjrwRQx8EQNfxMAXMfBFjO5+LegKOrr9DZqCDnwRA1/E
wBcx8EUMfBGju18LuoKObn+DpqADX8TAFzHwRQx8EQNfxOju14KuoKPb36Ap
6MAXMfBFDHwRA1/EwBcxuvu1oCvo6PY3aAo68EUMfBEDX8TAFzHwRYzufi3o
Cjq6/Q2agg58EQNfxMAXMfBFDHwRo7tfC7qCjm5/g6agA1/EwBcx8EUMfBED
X8To7teCrqCj29+gKejAFzHwRQx8EQNfxMAXMbr7taBLllC4h+qaa1xXe1eb
wtaD9qOjvbTUt1NDeZNQjdWtjsfzZ6yOZ0XCkXybhSWq7yMrmtojsfvBXvwZ
Xaj2pSKyl7ZHNklos/HZtmiLwquVR7UvndEOSV+yU320WqEran1pijZkda27
I9uoMVpP0WhU6TXLoOv5YtIQraGXQotoRve/6Mbuv9DlXWfRXzp/SNd0/Y6m
dE+ghT0z6UBkt2vfJ4vufi3okuWNravogWXTXdd7u9YqbD1oP163l46WLnpk
whJLPT9pteM5+DN25+ho7nKjaQhRfR+J4P7n4Vfb6f7l9nr4tXZtfZVKXxqi
tXRax5FZ67sdA+jsjmPo0q6f0uM991BttEqxC5mobi93dV+dkzdOmt8zWaEr
an3hXJJre/l153FGe5nefR3tjXyo1AMRup4vK0PP0l87fyTtFXu0NrzKpat2
Rne/FnTJsuaDlch5kKPfnMGQ87KjujHsmPFM8Wd1oNIXHltyI7uc3vEVGtP1
S9oSfluxG32obi+Tu69Czkvjks4fuObDFV3n0KvhFykcDSn1w8Tr58vm8Dr6
c465mDW75ybqiXa76IAY3f1a0CULch4k016Q87Jn3Y5u6ZzHn9WBSl/cynmm
ftDxddoQflOxI3FUtxfkvEzczHmmru+6mCJR9fMivHy+vBhaSGd0lOTtDftd
HtnrrhFp6O7Xgi5ZkPMgmfaCnJc9j6/pkM55/FkdqPTF7ZzH+n7H1+i98BrF
riDnWaHSFxU5j8VjV6rx6vkyr2eSq978sGMwtUQbFTgSR3e/FnTJgpwHybQX
5LzsONgakc54pvgYr1Hpi4qcxzqrY5Ty93Gq2wtyXiaqch7r6dADBeuLyarQ
c677Mql7vCJH4uju14IuWZDzIJn2gpyXHRv39GSd8/gYr1Hpi6qcx1oTXlKw
vjDIeZmozHlndPQ31qQWoi8Mv1/lsTc3Pbm667ex35fUzgvW3a8FXbI45bzF
7zxtfCZbHajdo7D1oP143V6Q87Lj2XWdWec8PsZrVPrilPPO6zzR+ExdtIr2
RXYYc++4/sP5nSdJ5JkpBesL45TzxnT9yvhMtnozvFyhK3pz3ouhR4w2wloX
foWWhB6nR3pm0N86fyKVa54KzS1IX5jxXedJXePPOo6mf3f/lZ4LPWS0hYU9
s+iGrkvoxx3fSPkcr9Hl2j6q0d2vBV2yOOW83ZXer1GXQbe/QZMTyHnytHVZ
v7Nd/G4nzVtpnfX4WC9R6YtTzruw82ThcR3RNrq483u2x/r1fZMsTjmP62X4
EZW+OOU8u/pv74fX0w86BtkeP6HrQrdsyEClLx9GNkplPPaPaxmJqI6U9eZh
/j2K6w56ge5+LeiSBTkPkmkvyHnybC2zfme7aW8PvbzeeqyPj/USlb7kmvOY
FaFnbI+9rfsfblkgRHV7Qc7LJJ+cxywLPWl7/J86v+uGBUJU+vKvroscM96E
rguM34/s4DmtT4fmUUVknxuXLIXufi3okgU5D5JpL8h58vCYnV2dvPd2W+dA
PtZLVPqST857O/yq7bGFPA+NQc7LJN+c51SX+6yOkW5YIESVL63RZmNuod11
/bhjCLVHnfcj0oHufi3okgU5D5JpL8h5cnSHovTACnGG4/e14UiUKg9a10/m
Y/kcXqHSl3xyHs/Tszv2ldDzblkgRHV7Qc7LJN+cF4r2OOShb7hhgRBVvrwR
Xuo4lvdAz53KritfdPdrQZcsyHmQTHtBzpNjd1XIMsO9+E58rC4Uts6CLD6H
V6j0JdecVxbZY7u28Jcd36TuqLq2wqhuL8h5meSb8/ZEPrQ9/vedp7lhgRBV
vszsvt72mrh2eFP0oLLryhfd/VrQJYtTznt18xLasvddKW09sIkiEW/2b9Lt
b9DkhFPOe+xfy2nNoo224s8EPeet2txlmd/W7+rb84Izn9Xn+BxeodIXp5zH
88F5ThG/c6qI7DXWUd7Tc4tRC9nuOF5LqBrV7cUp593S/Xd6rOceKT0Tmm+M
ZXmBSl/yzXl3dV9jezzPYVOFKl+c9jbjtbV+Rne/FnTJ4nb9vD1VOxS2mj50
+xs0OeGU89xQoec8fif74CrrcbrKhr7fgd7dZb0nGp+Dz+UFKn1RUT/vvp7b
FTsSR3V7cbt+nur32CYqfck153ENOF5f4OQR50BVqPLllx3fsr0mP7+zZXT3
a0GXLG7nPK/e8+r2N2hyAjnPmbJ6+3l3/L7WhDOfXS09PpcXqPTFzZz3s45h
9EToXsVu9KG6vbid87x6z6vSF6ecx9e4PbLJ0KbwWloeepoW9EyTqrfI2hh+
q+B8+V7HV22vaXHosYxj1oZXGTVmZDWxe4wKSwx092tBlyzIeZBMe0HOc2bN
NusxOnNunonTHD0+lxeo9MXNnMc1bvl8XqG6vSDnZaJyP4y/dP6w4HzhOsZO
18VzHdLh+sjZePPv7r+pskV7vxZ0yYKcB8m0F+Q8e6LRKC18rcMyt727KzO3
2c3RW7i6wzinalT6ouK97a3dlxu1JlSjur0g52WiKued3vEVY/+MQvOlI9ru
OFd1d2RbxnHIecUjWZDzIJn2gpxnT22T/XvY5Ll5JnZz9Fh8TtWo9EXV/ra/
7jzWeHdXqL4wyHmZqMp5z4YeVOyKGl/aoi2O1/Ze+I2M45DzikeyIOdBMu0F
Oc+ed3baZ7aWjgi1d0VTtMumBguLz6kalb7I5Lwrus4xdFnXL+jCztEZ+3Ba
iT/bE1Xnj+r2gpyXids57/86BtLjPfcodiSOKl/O7Ci1vcZloacyjkHOKx7J
4pTz3t7+Oh2o3SOt9k5v6nLr9jdockIm5+1cd8BWT/57VWBz3pNvWr+zzVV8
TtWo9CXX+nn7IztpVveNjvsA8B72qlDdXpxy3t09/zb6a1nVRauUeZGMSl/c
zHkXdH7HsQ6Lm6jyhffwsLtOrieeDnJe8UgW1EmGZNoL6iRb09QecT3jmeJz
q0SlL/nsh8E41crgXKAK1c9d1EnOxM2cx+suvJjfaqLKlz90nm57nXd0j804
Zkdki5HdkvXbzlOQ8wIoWZDzIJn2gpxnzaZ91vvV5is+t0pU+pJvzmPsxjN4
zwxVqH7uIudl4pTzXgg9bKwvZd3dc5Nj1hO901SFKl+45ondNfI9ILO3rZ1f
yHmFK1mQ8yCZ9oKcZ3Ndb1uvm81XfG6VqPTFjZx3adfPbM+hqtaK6ucucl4m
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

      "], {{0, 346.}, {317., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->{144, 144}],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, 
      MetaInformation -> <|
       "XMP" -> <|
         "XMPBasicSchema" -> <|
           "CreatorTool" -> 
            "Created with the Wolfram Language : www.wolfram.com"|>|>|>],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{376.0859375, Automatic},
    ImageSizeRaw->{317., 346.},
    PlotRange->{{0, 317.}, {0, 346.}}], "  "}]], "Input",ExpressionUUID->
  "79dd9557-5d7e-4874-97fc-2792369b677f"]
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8672328726196327`*^9, 3.867232893080565*^9}, {
  3.86723336745618*^9, 3.867233378363123*^9}, {3.867375358286914*^9, 
  3.867375397816737*^9}, {3.867383749926137*^9, 3.8673837805842447`*^9}, {
  3.8673838515010233`*^9, 3.86738386135218*^9}, {3.8674018631371326`*^9, 
  3.867401874582693*^9}},
 TextAlignment->Center,
 CellID->6880573,ExpressionUUID->"00aab212-4c20-4cdb-9dba-502b97269871"],

Cell[TextData[{
 "We want every word, whether it is horizontally or vertically formed, to \
correspond to an ",
 StyleBox["actual",
  FontSlant->"Italic"],
 " word in the English dictionary. Again, taking the example of horizontal \
words, if there is a letter to the right of a blank cell or if there is a \
letter in a cell in the first column, and another letter to the right of that \
cell, we want the horizontal word formed starting from the \"middle\" cell to \
be an ",
 StyleBox["actual",
  FontSlant->"Italic"],
 " word."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867232960943421*^9, 3.867232972593623*^9}, {
  3.867233005045268*^9, 3.867233159497473*^9}, {3.867233399117779*^9, 
  3.867233465113721*^9}, {3.867233694821978*^9, 3.867233695982004*^9}, {
  3.867234032289661*^9, 3.867234055763879*^9}, {3.8673754558912363`*^9, 
  3.86737545646325*^9}, {3.867383377314106*^9, 3.8673835020762863`*^9}, {
  3.867383909704982*^9, 3.8673839168141212`*^9}},
 CellID->2055330071,ExpressionUUID->"c928c03b-7d1b-4dc6-8f3a-639f94381152"],

Cell[TextData[{
 "We have ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["N", "TI"], TraditionalForm], "errors" -> {}, "input" -> "N", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "12e38040-f8ae-4037-88c0-918a5d5a70ea"],
 " words to build the crossword out of."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867139745172668*^9, 3.867139760741076*^9}, {
  3.867144925486067*^9, 3.867144928908239*^9}, {3.867146421789517*^9, 
  3.867146460598609*^9}, {3.867147233205269*^9, 3.867147261885016*^9}, {
  3.867233792817308*^9, 3.867233865324024*^9}, {3.867234781921494*^9, 
  3.867234799822317*^9}, {3.867246584791947*^9, 3.8672465963936377`*^9}},
 CellID->461822836,ExpressionUUID->"0a1c749c-6c6e-4b20-aa0b-7971bc4f42e9"],

Cell[TextData[{
 "For horizontally placed words which start at ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"(", 
         RowBox[{
           StyleBox["x", "TI"], ",", "1"}], ")"}], TraditionalForm], 
     "errors" -> {}, "input" -> "(x, 1)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f1fdcc73-f626-4e34-bbc1-c08c21f8a963"],
 " for an arbitrary row ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["x", "TI"], TraditionalForm], "errors" -> {}, "input" -> "x", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e4310cca-7983-441a-aaf4-9bbcb9b3a938"],
 ","
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867139745172668*^9, 3.867139760741076*^9}, {
  3.867144925486067*^9, 3.867144928908239*^9}, {3.867146421789517*^9, 
  3.867146460598609*^9}, {3.867147233205269*^9, 3.867147261885016*^9}, {
  3.867233792817308*^9, 3.867233865324024*^9}, {3.867234781921494*^9, 
  3.867234799822317*^9}, {3.867246584791947*^9, 3.867246623404913*^9}},
 CellID->1326028707,ExpressionUUID->"0ce180af-d43b-4baf-ad34-b6b84ccb69e7"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[<|"boxes" -> FormBox[
      RowBox[{
        RowBox[{"(", 
          RowBox[{"\[Not]", 
            SubscriptBox[
             StyleBox["alpha", "TI"], 
             RowBox[{
               StyleBox["27", "TI"], ",", 
               StyleBox["x", "TI"], ",", 
               StyleBox["1", "TI"]}]], "\[Wedge]", "\[Not]", 
            SubscriptBox[
             StyleBox["alpha", "TI"], 
             RowBox[{
               StyleBox["27", "TI"], ",", 
               StyleBox["x", "TI"], ",", 
               StyleBox["2", "TI"]}]]}], ")"}], " ", 
        "\[DoubleLongRightArrow] ", 
        RowBox[{"(", 
          RowBox[{
            SubscriptBox[
             StyleBox["wp", "TI"], 
             RowBox[{
               StyleBox["1", "TI"], ",", 
               StyleBox["x", "TI"], ",", 
               StyleBox["1", "TI"], ",", 
               StyleBox["0", "TI"]}]], "\[Vee]", 
            SubscriptBox[
             StyleBox["wp", "TI"], 
             RowBox[{
               StyleBox["2", "TI"], ",", 
               StyleBox["x", "TI"], ",", 
               StyleBox["1", "TI"], ",", 
               StyleBox["0", "TI"]}]], "\[Vee]", 
            SubscriptBox[
             StyleBox["wp", "TI"], 
             RowBox[{
               StyleBox["3", "TI"], ",", 
               StyleBox["x", "TI"], ",", 
               StyleBox["1", "TI"], ",", 
               StyleBox["0", "TI"]}]], "\[Vee]", "\[Ellipsis]", 
            SubscriptBox[
             StyleBox["wp", "TI"], 
             RowBox[{
               StyleBox["N", "TI"], ",", 
               StyleBox["x", "TI"], ",", 
               StyleBox["1", "TI"], ",", 
               StyleBox["0", "TI"]}]]}], ")"}]}], TraditionalForm], 
    "errors" -> {}, "input" -> 
    "(\\lnot \\it{alpha}_{27, x, 1} \\land \\lnot \\it{alpha}_{27, x, 2}) \\, \
\\implies \\, (\\it{wp}_{1, x, 1, 0} \\lor \\it{wp}_{2, x, 1, 0} \\lor \
\\it{wp}_{3, x, 1, 0} \\lor \[Ellipsis] \\it{wp}_{N, x, 1, 0})", "state" -> 
    "Boxes"|>,
   "TeXAssistantTemplate"], 
  TraditionalForm]],ExpressionUUID->"0a726900-27f3-4728-b641-a1911476d214"]], \
"Text",
 TaggingRules->{"AttachedInlineCell" -> CellObject[429585]},
 CellChangeTimes->{{3.867051766504427*^9, 3.8670521599794703`*^9}, {
   3.867052458596066*^9, 3.867052521140747*^9}, 3.867052781689228*^9, 
   3.867233879863043*^9, {3.867234660729031*^9, 3.867234663222262*^9}, 
   3.867317986235997*^9, {3.867401422677227*^9, 3.8674014239559927`*^9}, 
   3.8674027894770393`*^9},
 TextAlignment->Center,
 FontSize->17,
 CellID->1264903366,ExpressionUUID->"bc3b6d1b-09d2-4b80-91f4-c1b0dfbe7907"],

Cell[TextData[{
 "For horizontally placed words which start at ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"(", 
         RowBox[{
           StyleBox["x", "TI"], ",", 
           StyleBox["y", "TI"]}], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "(x, y)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "14313ba7-052a-4644-bbcc-bfc6fb215f39"],
 " (",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"1", "<", 
         StyleBox["y", "TI"], "<", 
         StyleBox["gridSize", "TI"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "1 < y < \\it{gridSize}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "5efc568b-8912-4e9c-9cad-6de05688575c"],
 ") for some row ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["x", "TI"], TraditionalForm], "errors" -> {}, "input" -> "x", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "12282b45-37e1-4301-9a09-3364ebfff3da"],
 " and column ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["y", "TI"], TraditionalForm], "errors" -> {}, "input" -> "y", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "5be0a4b3-8f40-4bbd-9769-64c5902f6c8a"],
 ","
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867233890585416*^9, 3.867233933017968*^9}, {
  3.867246618229919*^9, 3.8672466202911997`*^9}},
 CellID->258820689,ExpressionUUID->"91434ce0-0b12-4b22-8224-781072006ddb"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[<|"boxes" -> FormBox[
      RowBox[{
        RowBox[{"(", 
          RowBox[{
            SubscriptBox[
             StyleBox["alpha", "TI"], 
             RowBox[{
               StyleBox["27", "TI"], ",", 
               StyleBox["x", "TI"], ",", 
               StyleBox["y", "TI"], "-", 
               StyleBox["1", "TI"]}]], "\[Wedge]", "\[Not]", 
            SubscriptBox[
             StyleBox["alpha", "TI"], 
             RowBox[{
               StyleBox["27", "TI"], ",", 
               StyleBox["x", "TI"], ",", 
               StyleBox["y", "TI"]}]], "\[Wedge]", "\[Not]", 
            SubscriptBox[
             StyleBox["alpha", "TI"], 
             RowBox[{
               StyleBox["27", "TI"], ",", 
               StyleBox["x", "TI"], ",", 
               StyleBox["y", "TI"], "+", 
               StyleBox["1", "TI"]}]]}], ")"}], " ", 
        "\[DoubleLongRightArrow] ", 
        RowBox[{"(", 
          RowBox[{
            SubscriptBox[
             StyleBox["wp", "TI"], 
             RowBox[{
               StyleBox["1", "TI"], ",", 
               StyleBox["x", "TI"], ",", 
               StyleBox["y", "TI"], ",", 
               StyleBox["0", "TI"]}]], "\[Vee]", 
            SubscriptBox[
             StyleBox["wp", "TI"], 
             RowBox[{
               StyleBox["2", "TI"], ",", 
               StyleBox["x", "TI"], ",", 
               StyleBox["y", "TI"], ",", 
               StyleBox["0", "TI"]}]], "\[Vee]", 
            SubscriptBox[
             StyleBox["wp", "TI"], 
             RowBox[{
               StyleBox["3", "TI"], ",", 
               StyleBox["x", "TI"], ",", 
               StyleBox["y", "TI"], ",", 
               StyleBox["0", "TI"]}]], "\[Vee]", "\[Ellipsis]", 
            SubscriptBox[
             StyleBox["wp", "TI"], 
             RowBox[{
               StyleBox["N", "TI"], ",", 
               StyleBox["x", "TI"], ",", 
               StyleBox["y", "TI"], ",", 
               StyleBox["0", "TI"]}]]}], ")"}]}], TraditionalForm], 
    "errors" -> {}, "input" -> 
    "(\\it{alpha}_{27, x, y - 1}  \\land \\lnot \\it{alpha}_{27, x, y} \\land \
\\lnot\\it{alpha}_{27, x, y + 1}) \\, \\implies \\, (\\it{wp}_{1, x, y, 0} \
\\lor \\it{wp}_{2, x, y, 0} \\lor \\it{wp}_{3, x, y, 0} \\lor \[Ellipsis] \
\\it{wp}_{N, x, y, 0})", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], 
  TraditionalForm]],ExpressionUUID->"016df899-54f0-438c-95b2-9717f0630a85"]], \
"Text",
 TaggingRules->{"AttachedInlineCell" -> CellObject[429681]},
 CellChangeTimes->{{3.867051766504427*^9, 3.8670521599794703`*^9}, {
   3.867052458596066*^9, 3.867052521140747*^9}, 3.867052781689228*^9, 
   3.867233879863043*^9, {3.867234660729031*^9, 3.867234663222262*^9}, 
   3.867317994799672*^9, 3.867402800912449*^9},
 TextAlignment->Center,
 FontSize->17,
 CellID->1404862146,ExpressionUUID->"4617c154-588c-4300-82ff-ec95563c5b52"],

Cell["\<\
Generating horizontal and vertical constraints as described above:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.867246709492661*^9, 3.867246718845306*^9}},
 CellID->1570905586,ExpressionUUID->"6d6be5b0-7137-4026-b554-c9468aaab228"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"startConstraints", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", "\n", "  ", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"y", " ", "-", " ", "1"}], " ", ">=", " ", "1"}], ",", "\n", 
       "   ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"y", " ", "+", " ", "1"}], " ", "<=", " ", "gridSize"}], 
         ",", "\n", "    ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"startConstraints", ",", " ", "\n", "     ", 
           RowBox[{"BooleanMinimize", "@", "\n", "      ", 
            RowBox[{"Implies", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"alpha", "[", 
                 RowBox[{"{", 
                  RowBox[{"blankNum", ",", " ", "x", ",", " ", 
                   RowBox[{"y", " ", "-", " ", "1"}]}], "}"}], "]"}], " ", "&&",
                 " ", "\n", "         ", 
                RowBox[{"Not", "@", 
                 RowBox[{"alpha", "[", 
                  RowBox[{"{", 
                   RowBox[{"blankNum", ",", " ", "x", ",", " ", "y"}], "}"}], 
                  "]"}]}], " ", "&&", " ", "\n", "         ", 
                RowBox[{"Not", "@", 
                 RowBox[{"alpha", "[", 
                  RowBox[{"{", 
                   RowBox[{"blankNum", ",", " ", "x", ",", " ", 
                    RowBox[{"y", " ", "+", " ", "1"}]}], "}"}], "]"}]}]}], 
               ")"}], ",", " ", "\n", "       ", 
              RowBox[{"Or", " ", "@@", " ", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"wp", "[", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", " ", "x", ",", " ", "y", ",", " ", "0"}],
                    "}"}], "]"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", " ", "1", ",", " ", "numWords"}], "}"}]}],
                 "]"}]}]}], "]"}]}]}], "]"}], ",", "\n", "    ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"startConstraints", ",", " ", "\n", "     ", 
           RowBox[{"BooleanMinimize", "@", "\n", "      ", 
            RowBox[{"Implies", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"alpha", "[", 
                 RowBox[{"{", 
                  RowBox[{"blankNum", ",", " ", "x", ",", " ", 
                   RowBox[{"y", " ", "-", " ", "1"}]}], "}"}], "]"}], " ", "&&",
                 " ", "\n", "         ", 
                RowBox[{"Not", "@", 
                 RowBox[{"alpha", "[", 
                  RowBox[{"{", 
                   RowBox[{"blankNum", ",", " ", "x", ",", " ", "y"}], "}"}], 
                  "]"}]}]}], ")"}], ",", " ", "\n", "       ", 
              RowBox[{"Or", " ", "@@", " ", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"wp", "[", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", " ", "x", ",", " ", "y", ",", " ", "0"}],
                    "}"}], "]"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", " ", "1", ",", " ", "numWords"}], "}"}]}],
                 "]"}]}]}], "]"}]}]}], "]"}]}], " ", "\n", "     ", "]"}], 
       ",", "\n", "   ", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"startConstraints", ",", " ", "\n", "    ", 
         RowBox[{"BooleanMinimize", "@", "\n", "     ", 
          RowBox[{"Implies", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Not", "@", 
               RowBox[{"alpha", "[", 
                RowBox[{"{", 
                 RowBox[{"blankNum", ",", " ", "x", ",", " ", "y"}], "}"}], 
                "]"}]}], " ", "&&", " ", "\n", "        ", 
              RowBox[{"Not", "@", 
               RowBox[{"alpha", "[", 
                RowBox[{"{", 
                 RowBox[{"blankNum", ",", " ", "x", ",", " ", 
                  RowBox[{"y", " ", "+", " ", "1"}]}], "}"}], "]"}]}]}], 
             ")"}], ",", " ", "\n", "      ", 
            RowBox[{"Or", " ", "@@", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"wp", "[", 
                RowBox[{"{", 
                 RowBox[{"i", ",", " ", "x", ",", " ", "y", ",", " ", "0"}], 
                 "}"}], "]"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"i", ",", " ", "1", ",", " ", "numWords"}], "}"}]}], 
              "]"}]}]}], "]"}]}]}], "]"}]}], "\n", "   ", "]"}], ",", "\n", 
     "  ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "1", ",", " ", "gridSize"}], "}"}], ",", "\n", 
     "  ", 
     RowBox[{"{", 
      RowBox[{"y", ",", " ", "1", ",", " ", "gridSize"}], "}"}]}], "\n", "  ",
     "]"}], ";"}], "\n", "  "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", "\n", "  ", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x", " ", "-", " ", "1"}], " ", ">=", " ", "1"}], ",", "\n", 
       "   ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", " ", "+", " ", "1"}], " ", "<=", " ", "gridSize"}], 
         ",", "\n", "    ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"startConstraints", ",", " ", "\n", "     ", 
           RowBox[{"BooleanMinimize", "@", "\n", "      ", 
            RowBox[{"Implies", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"alpha", "[", 
                 RowBox[{"{", 
                  RowBox[{"blankNum", ",", " ", 
                   RowBox[{"x", " ", "-", " ", "1"}], ",", " ", "y"}], "}"}], 
                 "]"}], " ", "&&", " ", "\n", "         ", 
                RowBox[{"Not", "@", 
                 RowBox[{"alpha", "[", 
                  RowBox[{"{", 
                   RowBox[{"blankNum", ",", " ", "x", ",", " ", "y"}], "}"}], 
                  "]"}]}], " ", "&&", " ", "\n", "         ", 
                RowBox[{"Not", "@", 
                 RowBox[{"alpha", "[", 
                  RowBox[{"{", 
                   RowBox[{"blankNum", ",", " ", 
                    RowBox[{"x", " ", "+", " ", "1"}], ",", " ", "y"}], "}"}],
                   "]"}]}]}], ")"}], ",", " ", "\n", "       ", 
              RowBox[{"Or", " ", "@@", " ", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"wp", "[", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", " ", "x", ",", " ", "y", ",", " ", "1"}],
                    "}"}], "]"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", " ", "1", ",", " ", "numWords"}], "}"}]}],
                 "]"}]}]}], "]"}]}]}], "]"}], ",", "\n", "    ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"startConstraints", ",", " ", "\n", "     ", 
           RowBox[{"BooleanMinimize", "@", "\n", "      ", 
            RowBox[{"Implies", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"alpha", "[", 
                 RowBox[{"{", 
                  RowBox[{"blankNum", ",", " ", 
                   RowBox[{"x", " ", "-", " ", "1"}], ",", " ", "y"}], "}"}], 
                 "]"}], " ", "&&", " ", "\n", "         ", 
                RowBox[{"Not", "@", 
                 RowBox[{"alpha", "[", 
                  RowBox[{"{", 
                   RowBox[{"blankNum", ",", " ", "x", ",", " ", "y"}], "}"}], 
                  "]"}]}]}], ")"}], ",", " ", "\n", "       ", 
              RowBox[{"Or", " ", "@@", " ", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"wp", "[", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", " ", "x", ",", " ", "y", ",", " ", "1"}],
                    "}"}], "]"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", " ", "1", ",", " ", "numWords"}], "}"}]}],
                 "]"}]}]}], "]"}]}]}], "]"}]}], "\n", "    ", "]"}], ",", 
       "\n", "   ", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"startConstraints", ",", " ", "\n", "    ", 
         RowBox[{"BooleanMinimize", "@", "\n", "     ", 
          RowBox[{"Implies", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Not", "@", 
               RowBox[{"alpha", "[", 
                RowBox[{"{", 
                 RowBox[{"blankNum", ",", " ", "x", ",", " ", "y"}], "}"}], 
                "]"}]}], " ", "&&", " ", "\n", "        ", 
              RowBox[{"Not", "@", 
               RowBox[{"alpha", "[", 
                RowBox[{"{", 
                 RowBox[{"blankNum", ",", " ", 
                  RowBox[{"x", " ", "+", " ", "1"}], ",", " ", "y"}], "}"}], 
                "]"}]}]}], ")"}], ",", " ", "\n", "      ", 
            RowBox[{"Or", " ", "@@", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"wp", "[", 
                RowBox[{"{", 
                 RowBox[{"i", ",", " ", "x", ",", " ", "y", ",", " ", "1"}], 
                 "}"}], "]"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"i", ",", " ", "1", ",", " ", "numWords"}], "}"}]}], 
              "]"}]}]}], "]"}]}]}], "]"}]}], "\n", "   ", "]"}], ",", "\n", 
     "  ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "1", ",", " ", "gridSize"}], "}"}], ",", "\n", 
     "  ", 
     RowBox[{"{", 
      RowBox[{"y", ",", " ", "1", ",", " ", "gridSize"}], "}"}]}], "\n", "  ",
     "]"}], ";"}], "\n", "  "}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"satConstraints", ",", " ", 
    RowBox[{"And", " ", "@@", " ", 
     RowBox[{"Flatten", "@", "startConstraints"}]}]}], "]"}], ";"}]}], "Code",\

 TaggingRules->{},
 CellChangeTimes->{{3.867139745172668*^9, 3.8671397905768337`*^9}, {
   3.867139890538221*^9, 3.867139893743511*^9}, {3.867234477095986*^9, 
   3.8672344896983967`*^9}, {3.867236301399431*^9, 3.867236339328356*^9}, {
   3.867245963334196*^9, 3.867245964249584*^9}, 3.8672460543566923`*^9, 
   3.867246441442925*^9, 3.867246506773139*^9, {3.867246688974382*^9, 
   3.867246698813396*^9}},
 CellID->239425455,ExpressionUUID->"8d2a852d-a73c-4791-a5bb-13a8dc15d207"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assignment of Truth Values", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.867159270192977*^9, 3.8671592745337143`*^9}, {
  3.86715959059966*^9, 3.8671596034138193`*^9}, {3.867231680858149*^9, 
  3.8672316910460787`*^9}},
 CellID->1750767021,ExpressionUUID->"3dfbbe96-1f8e-4f0c-ab92-99e4381724db"],

Cell[TextData[{
 "We finally run the SAT solver on the implications and constraints \
generated. The clauses in ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["satConstraints", "TI"], TraditionalForm], "errors" -> {}, 
     "input" -> "\\it{satConstraints}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "11b09396-9249-46ee-a3dc-0c1697e14e3a"],
 " are joined together with the logical ",
 StyleBox["AND",
  FontSlant->"Italic"],
 " operator.",
 "\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["placementScheme", "TI"], TraditionalForm], "errors" -> {}, 
     "input" -> "\\it{placementScheme}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1652b706-89b3-41cc-bc42-cf97aed5f322"],
 " is a list of all the ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["wp", "TI"], 
        RowBox[{
          StyleBox["i", "TI"], ",", 
          StyleBox[" ", "TI"], 
          StyleBox["x", "TI"], ",", 
          StyleBox[" ", "TI"], 
          StyleBox["y", "TI"], ",", 
          StyleBox[" ", "TI"], 
          StyleBox["z", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{wp}_{i,\\, x,\\, y,\\, z}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "cefe631a-2369-4be4-88d4-f733b18a666a"],
 " that are assigned ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["True", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{True}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "8938f7ec-691e-4756-a376-25ef2ff9a6e0"],
 ".\nThe reason for randomly shuffling ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["satConstraints", "TI"], TraditionalForm], "errors" -> {}, 
     "input" -> "\\it{satConstraints}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e7bb4ab0-23ba-42d1-bf45-759324d331d2"],
 " will be explained later in this essay."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867139853208659*^9, 3.867139864901432*^9}, {
  3.867146412320156*^9, 3.86714641815522*^9}, {3.8671466338559237`*^9, 
  3.867146634459012*^9}, {3.8672350220532913`*^9, 3.8672351921755447`*^9}, {
  3.867235581820815*^9, 3.86723560202151*^9}, {3.8673755164742947`*^9, 
  3.867375580505271*^9}},
 CellID->1120088538,ExpressionUUID->"ad18043a-39b5-45a9-ad5d-5505c8b5c456"],

Cell["\<\
The following code finds an assignment of truth values for all the \
implications and constraints created:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.8672456256258297`*^9, 3.8672456615347548`*^9}},
 CellID->513640145,ExpressionUUID->"470deb56-dda6-4c41-abdb-6811a5b6388b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"satConstraints", " ", "=", " ", 
   RowBox[{"RandomSample", "[", "satConstraints", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"satConstraints", " ", "=", " ", 
   RowBox[{"And", " ", "@@", " ", 
    RowBox[{"Flatten", "@", "satConstraints"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"res", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"satVariables", ",", " ", 
      RowBox[{
       RowBox[{"SatisfiabilityInstances", "[", 
        RowBox[{"satConstraints", ",", " ", "satVariables", ",", " ", 
         RowBox[{"Method", " ", "->", " ", "\"\<SAT\>\""}]}], "]"}], " ", "//",
        " ", "Flatten"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"placementScheme", " ", "=", " ", 
   RowBox[{"Select", "[", 
    RowBox[{"res", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Head", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], " ", "===", " ", "wp"}], " ", "&&",
        " ", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], " ", "===", " ", "True"}]}], " ", 
      "&"}]}], "]"}]}], ";"}]}], "Code",
 TaggingRules->{},
 CellChangeTimes->{{3.867139853208659*^9, 3.8671398819810133`*^9}, {
  3.86713991350981*^9, 3.867139914112728*^9}, {3.867144443262331*^9, 
  3.8671445598768063`*^9}, {3.867144592642626*^9, 3.867144661981845*^9}, {
  3.867144716425838*^9, 3.8671447206799917`*^9}, {3.867144899919058*^9, 
  3.867144901331832*^9}, {3.867235012182148*^9, 3.867235017405415*^9}},
 CellID->438513800,ExpressionUUID->"12ac9409-685a-4973-9c5b-f3d81e881521"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Crossword", "Section",
 TaggingRules->{},
 CellChangeTimes->{{3.866902579267787*^9, 3.86690259693161*^9}, {
  3.8669027859818993`*^9, 3.8669027929209623`*^9}, {3.8669829016274433`*^9, 
  3.866982906152158*^9}},
 CellID->2116664303,ExpressionUUID->"58a07f39-78a9-4eaf-8240-64410ebc2e56"],

Cell[CellGroupData[{

Cell["Displaying The Crossword", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.867315705768148*^9, 3.867315710170019*^9}},
 CellID->1314817202,ExpressionUUID->"02715089-0b71-4148-b17f-017d9d59d46e"],

Cell["\<\
Now that we have an assignment of truth values, we display the crossword \
generated.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867146794856063*^9, 3.867146814574737*^9}, {
   3.867147074364077*^9, 3.867147075517524*^9}, {3.867157908373749*^9, 
   3.867157940663844*^9}, 3.867158019854638*^9, {3.867315214395616*^9, 
   3.867315265385974*^9}, {3.867315508010201*^9, 3.867315530565832*^9}},
 CellID->392277630,ExpressionUUID->"d10293c4-02e4-4937-a358-c89fe1a8252c"],

Cell[TextData[{
 " ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["crossword", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{crossword}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "aabdb25b-c4d3-4df3-9a0d-ac6a47acd16f"],
 " stores the crossword with words filled in and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["emptyCrossword", "TI"], TraditionalForm], "errors" -> {}, 
     "input" -> "\\it{emptyCrossword}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2d80abc6-35e9-49bc-ab6d-126f127d50f5"],
 ", as the name suggests, stores the crossword without any words filled in."
}], "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.867146794856063*^9, 3.867146814574737*^9}, {
   3.867147074364077*^9, 3.867147075517524*^9}, {3.867157908373749*^9, 
   3.867157940663844*^9}, 3.867158019854638*^9, {3.867315214395616*^9, 
   3.867315265385974*^9}, {3.867315508010201*^9, 3.867315520301642*^9}},
 CellID->993229572,ExpressionUUID->"e91cef8b-e951-4b5c-8a05-8192dfe4e8b1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"crossword", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{"\"\< \>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "gridSize"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "gridSize"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"emptyCrossword", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{"\"\< \>\"", ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "gridSize"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "gridSize"}], "}"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", "\n", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"whichWord", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"placementScheme", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "  ", 
      RowBox[{"xLoc", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"placementScheme", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", "  ", 
      RowBox[{"yLoc", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"placementScheme", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ";", "\n", "  ", 
      RowBox[{"orient", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"placementScheme", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], ";", "\n", "  ", "\n", "  ", 
      RowBox[{"colour", " ", "=", " ", 
       RowBox[{"RandomColor", "[", "]"}]}], ";", "\n", "  ", 
      RowBox[{"fS", " ", "=", " ", "0.85"}], ";", "\n", "  ", 
      RowBox[{"Table", "[", "\n", "   ", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"orient", " ", "==", " ", "0"}], ",", "\n", "    ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"emptyCrossword", "[", 
              RowBox[{"[", "xLoc", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"yLoc", " ", "+", " ", "j", " ", "-", " ", "1"}], "]"}],
              "]"}], " ", "=", " ", 
            RowBox[{"InputField", "[", 
             RowBox[{"\"\< \>\"", ",", " ", "String", ",", "\n", "      ", 
              RowBox[{"FieldSize", " ", "->", " ", 
               RowBox[{"{", 
                RowBox[{"fS", ",", " ", "fS"}], "}"}]}], ",", " ", "\n", 
              "      ", 
              RowBox[{"BaseStyle", " ", "->", " ", 
               RowBox[{"{", 
                RowBox[{
                "colour", ",", " ", "Bold", ",", " ", "Larger", ",", " ", 
                 RowBox[{"FontSize", " ", "->", " ", "25"}]}], "}"}]}], ",", 
              " ", "\n", "      ", 
              RowBox[{"ImageMargins", " ", "->", " ", "0"}]}], "]"}]}], ";", 
           "\n", "    ", "\n", "    ", 
           RowBox[{
            RowBox[{
             RowBox[{"crossword", "[", 
              RowBox[{"[", "xLoc", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"yLoc", " ", "+", " ", "j", " ", "-", " ", "1"}], "]"}],
              "]"}], " ", "=", " ", "\n", "     ", 
            RowBox[{"InputField", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"StringPart", "[", 
                RowBox[{
                 RowBox[{"words", "[", 
                  RowBox[{"[", "whichWord", "]"}], "]"}], ",", " ", "j"}], 
                "]"}], " ", "//", " ", "ToUpperCase"}], ",", " ", "\n", 
              "      ", "String", ",", "\n", "      ", 
              RowBox[{"FieldSize", " ", "->", " ", 
               RowBox[{"{", 
                RowBox[{"fS", ",", " ", "fS"}], "}"}]}], ",", " ", "\n", 
              "      ", 
              RowBox[{"BaseStyle", " ", "->", " ", 
               RowBox[{"{", 
                RowBox[{
                "colour", ",", " ", "Bold", ",", " ", "Larger", ",", " ", 
                 RowBox[{"FontSize", " ", "->", " ", "25"}]}], "}"}]}], ",", 
              " ", "\n", "      ", 
              RowBox[{"ImageMargins", " ", "->", " ", "0"}]}], "]"}]}]}], ",",
           "\n", "    ", "\n", "    ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"emptyCrossword", "[", 
              RowBox[{"[", 
               RowBox[{"xLoc", " ", "+", " ", "j", " ", "-", " ", "1"}], 
               "]"}], "]"}], "[", 
             RowBox[{"[", "yLoc", "]"}], "]"}], " ", "=", " ", 
            RowBox[{"InputField", "[", 
             RowBox[{
             "\"\< \>\"", ",", " ", "String", ",", " ", "\n", "      ", 
              RowBox[{"FieldSize", " ", "->", " ", 
               RowBox[{"{", 
                RowBox[{"fS", ",", " ", "fS"}], "}"}]}], ",", " ", "\n", 
              "      ", 
              RowBox[{"BaseStyle", " ", "->", " ", 
               RowBox[{"{", 
                RowBox[{
                "colour", ",", " ", "Bold", ",", " ", "Larger", ",", " ", 
                 RowBox[{"FontSize", " ", "->", " ", "25"}]}], "}"}]}], ",", 
              " ", "\n", "      ", 
              RowBox[{"ImageMargins", " ", "->", " ", "0"}]}], "]"}]}], ";", 
           "\n", "    ", "\n", "    ", 
           RowBox[{
            RowBox[{
             RowBox[{"crossword", "[", 
              RowBox[{"[", 
               RowBox[{"xLoc", " ", "+", " ", "j", " ", "-", " ", "1"}], 
               "]"}], "]"}], "[", 
             RowBox[{"[", "yLoc", "]"}], "]"}], " ", "=", " ", "\n", "     ", 
            
            RowBox[{"InputField", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"StringPart", "[", 
                RowBox[{
                 RowBox[{"words", "[", 
                  RowBox[{"[", "whichWord", "]"}], "]"}], ",", " ", "j"}], 
                "]"}], " ", "//", " ", "ToUpperCase"}], ",", " ", "\n", 
              "      ", "String", ",", " ", "\n", "      ", 
              RowBox[{"FieldSize", " ", "->", " ", 
               RowBox[{"{", 
                RowBox[{"fS", ",", " ", "fS"}], "}"}]}], ",", " ", "\n", 
              "      ", 
              RowBox[{"BaseStyle", " ", "->", " ", 
               RowBox[{"{", 
                RowBox[{
                "colour", ",", " ", "Bold", ",", " ", "Larger", ",", " ", 
                 RowBox[{"FontSize", " ", "->", " ", "25"}]}], "}"}]}], ",", 
              " ", "\n", "      ", 
              RowBox[{"ImageMargins", " ", "->", " ", "0"}]}], "]"}]}]}], 
          ","}], "\n", "    ", "]"}], ",", "\n", "   ", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", 
          RowBox[{"StringLength", "@", 
           RowBox[{"words", "[", 
            RowBox[{"[", "whichWord", "]"}], "]"}]}]}], "}"}]}], "]"}]}], ",",
      "\n", "  ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "@", "placementScheme"}]}], "}"}]}], "]"}], ";"}], 
  "\n", "  "}], "\n", 
 RowBox[{
  RowBox[{"display", " ", "=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"crossword", ",", " ", 
     RowBox[{"Frame", " ", "->", " ", "All"}], ",", " ", 
     RowBox[{"Background", " ", "->", " ", "Black"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"emptyDisplay", " ", "=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"emptyCrossword", ",", " ", 
     RowBox[{"Frame", " ", "->", " ", "All"}], ",", " ", 
     RowBox[{"Background", " ", "->", " ", "Black"}]}], "]"}]}], 
  ";"}]}], "Code",
 TaggingRules->{"AttachedInlineCell" -> CellObject[461057]},
 CellChangeTimes->{{3.867146794856063*^9, 3.867146814574737*^9}, {
  3.867147074364077*^9, 3.867147078491611*^9}, {3.867315552390685*^9, 
  3.867315561156281*^9}, {3.86731566052897*^9, 3.8673156817246532`*^9}, {
  3.867402168701707*^9, 3.867402169296547*^9}, {3.867402211288061*^9, 
  3.867402301346341*^9}},
 CellID->686398179,ExpressionUUID->"a2153eb2-7bdb-4319-94f6-2f548198b943"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Connected Components", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.8673157193484497`*^9, 3.867315740650345*^9}},
 CellID->572795505,ExpressionUUID->"3911270f-f8a7-4af4-b6a2-56c1693126eb"],

Cell["\<\
The SAT solver has to only find a valid assignment of truth values. There can \
be multiple such assignments. It's possible for the solver to return an \
assignment in which all words in the crossword aren't \"connected\". In other \
words, the big crossword can be split up into smaller disjoint crosswords.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867147099412038*^9, 3.867147107316093*^9}, {
   3.867157948347362*^9, 3.867157983511859*^9}, {3.867315857269772*^9, 
   3.867315895258498*^9}, {3.867315944860581*^9, 3.867315961328911*^9}, {
   3.867316743163439*^9, 3.867316746531054*^9}, 3.867316851634309*^9, {
   3.8673860940135183`*^9, 3.867386103443684*^9}},
 CellID->12042769,ExpressionUUID->"49da48ef-27cb-4280-87dd-197d4ce4b07f"],

Cell["\<\
It's also possible that there is in fact no arrange of words that leads to a \
single connected crossword. Here, it may be worthwhile to explore constraints \
which choose a subset of words to place, which can possibly form a single \
connected component. However, our SAT solver cannot maximise or minimize \
anything. It can only find a valid assignment of truth values. When we allow \
it to choose what words to use, placing no words becomes a valid assignment. \
So, we can't do this here.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867147099412038*^9, 3.867147107316093*^9}, {
  3.867157948347362*^9, 3.867157983511859*^9}, {3.867315857269772*^9, 
  3.867315895258498*^9}, {3.867315944860581*^9, 3.867315961328911*^9}, {
  3.867316743163439*^9, 3.867316746531054*^9}, {3.867316851943925*^9, 
  3.867316860021064*^9}, {3.867317575589396*^9, 3.867317727453052*^9}, {
  3.867331490456437*^9, 3.867331526197156*^9}, {3.8673861256140213`*^9, 
  3.867386126520177*^9}},
 CellID->1259012004,ExpressionUUID->"b813ce25-6265-488f-b924-84edfd5d3ca2"],

Cell[TextData[{
 "To go around this, we first count the number of disjoint crosswords in our \
main crossword by creating a graph out of all cells that are adjacent to each \
other and have a letter in them. Let's define ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["quality", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{quality}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "0f5de677-ca9c-420f-bfdf-5892d1eaa14d"],
 " to be the number of connected components in this graph. We want to \
minimize the value of ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["quality", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{quality}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "67e7d0d4-0639-42d4-bd98-a48059af3180"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867147099412038*^9, 3.867147107316093*^9}, {
  3.867157948347362*^9, 3.867157983511859*^9}, {3.867315857269772*^9, 
  3.867315907721404*^9}, {3.8673159414538918`*^9, 3.867316076168097*^9}},
 CellID->319133317,ExpressionUUID->"a1d5b279-902a-4ce0-a4f6-e4190155d728"],

Cell["\<\
The following code creates a graph of connected sub-crosswords:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.867316025271264*^9, 3.867316038005513*^9}},
 CellID->399800589,ExpressionUUID->"3b8bdd17-28ec-4b83-9ae1-e91077d195c0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"edges", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", "\n", "  ", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", " ", 
        RowBox[{"SameQ", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"crossword", "[", 
            RowBox[{"[", "x", "]"}], "]"}], "[", 
           RowBox[{"[", "y", "]"}], "]"}], ",", " ", "\"\< \>\""}], "]"}]}], 
       ",", "\n", "   ", 
       RowBox[{"Table", "[", "\n", "    ", 
        RowBox[{
         RowBox[{
          RowBox[{"nx", " ", "=", " ", 
           RowBox[{"x", " ", "+", " ", 
            RowBox[{"dir", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\n", "    ", 
          RowBox[{"ny", " ", "=", " ", 
           RowBox[{"y", " ", "+", " ", 
            RowBox[{"dir", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\n", "    ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"nx", " ", ">=", " ", "1"}], " ", "&&", " ", 
             RowBox[{"nx", " ", "<=", " ", "gridSize"}], " ", "&&", " ", 
             RowBox[{"ny", " ", ">=", " ", "1"}], " ", "&&", " ", 
             RowBox[{"ny", " ", "<=", " ", "gridSize"}]}], ",", "\n", "     ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", " ", 
               RowBox[{"SameQ", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"crossword", "[", 
                   RowBox[{"[", "nx", "]"}], "]"}], "[", 
                  RowBox[{"[", "ny", "]"}], "]"}], ",", " ", "\"\< \>\""}], 
                "]"}]}], ",", " ", "\n", "      ", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"edges", ",", " ", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"x", ",", " ", "y"}], "}"}], " ", "->", " ", 
                  RowBox[{"{", 
                   RowBox[{"nx", ",", " ", "ny"}], "}"}]}], "}"}]}], "]"}]}], 
             "]"}]}], "]"}]}], ",", "\n", "    ", 
         RowBox[{"{", 
          RowBox[{"dir", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", 
               RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}]}], "\n", "    ", 
        "]"}]}], "\n", "   ", "]"}], ",", "\n", "  ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "1", ",", " ", "gridSize"}], "}"}], ",", "\n", 
     "  ", 
     RowBox[{"{", 
      RowBox[{"y", ",", " ", "1", ",", " ", "gridSize"}], "}"}]}], "\n", "  ",
     "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"g", " ", "=", " ", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"edges", ",", " ", "1"}], "]"}], ",", " ", 
     RowBox[{"DirectedEdges", " ", "->", " ", "False"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"quality", " ", "=", " ", 
   RowBox[{"Length", "[", 
    RowBox[{"ConnectedComponents", "[", "g", "]"}], "]"}]}], ";"}]}], "Code",
 TaggingRules->{"AttachedInlineCell" -> CellObject[461153]},
 CellChangeTimes->{{3.867147099412038*^9, 3.8671471258024693`*^9}},
 CellID->983764004,ExpressionUUID->"b413418d-7bda-4a4c-8cb1-d39d5e7bcf89"],

Cell[TextData[{
 "We use a heuristic to try and minimize the value of ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["quality", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{quality}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2d3bacfd-f016-4196-a187-5f615f1a9db0"],
 ". "
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867316108063816*^9, 3.86731614844221*^9}, {
  3.867316838714848*^9, 3.8673168423393717`*^9}},
 CellID->450386767,ExpressionUUID->"d45ef065-0465-4d73-99e0-1ca6dea3d99e"],

Cell["\<\
The following code was present in the \"Assignment of Truth Values\" \
subsection:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.86731617891299*^9, 3.867316201001121*^9}, {
  3.867317763444319*^9, 3.867317764032154*^9}},
 CellID->731701074,ExpressionUUID->"8d07f0eb-a886-4fe5-8ce1-861b3d4a63de"],

Cell[BoxData[
 RowBox[{
  RowBox[{"satConstraints", " ", "=", " ", 
   RowBox[{"RandomSample", "[", "satConstraints", "]"}]}], ";"}]], "Code",
 TaggingRules->{},
 CellChangeTimes->{3.867316171875846*^9},
 CellID->1428547562,ExpressionUUID->"faff1ba7-a4b7-4436-85eb-29a40ee84c8e"],

Cell["\<\
Essentially, we randomly shuffle the list of constraints that we provide to \
our SAT solver. Many times, this leads to the solver finding a different \
assignment of truth values, resulting in a different arrangement of words \
(different crosswords are formed).\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867316205838468*^9, 3.8673162730619802`*^9}, {
  3.86731777176217*^9, 3.86731778716319*^9}},
 CellID->906795886,ExpressionUUID->"83a9064b-59fe-4b11-ab68-dbddbeade544"],

Cell[TextData[{
 "Because we have a measure of the ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["quality", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{quality}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "69e3f16f-2482-4c8b-b1a5-1350cfdbf3ff"],
 " of a crossword, we can generate multiple crosswords this way and pick the \
one with the smallest value of ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["quality", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{quality}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f74cc345-2580-4cfe-8682-4e343cc0531c"],
 " (smaller means better)."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867316205838468*^9, 3.8673163171769238`*^9}},
 CellID->1297536388,ExpressionUUID->"d830aeab-17fb-4314-b2ca-69c3369a6048"],

Cell[TextData[{
 "The following code uses the ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["generateCrossword", "TI"], TraditionalForm], "errors" -> {}, 
     "input" -> "\\it{generateCrossword}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b5fdd760-ea8e-47da-9b26-1e26c53c268c"],
 "[] function defined at the start of this essay, which returns a list in the \
format {",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["quality", "TI"], ",", 
         StyleBox["display", "TI"], ",", 
         StyleBox["emptyDisplay", "TI"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\it{quality}, \\it{display}, \\it{emptyDisplay}", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "67f62804-528e-470a-870a-920496a993e5"],
 "}. The word list can either be specified or be randomly generated. ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["ParallelTable", "TI"], TraditionalForm], "errors" -> {}, 
     "input" -> "\\it{ParallelTable}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "5ec335a0-d1b3-41e6-8a6d-d6131de0d7a3"],
 "[] gives the same output as ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["Table", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{Table}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "fc79044c-2b99-4502-a14f-ff8e006e7780"],
 "[] but allows for parallel computations. I recommend reading about it \
before using it."
}], "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.867316343413946*^9, 3.867316530043558*^9}, {
  3.867316583612866*^9, 3.867316587091229*^9}},
 CellID->240734920,ExpressionUUID->"330dcf83-3d6d-4f79-bcf1-5bf9d23a8c00"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gridSize", " ", "=", " ", "10"}], ";"}], "\n", 
 RowBox[{"words", " ", "=", " ", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"WordList", "[", "]"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"StringLength", "@", "#"}], " ", ">", " ", "2"}], " ", "&&", 
        " ", 
        RowBox[{
         RowBox[{"StringLength", "@", "#"}], " ", "<=", " ", "6"}]}], " ", 
       "&"}]}], "]"}], ",", " ", "4"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"crosswords", " ", "=", " ", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"generateCrossword", "[", 
      RowBox[{"gridSize", ",", " ", "words"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"n", ",", " ", "10"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"crosswords", " ", "=", " ", 
   RowBox[{"Sort", "[", "crosswords", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"crosswords", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}]}], "Code",
 TaggingRules->{},
 CellChangeTimes->{{3.866902579267787*^9, 3.86690259693161*^9}, {
   3.8669027859818993`*^9, 3.866902825492381*^9}, 3.8669403975876703`*^9, {
   3.866982909203121*^9, 3.866982913488811*^9}, {3.867139986802271*^9, 
   3.867139999796358*^9}, {3.867146551340583*^9, 3.8671465674359303`*^9}, {
   3.867146647325899*^9, 3.8671466603576813`*^9}, {3.8671467120067663`*^9, 
   3.867146789967595*^9}, {3.867316605630287*^9, 3.867316605855969*^9}, {
   3.867402323904955*^9, 3.8674023450379868`*^9}},
 CellID->364628259,ExpressionUUID->"0ce93d6c-493c-4e5c-ba6f-98dac03d7aaa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["How Can I Generate My Own Crosswords?", "Section",
 TaggingRules->{},
 CellChangeTimes->{{3.86731578487621*^9, 3.8673157865672626`*^9}, {
  3.867315820285177*^9, 3.8673158229931993`*^9}, {3.8673313512452183`*^9, 
  3.867331370471389*^9}, {3.8673323160109386`*^9, 3.867332347205785*^9}},
 CellID->1820351526,ExpressionUUID->"39cfb252-c4f4-474e-8a28-063fcb078c9c"],

Cell[TextData[{
 "All the code in this computational essay has been compiled into a single \
function ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["generateCrossword", "TI"], TraditionalForm], "errors" -> {}, 
     "input" -> "\\it{generateCrossword}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f521aece-81d9-481e-b52e-b3bb4d16143c"],
 "[]. Evaluate only that code block. The \"Display\" section contains \
information on using the crossword generator."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867334605453566*^9, 3.867334664872908*^9}, {
  3.867334699582835*^9, 3.867334740808741*^9}},
 CellID->42444941,ExpressionUUID->"eb033809-59bc-4e6f-92ed-f1b01a19b313"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["generateCrossword", "TI"], TraditionalForm], "errors" -> {}, 
     "input" -> "\\it{generateCrossword}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "9caf04b6-771b-49be-83d0-2faa3720661f"],
 "[]"
}], "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.867334538089613*^9, 3.867334552950601*^9}},
 CellID->313292030,ExpressionUUID->"80552e85-0861-457e-863f-68cda69770cd"],

Cell["\<\
Do not evaluate all cells in the notebook. Evaluate only this one and the \
ones under \"Display\".\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.867335233578796*^9, 3.867335250787648*^9}},
 CellID->1056441035,ExpressionUUID->"14719b73-5b47-443f-b635-e3dc4327ba84"],

Cell[BoxData[
 RowBox[{
  RowBox[{"generateCrossword", "[", 
   RowBox[{"gridSize0_Integer", ",", " ", "words0_List"}], "]"}], " ", ":=", 
  " ", "\n", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"gridSize", " ", "=", " ", "gridSize0"}], ",", " ", 
      RowBox[{"words", " ", "=", " ", "words0"}]}], "}"}], ",", "\n", "  ", 
    RowBox[{
     RowBox[{"numWords", " ", "=", " ", 
      RowBox[{"Length", "[", "words", "]"}]}], ";", "\n", "  ", 
     RowBox[{"blankNum", " ", "=", " ", "27"}], ";", "\n", "  ", 
     RowBox[{"alphabetMap", " ", "=", " ", "\n", "   ", 
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Alphabet", "[", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", " ", ";;", " ", 
           RowBox[{"blankNum", " ", "-", " ", "1"}]}], "]"}], "]"}], ",", " ",
         "\n", "    ", 
        RowBox[{"Range", "[", 
         RowBox[{"blankNum", " ", "-", " ", "1"}], "]"}]}], "]"}]}], ";", 
     "\n", "  ", 
     RowBox[{"Append", "[", 
      RowBox[{"alphabetMap", ",", " ", 
       RowBox[{"\"\<blank\>\"", " ", "->", " ", "blankNum"}]}], "]"}], ";", 
     "\n", "  ", 
     RowBox[{"satVariables", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "  ", 
     RowBox[{"satConstraints", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "  ", "\n", "  ", 
     RowBox[{
      RowBox[{"oneTrue", "[", 
       RowBox[{"x0_List", ",", " ", "atMost0_Integer"}], "]"}], " ", ":=", 
      " ", "\n", "   ", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"variables", " ", "=", " ", "x0"}], ",", " ", 
          RowBox[{"atMost", " ", "=", " ", "atMost0"}]}], "}"}], ",", "\n", 
        "    ", 
        RowBox[{
         RowBox[{"res", " ", "=", " ", 
          RowBox[{"{", "}"}]}], ";", "\n", "    ", 
         RowBox[{"listSize", " ", "=", " ", 
          RowBox[{"Length", "[", "variables", "]"}]}], ";", "\n", "    ", 
         "\n", "    ", 
         RowBox[{"prefFunc", " ", "=", " ", 
          RowBox[{"\"\<pref\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"Head", "@", 
             RowBox[{"variables", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], ";", "\n", "    ", 
         
         RowBox[{"prefVariables", " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"prefFunc", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "&"}], " ", "/@", 
           " ", "variables"}]}], ";", "\n", "    ", "\n", "    ", 
         RowBox[{"prefConstraints", " ", "=", " ", 
          RowBox[{
           RowBox[{"Table", "[", "\n", "       ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Implies", "[", 
                RowBox[{
                 RowBox[{"variables", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
                 RowBox[{"prefVariables", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", " ", "+", " ", "1"}], "]"}], "]"}]}], "]"}], 
               ",", "\n", "        ", 
               RowBox[{"Implies", "[", 
                RowBox[{
                 RowBox[{"prefVariables", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
                 RowBox[{"prefVariables", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", " ", "+", " ", "1"}], "]"}], "]"}]}], "]"}], 
               ",", "\n", "        ", 
               RowBox[{"Implies", "[", 
                RowBox[{
                 RowBox[{"prefVariables", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
                 RowBox[{"Not", "@", 
                  RowBox[{"variables", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}]}], "}"}], ",", 
             "\n", "       ", 
             RowBox[{"{", 
              RowBox[{"i", ",", " ", 
               RowBox[{"listSize", " ", "-", " ", "1"}]}], "}"}]}], "\n", 
            "       ", "]"}], " ", "//", " ", "Flatten"}]}], ";", "\n", 
         "    ", "\n", "    ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"prefConstraints", ",", " ", "\n", "     ", 
           RowBox[{"Implies", "[", 
            RowBox[{
             RowBox[{"prefVariables", "[", 
              RowBox[{"[", "listSize", "]"}], "]"}], ",", " ", 
             RowBox[{"Not", "@", 
              RowBox[{"variables", "[", 
               RowBox[{"[", "listSize", "]"}], "]"}]}]}], "]"}]}], "]"}], ";",
          "\n", "    ", "\n", "    ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"atMost", " ", "==", " ", "0"}], ",", " ", "\n", "     ", 
           RowBox[{"finalConstraints", " ", "=", " ", 
            RowBox[{
             RowBox[{"Or", " ", "@@", " ", "variables"}], " ", "&&", " ", 
             RowBox[{"And", " ", "@@", " ", "prefConstraints"}]}]}], ",", " ",
            "\n", "     ", 
           RowBox[{"finalConstraints", " ", "=", " ", 
            RowBox[{"And", " ", "@@", " ", "prefConstraints"}]}]}], "]"}], 
         ";", "\n", "    ", 
         RowBox[{"finalVarList", " ", "=", " ", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"variables", ",", " ", "prefVariables"}], "]"}], " ", "//",
            " ", "Flatten"}]}], ";", "\n", "    ", "\n", "    ", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"finalVarList", ",", " ", "finalConstraints"}], "}"}], 
          "]"}], ";"}]}], "\n", "    ", "]"}]}], ";", "\n", "  ", "\n", "  ", 
     
     RowBox[{"wordPlacementConstraints", " ", "=", " ", 
      RowBox[{"Table", "[", "\n", "    ", 
       RowBox[{
        RowBox[{"oneTrue", "[", "\n", "     ", 
         RowBox[{
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"wp", "[", 
              RowBox[{"{", 
               RowBox[{"x", ",", " ", "i", ",", " ", "j", ",", " ", "k"}], 
               "}"}], "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"i", ",", " ", "1", ",", " ", "gridSize"}], "}"}], ",", 
             " ", 
             RowBox[{"{", 
              RowBox[{"j", ",", " ", "1", ",", " ", "gridSize"}], "}"}], ",", 
             " ", 
             RowBox[{"{", 
              RowBox[{"k", ",", " ", "\n", "        ", "0", ",", " ", "1"}], 
              "}"}]}], "]"}], " ", "//", " ", "Flatten"}], ",", " ", "0"}], 
         "]"}], ",", "\n", "    ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "1", ",", " ", "numWords"}], "}"}]}], "]"}]}],
      ";", "\n", "  ", "\n", "  ", 
     RowBox[{"alphabetPlacementContraints", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", "\n", "     ", 
         RowBox[{
          RowBox[{"oneTrue", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"alpha", "[", 
                RowBox[{"{", 
                 RowBox[{"x", ",", " ", "i", ",", " ", "j"}], "}"}], "]"}], 
               ",", " ", 
               RowBox[{"{", 
                RowBox[{"x", ",", " ", "1", ",", " ", "blankNum"}], "}"}]}], 
              "]"}], " ", "//", " ", "Flatten"}], ",", " ", "\n", "      ", 
            "1"}], "]"}], ",", "\n", "     ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", ",", " ", "gridSize"}], "}"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "1", ",", " ", "gridSize"}], "}"}]}], "]"}],
         ",", " ", "1"}], "]"}]}], ";", "\n", "  ", "\n", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"satVariables", ",", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], " ", "&"}], " ", "/@", " ",
       "wordPlacementConstraints"}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"satConstraints", ",", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], " ", "&"}], " ", "/@", " ",
       "wordPlacementConstraints"}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"satVariables", ",", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], " ", "&"}], " ", "/@", " ",
       "alphabetPlacementContraints"}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"satConstraints", ",", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], " ", "&"}], " ", "/@", " ",
       "alphabetPlacementContraints"}], ";", "\n", "  ", 
     RowBox[{"satVariables", " ", "=", " ", 
      RowBox[{"satVariables", " ", "//", " ", "Flatten"}]}], ";", "\n", "  ", 
     "\n", "  ", 
     RowBox[{"letterConstraints", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "  ", "\n", "  ", 
     RowBox[{"Table", "[", "\n", "   ", 
      RowBox[{
       RowBox[{
        RowBox[{"wordLen", " ", "=", " ", 
         RowBox[{"StringLength", "[", 
          RowBox[{"words", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";", "\n", "   ", "\n", 
        "   ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"letterConstraints", ",", " ", 
          RowBox[{"Flatten", "@", 
           RowBox[{"Table", "[", "\n", "      ", 
            RowBox[{
             RowBox[{
              RowBox[{"Table", "[", "\n", "        ", 
               RowBox[{
                RowBox[{"Implies", "[", 
                 RowBox[{
                  RowBox[{"wp", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "i", ",", " ", "j", ",", " ", "k", ",", " ", "0"}], "}"}],
                    "]"}], ",", " ", "\n", "         ", 
                  RowBox[{"alpha", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"alphabetMap", "[", 
                    RowBox[{"StringPart", "[", 
                    RowBox[{
                    RowBox[{"words", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", " ", "y"}], "]"}], 
                    "]"}], ",", " ", "j", ",", " ", "\n", "           ", 
                    RowBox[{"k", " ", "+", " ", "y", " ", "-", " ", "1"}]}], 
                    "}"}], "]"}]}], "]"}], ",", "\n", "        ", 
                RowBox[{"{", 
                 RowBox[{"y", ",", " ", "1", ",", " ", "wordLen"}], "}"}]}], 
               "\n", "        ", "]"}], " ", "//", " ", "Flatten"}], ",", 
             "\n", "      ", "\n", "      ", 
             RowBox[{"{", 
              RowBox[{"j", ",", " ", "1", ",", " ", "gridSize"}], "}"}], ",", 
             " ", "\n", "      ", 
             RowBox[{"{", 
              RowBox[{"k", ",", " ", "1", ",", " ", 
               RowBox[{
               "gridSize", " ", "-", " ", "wordLen", " ", "+", " ", "1"}]}], 
              "}"}]}], "\n", "      ", "]"}]}]}], "]"}], ";", "\n", "   ", 
        "\n", "   ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"letterConstraints", ",", " ", 
          RowBox[{"Flatten", "@", 
           RowBox[{"Table", "[", "\n", "      ", 
            RowBox[{
             RowBox[{
              RowBox[{"Table", "[", "\n", "        ", 
               RowBox[{
                RowBox[{"Implies", "[", 
                 RowBox[{
                  RowBox[{"wp", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "i", ",", " ", "j", ",", " ", "k", ",", " ", "1"}], "}"}],
                    "]"}], ",", " ", "\n", "         ", 
                  RowBox[{"alpha", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"alphabetMap", "[", 
                    RowBox[{"StringPart", "[", 
                    RowBox[{
                    RowBox[{"words", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", " ", "y"}], "]"}], 
                    "]"}], ",", " ", 
                    RowBox[{"j", " ", "+", " ", "y", " ", "-", " ", "1"}], 
                    ",", " ", "\n", "           ", "k"}], "}"}], "]"}]}], 
                 "]"}], ",", "\n", "        ", 
                RowBox[{"{", 
                 RowBox[{"y", ",", " ", "1", ",", " ", "wordLen"}], "}"}]}], 
               "\n", "        ", "]"}], " ", "//", " ", "Flatten"}], ",", 
             "\n", "      ", "\n", "      ", 
             RowBox[{"{", 
              RowBox[{"j", ",", " ", "1", ",", " ", 
               RowBox[{
               "gridSize", " ", "-", " ", "wordLen", " ", "+", " ", "1"}]}], 
              "}"}], ",", " ", "\n", "      ", 
             RowBox[{"{", 
              RowBox[{"k", ",", " ", "1", ",", " ", "gridSize"}], "}"}]}], 
            "\n", "      ", "]"}]}]}], "]"}], ";", "\n", "   ", "\n", "   ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"letterConstraints", ",", " ", 
          RowBox[{"Flatten", "@", 
           RowBox[{"Table", "[", "\n", "      ", 
            RowBox[{
             RowBox[{"Implies", "[", 
              RowBox[{
               RowBox[{"wp", "[", 
                RowBox[{"{", 
                 RowBox[{"i", ",", " ", "j", ",", " ", "k", ",", " ", "0"}], 
                 "}"}], "]"}], ",", " ", 
               RowBox[{"alpha", "[", 
                RowBox[{"{", 
                 RowBox[{"blankNum", ",", " ", "j", ",", " ", 
                  RowBox[{"k", " ", "+", " ", "wordLen"}]}], "}"}], "]"}]}], 
              "]"}], ",", "\n", "      ", 
             RowBox[{"{", 
              RowBox[{"j", ",", " ", "1", ",", " ", "gridSize"}], "}"}], ",", 
             " ", "\n", "      ", 
             RowBox[{"{", 
              RowBox[{"k", ",", " ", "1", ",", " ", 
               RowBox[{"gridSize", " ", "-", " ", "wordLen"}]}], "}"}]}], 
            "\n", "      ", "]"}]}]}], "]"}], ";", "\n", "   ", "\n", "   ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"letterConstraints", ",", " ", 
          RowBox[{"Flatten", "@", 
           RowBox[{"Table", "[", "\n", "      ", 
            RowBox[{
             RowBox[{"Implies", "[", 
              RowBox[{
               RowBox[{"wp", "[", 
                RowBox[{"{", 
                 RowBox[{"i", ",", " ", "j", ",", " ", "k", ",", " ", "1"}], 
                 "}"}], "]"}], ",", " ", 
               RowBox[{"alpha", "[", 
                RowBox[{"{", 
                 RowBox[{"blankNum", ",", " ", 
                  RowBox[{"j", " ", "+", " ", "wordLen"}], ",", " ", "k"}], 
                 "}"}], "]"}]}], "]"}], ",", "\n", "      ", 
             RowBox[{"{", 
              RowBox[{"j", ",", " ", "1", ",", " ", 
               RowBox[{"gridSize", " ", "-", " ", "wordLen"}]}], "}"}], ",", 
             " ", "\n", "      ", 
             RowBox[{"{", 
              RowBox[{"k", ",", " ", "1", ",", " ", "gridSize"}], "}"}]}], 
            "\n", "      ", "]"}]}]}], "]"}]}], ",", "\n", "   ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", "numWords"}], "}"}]}], "\n", 
      "   ", "]"}], ";", "\n", "  ", "\n", "  ", 
     RowBox[{"letterConstraints", " ", "=", " ", 
      RowBox[{"And", " ", "@@", " ", 
       RowBox[{"Flatten", "@", "letterConstraints"}]}]}], ";", "\n", "  ", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"satConstraints", ",", " ", "letterConstraints"}], "]"}], ";", 
     "\n", "  ", "\n", "  ", 
     RowBox[{"horizontalConstraints", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Not", "@", "#"}], " ", "||", " ", 
           RowBox[{"Not", "@", "#"}]}], "}"}], " ", "&"}], " ", "/@", " ", 
        RowBox[{"Select", "[", "\n", "      ", 
         RowBox[{
          RowBox[{"Flatten", "[", "\n", "       ", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"wp", "[", 
               RowBox[{"{", 
                RowBox[{"x", ",", " ", "i", ",", " ", "j", ",", " ", "0"}], 
                "}"}], "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"x", ",", " ", "1", ",", " ", "numWords"}], "}"}], ",",
               " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "1", ",", " ", "gridSize"}], "}"}], ",",
               " ", 
              RowBox[{"{", 
               RowBox[{
               "j", ",", "\n", "          ", "1", ",", " ", "gridSize"}], 
               "}"}]}], "]"}], ",", " ", "2"}], "]"}], ",", "\n", "       ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"StringLength", "[", 
              RowBox[{"words", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], " ", 
             "+", " ", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}], " ", "-", " ", "1"}], " ", ">", 
            " ", "\n", "        ", "gridSize"}], " ", "&"}]}], "]"}]}], " ", "//",
        " ", "Flatten"}]}], ";", "\n", "  ", "\n", "  ", 
     RowBox[{"verticalConstraints", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Not", "@", "#"}], " ", "||", " ", 
           RowBox[{"Not", "@", "#"}]}], "}"}], " ", "&"}], " ", "/@", " ", 
        RowBox[{"Select", "[", "\n", "      ", 
         RowBox[{
          RowBox[{"Flatten", "[", "\n", "       ", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"wp", "[", 
               RowBox[{"{", 
                RowBox[{"x", ",", " ", "i", ",", " ", "j", ",", " ", "1"}], 
                "}"}], "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"x", ",", " ", "1", ",", " ", "numWords"}], "}"}], ",",
               " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "1", ",", " ", "gridSize"}], "}"}], ",",
               " ", 
              RowBox[{"{", 
               RowBox[{
               "j", ",", "\n", "          ", "1", ",", " ", "gridSize"}], 
               "}"}]}], "]"}], ",", " ", "2"}], "]"}], ",", "\n", "       ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"StringLength", "[", 
              RowBox[{"words", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], " ", 
             "+", " ", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", "-", " ", "1"}], " ", ">", 
            " ", "\n", "        ", "gridSize"}], " ", "&"}]}], "]"}]}], " ", "//",
        " ", "Flatten"}]}], ";", "\n", "  ", "\n", "  ", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"satConstraints", ",", " ", 
       RowBox[{"And", " ", "@@", " ", "horizontalConstraints"}]}], "]"}], ";",
      "\n", "  ", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"satConstraints", ",", " ", 
       RowBox[{"And", " ", "@@", " ", "verticalConstraints"}]}], "]"}], ";", 
     "\n", "  ", "\n", "  ", 
     RowBox[{"startConstraints", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "  ", "\n", "  ", 
     RowBox[{"Table", "[", "\n", "   ", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"y", " ", "-", " ", "1"}], " ", ">=", " ", "1"}], ",", "\n",
          "    ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"y", " ", "+", " ", "1"}], " ", "<=", " ", "gridSize"}], 
           ",", "\n", "     ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"startConstraints", ",", " ", "\n", "      ", 
             RowBox[{"BooleanMinimize", "@", "\n", "       ", 
              RowBox[{"Implies", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"alpha", "[", 
                   RowBox[{"{", 
                    RowBox[{"blankNum", ",", " ", "x", ",", " ", 
                    RowBox[{"y", " ", "-", " ", "1"}]}], "}"}], "]"}], " ", 
                  "&&", " ", "\n", "          ", 
                  RowBox[{"Not", "@", 
                   RowBox[{"alpha", "[", 
                    RowBox[{"{", 
                    RowBox[{"blankNum", ",", " ", "x", ",", " ", "y"}], "}"}],
                     "]"}]}], " ", "&&", " ", "\n", "          ", 
                  RowBox[{"Not", "@", 
                   RowBox[{"alpha", "[", 
                    RowBox[{"{", 
                    RowBox[{"blankNum", ",", " ", "x", ",", " ", 
                    RowBox[{"y", " ", "+", " ", "1"}]}], "}"}], "]"}]}]}], 
                 ")"}], ",", " ", "\n", "        ", 
                RowBox[{"Or", " ", "@@", " ", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"wp", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "i", ",", " ", "x", ",", " ", "y", ",", " ", "0"}], "}"}],
                     "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", " ", "1", ",", " ", "numWords"}], 
                    "}"}]}], "]"}]}]}], "]"}]}]}], "]"}], " ", ",", "\n", 
           "     ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"startConstraints", ",", " ", "\n", "      ", 
             RowBox[{"BooleanMinimize", "@", "\n", "       ", 
              RowBox[{"Implies", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"alpha", "[", 
                   RowBox[{"{", 
                    RowBox[{"blankNum", ",", " ", "x", ",", " ", 
                    RowBox[{"y", " ", "-", " ", "1"}]}], "}"}], "]"}], " ", "&&",
                   " ", "\n", "          ", 
                  RowBox[{"Not", "@", 
                   RowBox[{"alpha", "[", 
                    RowBox[{"{", 
                    RowBox[{"blankNum", ",", " ", "x", ",", " ", "y"}], "}"}],
                     "]"}]}]}], ")"}], ",", " ", "\n", "        ", 
                RowBox[{"Or", " ", "@@", " ", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"wp", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "i", ",", " ", "x", ",", " ", "y", ",", " ", "0"}], "}"}],
                     "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", " ", "1", ",", " ", "numWords"}], 
                    "}"}]}], "]"}]}]}], "]"}]}]}], "]"}]}], " ", "\n", 
          "      ", "]"}], ",", "\n", "    ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"startConstraints", ",", " ", "\n", "     ", 
           RowBox[{"BooleanMinimize", "@", "\n", "      ", 
            RowBox[{"Implies", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Not", "@", 
                 RowBox[{"alpha", "[", 
                  RowBox[{"{", 
                   RowBox[{"blankNum", ",", " ", "x", ",", " ", "y"}], "}"}], 
                  "]"}]}], " ", "&&", " ", "\n", "         ", 
                RowBox[{"Not", "@", 
                 RowBox[{"alpha", "[", 
                  RowBox[{"{", 
                   RowBox[{"blankNum", ",", " ", "x", ",", " ", 
                    RowBox[{"y", " ", "+", " ", "1"}]}], "}"}], "]"}]}]}], 
               ")"}], ",", " ", "\n", "       ", 
              RowBox[{"Or", " ", "@@", " ", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"wp", "[", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", " ", "x", ",", " ", "y", ",", " ", "0"}],
                    "}"}], "]"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", " ", "1", ",", " ", "numWords"}], "}"}]}],
                 "]"}]}]}], "]"}]}]}], "]"}]}], "\n", "    ", "]"}], ",", 
       "\n", "   ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "1", ",", " ", "gridSize"}], "}"}], ",", "\n", 
       "   ", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "1", ",", " ", "gridSize"}], "}"}]}], "\n", 
      "   ", "]"}], ";", "\n", "  ", "\n", "  ", 
     RowBox[{"Table", "[", "\n", "   ", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", " ", "-", " ", "1"}], " ", ">=", " ", "1"}], ",", "\n",
          "    ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"x", " ", "+", " ", "1"}], " ", "<=", " ", "gridSize"}], 
           ",", "\n", "     ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"startConstraints", ",", " ", "\n", "      ", 
             RowBox[{"BooleanMinimize", "@", "\n", "       ", 
              RowBox[{"Implies", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"alpha", "[", 
                   RowBox[{"{", 
                    RowBox[{"blankNum", ",", " ", 
                    RowBox[{"x", " ", "-", " ", "1"}], ",", " ", "y"}], "}"}],
                    "]"}], " ", "&&", " ", "\n", "          ", 
                  RowBox[{"Not", "@", 
                   RowBox[{"alpha", "[", 
                    RowBox[{"{", 
                    RowBox[{"blankNum", ",", " ", "x", ",", " ", "y"}], "}"}],
                     "]"}]}], " ", "&&", " ", "\n", "          ", 
                  RowBox[{"Not", "@", 
                   RowBox[{"alpha", "[", 
                    RowBox[{"{", 
                    RowBox[{"blankNum", ",", " ", 
                    RowBox[{"x", " ", "+", " ", "1"}], ",", " ", "y"}], "}"}],
                     "]"}]}]}], ")"}], ",", " ", "\n", "        ", 
                RowBox[{"Or", " ", "@@", " ", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"wp", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "i", ",", " ", "x", ",", " ", "y", ",", " ", "1"}], "}"}],
                     "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", " ", "1", ",", " ", "numWords"}], 
                    "}"}]}], "]"}]}]}], "]"}]}]}], "]"}], ",", "\n", "     ", 
           
           RowBox[{"AppendTo", "[", 
            RowBox[{"startConstraints", ",", " ", "\n", "      ", 
             RowBox[{"BooleanMinimize", "@", "\n", "       ", 
              RowBox[{"Implies", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"alpha", "[", 
                   RowBox[{"{", 
                    RowBox[{"blankNum", ",", " ", 
                    RowBox[{"x", " ", "-", " ", "1"}], ",", " ", "y"}], "}"}],
                    "]"}], " ", "&&", " ", "\n", "          ", 
                  RowBox[{"Not", "@", 
                   RowBox[{"alpha", "[", 
                    RowBox[{"{", 
                    RowBox[{"blankNum", ",", " ", "x", ",", " ", "y"}], "}"}],
                     "]"}]}]}], ")"}], ",", " ", "\n", "        ", 
                RowBox[{"Or", " ", "@@", " ", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"wp", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "i", ",", " ", "x", ",", " ", "y", ",", " ", "1"}], "}"}],
                     "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", " ", "1", ",", " ", "numWords"}], 
                    "}"}]}], "]"}]}]}], "]"}]}]}], "]"}]}], "\n", "     ", 
          "]"}], ",", "\n", "    ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"startConstraints", ",", " ", "\n", "     ", 
           RowBox[{"BooleanMinimize", "@", "\n", "      ", 
            RowBox[{"Implies", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Not", "@", 
                 RowBox[{"alpha", "[", 
                  RowBox[{"{", 
                   RowBox[{"blankNum", ",", " ", "x", ",", " ", "y"}], "}"}], 
                  "]"}]}], " ", "&&", " ", "\n", "         ", 
                RowBox[{"Not", "@", 
                 RowBox[{"alpha", "[", 
                  RowBox[{"{", 
                   RowBox[{"blankNum", ",", " ", 
                    RowBox[{"x", " ", "+", " ", "1"}], ",", " ", "y"}], "}"}],
                   "]"}]}]}], ")"}], ",", " ", "\n", "       ", 
              RowBox[{"Or", " ", "@@", " ", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"wp", "[", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", " ", "x", ",", " ", "y", ",", " ", "1"}],
                    "}"}], "]"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", " ", "1", ",", " ", "numWords"}], "}"}]}],
                 "]"}]}]}], "]"}]}]}], "]"}]}], "\n", "    ", "]"}], ",", 
       "\n", "   ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "1", ",", " ", "gridSize"}], "}"}], ",", "\n", 
       "   ", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "1", ",", " ", "gridSize"}], "}"}]}], "\n", 
      "   ", "]"}], ";", "\n", "  ", "\n", "  ", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"satConstraints", ",", " ", 
       RowBox[{"And", " ", "@@", " ", 
        RowBox[{"Flatten", "@", "startConstraints"}]}]}], "]"}], ";", "\n", 
     "  ", "\n", "  ", 
     RowBox[{"satConstraints", " ", "=", " ", 
      RowBox[{"RandomSample", "[", "satConstraints", "]"}]}], ";", "\n", "  ", 
     RowBox[{"satConstraints", " ", "=", " ", 
      RowBox[{"And", " ", "@@", " ", 
       RowBox[{"Flatten", "@", "satConstraints"}]}]}], ";", "\n", "  ", 
     RowBox[{"res", " ", "=", " ", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"satVariables", ",", " ", "\n", "     ", 
         RowBox[{
          RowBox[{"SatisfiabilityInstances", "[", 
           RowBox[{
           "satConstraints", ",", " ", "satVariables", ",", " ", "\n", 
            "       ", 
            RowBox[{"Method", " ", "->", " ", "\"\<SAT\>\""}]}], "]"}], " ", "//",
           " ", "Flatten"}]}], "}"}], "]"}]}], ";", "\n", "  ", 
     RowBox[{"placementScheme", " ", "=", " ", "\n", "   ", 
      RowBox[{"Select", "[", 
       RowBox[{"res", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Head", "@", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], " ", "===", " ", "wp"}], " ", "&&",
           " ", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], " ", "===", " ", "True"}]}], " ", 
         "&"}]}], "]"}]}], ";", "\n", "  ", "\n", "  ", 
     RowBox[{"crossword", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{"\"\< \>\"", ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "gridSize"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", "gridSize"}], "}"}]}], "]"}]}], ";", "\n", 
     "  ", 
     RowBox[{"emptyCrossword", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{"\"\< \>\"", ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "gridSize"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", "gridSize"}], "}"}]}], "]"}]}], ";", "\n", 
     "  ", 
     RowBox[{"Table", "[", "\n", "   ", 
      RowBox[{
       RowBox[{
        RowBox[{"whichWord", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"placementScheme", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "   ", 
        RowBox[{"xLoc", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"placementScheme", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", "   ", 
        RowBox[{"yLoc", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"placementScheme", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\n", "   ", 
        RowBox[{"orient", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"placementScheme", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ";", "\n", "   ", "\n", "   ", 
        RowBox[{"colour", " ", "=", " ", 
         RowBox[{"RandomColor", "[", "]"}]}], ";", "\n", "   ", 
        RowBox[{"fS", " ", "=", " ", "0.85"}], ";", "\n", "   ", 
        RowBox[{"Table", "[", "\n", "    ", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"orient", " ", "==", " ", "0"}], ",", "\n", "     ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"emptyCrossword", "[", 
                RowBox[{"[", "xLoc", "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"yLoc", " ", "+", " ", "j", " ", "-", " ", "1"}], 
                "]"}], "]"}], " ", "=", " ", 
              RowBox[{"InputField", "[", 
               RowBox[{
               "\"\< \>\"", ",", " ", "String", ",", "\n", "       ", 
                RowBox[{"FieldSize", " ", "->", " ", 
                 RowBox[{"{", 
                  RowBox[{"fS", ",", " ", "fS"}], "}"}]}], ",", " ", "\n", 
                "       ", 
                RowBox[{"BaseStyle", " ", "->", " ", 
                 RowBox[{"{", 
                  RowBox[{
                  "colour", ",", " ", "Bold", ",", " ", "Larger", ",", " ", 
                   RowBox[{"FontSize", " ", "->", " ", "25"}]}], "}"}]}], ",",
                 " ", "\n", "       ", 
                RowBox[{"ImageMargins", " ", "->", " ", "0"}]}], "]"}]}], ";",
              "\n", "     ", "\n", "     ", 
             RowBox[{
              RowBox[{
               RowBox[{"crossword", "[", 
                RowBox[{"[", "xLoc", "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"yLoc", " ", "+", " ", "j", " ", "-", " ", "1"}], 
                "]"}], "]"}], " ", "=", " ", "\n", "      ", 
              RowBox[{"InputField", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"StringPart", "[", 
                  RowBox[{
                   RowBox[{"words", "[", 
                    RowBox[{"[", "whichWord", "]"}], "]"}], ",", " ", "j"}], 
                  "]"}], " ", "//", " ", "ToUpperCase"}], ",", " ", "\n", 
                "       ", "String", ",", "\n", "       ", 
                RowBox[{"FieldSize", " ", "->", " ", 
                 RowBox[{"{", 
                  RowBox[{"fS", ",", " ", "fS"}], "}"}]}], ",", " ", "\n", 
                "       ", 
                RowBox[{"BaseStyle", " ", "->", " ", 
                 RowBox[{"{", 
                  RowBox[{
                  "colour", ",", " ", "Bold", ",", " ", "Larger", ",", " ", 
                   RowBox[{"FontSize", " ", "->", " ", "25"}]}], "}"}]}], ",",
                 " ", "\n", "       ", 
                RowBox[{"ImageMargins", " ", "->", " ", "0"}]}], "]"}]}]}], 
            ",", "\n", "     ", "\n", "     ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"emptyCrossword", "[", 
                RowBox[{"[", 
                 RowBox[{"xLoc", " ", "+", " ", "j", " ", "-", " ", "1"}], 
                 "]"}], "]"}], "[", 
               RowBox[{"[", "yLoc", "]"}], "]"}], " ", "=", " ", "\n", 
              "      ", 
              RowBox[{"InputField", "[", 
               RowBox[{
               "\"\< \>\"", ",", " ", "String", ",", " ", "\n", "       ", 
                RowBox[{"FieldSize", " ", "->", " ", 
                 RowBox[{"{", 
                  RowBox[{"fS", ",", " ", "fS"}], "}"}]}], ",", " ", "\n", 
                "       ", 
                RowBox[{"BaseStyle", " ", "->", " ", 
                 RowBox[{"{", 
                  RowBox[{
                  "colour", ",", " ", "Bold", ",", " ", "Larger", ",", " ", 
                   RowBox[{"FontSize", " ", "->", " ", "25"}]}], "}"}]}], ",",
                 " ", "\n", "       ", 
                RowBox[{"ImageMargins", " ", "->", " ", "0"}]}], "]"}]}], ";",
              "\n", "     ", "\n", "     ", 
             RowBox[{
              RowBox[{
               RowBox[{"crossword", "[", 
                RowBox[{"[", 
                 RowBox[{"xLoc", " ", "+", " ", "j", " ", "-", " ", "1"}], 
                 "]"}], "]"}], "[", 
               RowBox[{"[", "yLoc", "]"}], "]"}], " ", "=", " ", "\n", 
              "      ", 
              RowBox[{"InputField", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"StringPart", "[", 
                  RowBox[{
                   RowBox[{"words", "[", 
                    RowBox[{"[", "whichWord", "]"}], "]"}], ",", " ", "j"}], 
                  "]"}], " ", "//", " ", "ToUpperCase"}], ",", " ", "\n", 
                "       ", "String", ",", " ", "\n", "       ", 
                RowBox[{"FieldSize", " ", "->", " ", 
                 RowBox[{"{", 
                  RowBox[{"fS", ",", " ", "fS"}], "}"}]}], ",", " ", "\n", 
                "       ", 
                RowBox[{"BaseStyle", " ", "->", " ", 
                 RowBox[{"{", 
                  RowBox[{
                  "colour", ",", " ", "Bold", ",", " ", "Larger", ",", " ", 
                   RowBox[{"FontSize", " ", "->", " ", "25"}]}], "}"}]}], ",",
                 " ", "\n", "       ", 
                RowBox[{"ImageMargins", " ", "->", " ", "0"}]}], "]"}]}]}], 
            ","}], "\n", "     ", "]"}], ",", "\n", "    ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", 
            RowBox[{"StringLength", "@", 
             RowBox[{"words", "[", 
              RowBox[{"[", "whichWord", "]"}], "]"}]}]}], "}"}]}], "]"}]}], 
       ",", "\n", "   ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", 
         RowBox[{"Length", "@", "placementScheme"}]}], "}"}]}], "]"}], ";", 
     "\n", "  ", "\n", "  ", 
     RowBox[{"edges", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "  ", "\n", "  ", 
     RowBox[{"Table", "[", "\n", "   ", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", " ", 
          RowBox[{"SameQ", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"crossword", "[", 
              RowBox[{"[", "x", "]"}], "]"}], "[", 
             RowBox[{"[", "y", "]"}], "]"}], ",", " ", "\"\< \>\""}], "]"}]}],
          ",", "\n", "    ", 
         RowBox[{"Table", "[", "\n", "     ", 
          RowBox[{
           RowBox[{
            RowBox[{"nx", " ", "=", " ", 
             RowBox[{"x", " ", "+", " ", 
              RowBox[{"dir", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\n", "     ", 
            RowBox[{"ny", " ", "=", " ", 
             RowBox[{"y", " ", "+", " ", 
              RowBox[{"dir", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\n", "     ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"nx", " ", ">=", " ", "1"}], " ", "&&", " ", 
               RowBox[{"nx", " ", "<=", " ", "gridSize"}], " ", "&&", " ", 
               RowBox[{"ny", " ", ">=", " ", "1"}], " ", "&&", " ", 
               RowBox[{"ny", " ", "<=", " ", "gridSize"}]}], ",", "\n", 
              "      ", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", " ", 
                 RowBox[{"SameQ", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"crossword", "[", 
                    RowBox[{"[", "nx", "]"}], "]"}], "[", 
                    RowBox[{"[", "ny", "]"}], "]"}], ",", " ", "\"\< \>\""}], 
                  "]"}]}], ",", " ", "\n", "       ", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"edges", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", "y"}], "}"}], " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{"nx", ",", " ", "ny"}], "}"}]}], "}"}]}], "]"}]}],
                "]"}]}], "]"}]}], ",", "\n", "     ", 
           RowBox[{"{", 
            RowBox[{"dir", ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", " ", "0"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}]}], "\n", 
          "     ", "]"}]}], "\n", "    ", "]"}], ",", "\n", "   ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "1", ",", " ", "gridSize"}], "}"}], ",", "\n", 
       "   ", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "1", ",", " ", "gridSize"}], "}"}]}], "\n", 
      "   ", "]"}], ";", "\n", "  ", "\n", "  ", 
     RowBox[{"g", " ", "=", " ", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"edges", ",", " ", "1"}], "]"}], ",", " ", 
        RowBox[{"DirectedEdges", " ", "->", " ", "False"}]}], "]"}]}], ";", 
     "\n", "  ", 
     RowBox[{"quality", " ", "=", " ", 
      RowBox[{"Length", "[", 
       RowBox[{"ConnectedComponents", "[", "g", "]"}], "]"}]}], ";", "\n", 
     "  ", "\n", "  ", 
     RowBox[{"display", " ", "=", " ", 
      RowBox[{"Grid", "[", 
       RowBox[{"crossword", ",", " ", 
        RowBox[{"Frame", " ", "->", " ", "All"}], ",", " ", 
        RowBox[{"Background", " ", "->", " ", "Black"}]}], "]"}]}], ";", "\n",
      "  ", 
     RowBox[{"emptyDisplay", " ", "=", " ", "\n", "   ", 
      RowBox[{"Grid", "[", 
       RowBox[{"emptyCrossword", ",", " ", 
        RowBox[{"Frame", " ", "->", " ", "All"}], ",", " ", 
        RowBox[{"Background", " ", "->", " ", "Black"}]}], "]"}]}], ";", "\n",
      "  ", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"quality", ",", " ", "display", ",", " ", "emptyDisplay"}], 
       "}"}], "]"}], ";"}]}], "\n", "  ", "]"}]}]], "Code",
 TaggingRules->{},
 CellChangeTimes->{{3.867334538089613*^9, 3.867334566129755*^9}},
 CellLabel->"In[1]:=",
 CellID->1830589319,ExpressionUUID->"c265e064-3707-4064-a638-8f4c34158a37"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Display", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.866954799027069*^9, 3.86695480418085*^9}},
 CellID->1443047120,ExpressionUUID->"8f361cf9-afd6-4682-9473-168bd9428244"],

Cell[TextData[{
 "A crossword of size ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["gridSize", "TI"], "\[Cross]", 
         StyleBox["gridSize", "TI"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\it{gridSize} \\times \\it{gridSize}", "state" -> "Boxes"|>,
    
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d894f4e8-e3b2-4284-91b1-05782e2c08c9"],
 " will be created:"
}], "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.867334883361747*^9, 3.867334891583611*^9}, {
  3.867334934262154*^9, 3.867334934482532*^9}, {3.86740237631341*^9, 
  3.867402405403212*^9}},
 CellID->1228083603,ExpressionUUID->"bed52ecb-0f14-41b8-a9d9-cb76128c31da"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gridSize", " ", "=", " ", "10"}], ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.866954168445088*^9, 3.866954173868236*^9}, {
   3.866954217344331*^9, 3.866954233737823*^9}, {3.8669542637818193`*^9, 
   3.866954432473401*^9}, {3.866954521434477*^9, 3.866954578899372*^9}, {
   3.866954633013961*^9, 3.8669546507868547`*^9}, {3.86695469650495*^9, 
   3.866954733998959*^9}, {3.866955656610662*^9, 3.8669556567163143`*^9}, {
   3.866955717095261*^9, 3.866955717300499*^9}, {3.866956199031342*^9, 
   3.866956228195388*^9}, {3.866956261643965*^9, 3.866956264516694*^9}, {
   3.8669565199546957`*^9, 3.866956520357483*^9}, {3.866957719450829*^9, 
   3.866957719745315*^9}, {3.866957761805725*^9, 3.866957762082852*^9}, {
   3.8669578095284023`*^9, 3.8669578385195417`*^9}, {3.8669585972049093`*^9, 
   3.866958671727141*^9}, {3.866958921137422*^9, 3.866958921331512*^9}, {
   3.866958955039008*^9, 3.866958955238679*^9}, {3.866965071419757*^9, 
   3.8669650756861753`*^9}, {3.8669666435036507`*^9, 3.866966648005509*^9}, {
   3.866967160994853*^9, 3.8669671615638037`*^9}, {3.8669673032196836`*^9, 
   3.866967337183861*^9}, {3.8669673825532618`*^9, 3.86696738367627*^9}, {
   3.866968228564864*^9, 3.866968229815795*^9}, {3.866971874958178*^9, 
   3.8669719222758493`*^9}, {3.866971968954213*^9, 3.8669719713021307`*^9}, {
   3.866972139204714*^9, 3.866972139446409*^9}, {3.8669723969019003`*^9, 
   3.8669724146875563`*^9}, {3.866972928622897*^9, 3.8669729640351*^9}, {
   3.866973024419726*^9, 3.866973024533078*^9}, {3.866973103087612*^9, 
   3.866973103865991*^9}, 3.866973688965967*^9, {3.8669762516313887`*^9, 
   3.866976251717979*^9}, {3.866977511508963*^9, 3.866977511587688*^9}, {
   3.866987051094143*^9, 3.866987058553273*^9}, {3.8669909525483017`*^9, 
   3.866990996640258*^9}, {3.866991042123577*^9, 3.866991063042597*^9}, {
   3.8669911055085297`*^9, 3.8669911596112833`*^9}, {3.866991208188504*^9, 
   3.866991249104196*^9}, {3.866991305050581*^9, 3.866991305202161*^9}, {
   3.8669913693064137`*^9, 3.8669913694034977`*^9}, {3.866991425198535*^9, 
   3.8669914253406143`*^9}, {3.866991580568719*^9, 3.866991580745372*^9}, {
   3.8670237724858007`*^9, 3.8670237821028347`*^9}, {3.867024511550139*^9, 
   3.867024534538938*^9}, {3.867025277184732*^9, 3.8670253100412693`*^9}, {
   3.867030356327443*^9, 3.8670303856834717`*^9}, 3.867030577194066*^9, {
   3.867030723869259*^9, 3.867030723967967*^9}, {3.867032058565127*^9, 
   3.8670321199556503`*^9}, {3.867032257513031*^9, 3.867032265136133*^9}, {
   3.867032789594357*^9, 3.867032797063775*^9}, {3.867033666975021*^9, 
   3.867033667588751*^9}, {3.867034920792223*^9, 3.867034921302785*^9}, {
   3.867037385540236*^9, 3.867037392823577*^9}, {3.8670374252200212`*^9, 
   3.8670374420542803`*^9}, {3.867037958609433*^9, 3.86703795878959*^9}, {
   3.867038113948159*^9, 3.8670382271949053`*^9}, {3.867038329217269*^9, 
   3.867038329272482*^9}, {3.86703835997586*^9, 3.867038360096274*^9}, {
   3.867038471475092*^9, 3.867038471685234*^9}, {3.867038533424182*^9, 
   3.8670385351242123`*^9}, {3.8670390528371468`*^9, 3.867039059437698*^9}, {
   3.8670391470492*^9, 3.8670391742279453`*^9}, {3.8670393146755667`*^9, 
   3.8670393159474688`*^9}, {3.867041074424469*^9, 3.867041074568779*^9}, {
   3.867046870085772*^9, 3.8670468960642776`*^9}, {3.867047032776165*^9, 
   3.8670470330602217`*^9}, {3.867047151590947*^9, 3.8670471518242188`*^9}, {
   3.8670479260107594`*^9, 3.867047996914084*^9}, {3.8670570827734823`*^9, 
   3.867057097272929*^9}, {3.867057154902673*^9, 3.8670571634837427`*^9}, {
   3.8670572047433567`*^9, 3.867057204824996*^9}, {3.867057659068118*^9, 
   3.8670576600586576`*^9}, {3.867058112313298*^9, 3.867058112453315*^9}, {
   3.867058204678399*^9, 3.867058204918087*^9}, {3.867058266082139*^9, 
   3.867058266219152*^9}, {3.867058329849292*^9, 3.867058330314624*^9}, {
   3.8670602935338573`*^9, 3.8670602937055187`*^9}, {3.86706106872906*^9, 
   3.867061085099979*^9}, {3.867061146203134*^9, 3.8670611463677683`*^9}, {
   3.867061220157672*^9, 3.86706122033939*^9}, {3.867061258840912*^9, 
   3.8670612589766893`*^9}, {3.867061776740861*^9, 3.867061780797752*^9}, {
   3.867061813849971*^9, 3.8670618154860353`*^9}, {3.8670744842305183`*^9, 
   3.867074502011526*^9}, {3.8670745394260902`*^9, 3.867074549319358*^9}, {
   3.867074589384392*^9, 3.867074589696763*^9}, {3.8670747144572973`*^9, 
   3.86707471527094*^9}, {3.867074960898731*^9, 3.867074961045993*^9}, {
   3.867075069164009*^9, 3.867075069353979*^9}, {3.867075200315721*^9, 
   3.867075200394485*^9}, {3.867114442057561*^9, 3.8671144422170277`*^9}, {
   3.86711449231216*^9, 3.867114492572485*^9}, {3.86711458799105*^9, 
   3.867114588987911*^9}, {3.8671151878785458`*^9, 3.867115188416189*^9}, {
   3.867115469110662*^9, 3.86711546973658*^9}, {3.867115646470153*^9, 
   3.86711564885737*^9}, {3.8671158085435133`*^9, 3.8671158086494007`*^9}, {
   3.867144833409111*^9, 3.867144834496922*^9}, {3.86732031311937*^9, 
   3.867320314762938*^9}, {3.867335112300475*^9, 3.867335115808979*^9}, {
   3.867335205966607*^9, 3.867335206433382*^9}, {3.867402839954204*^9, 
   3.86740284047733*^9}, {3.867402980084869*^9, 3.867402980177061*^9}, {
   3.867403193954008*^9, 3.8674031941206903`*^9}, {3.8674032594640703`*^9, 
   3.867403259694628*^9}, {3.8674033573016253`*^9, 3.867403370761322*^9}},
 CellLabel->"In[91]:=",
 CellID->1760120269,ExpressionUUID->"a599ba97-c5b8-4d76-af5e-096ea0f2ee07"],

Cell["\<\
Enter a list of words or randomly generate one. View the sum of sizes of \
words compared to the number of cells in the grid:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.8673349174171267`*^9, 3.8673349640387278`*^9}},
 CellID->828361204,ExpressionUUID->"e820e9e8-7ad9-4540-b6d3-ac3f6f942694"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"words", " ", "=", " ", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"WordList", "[", "]"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"StringLength", "@", "#"}], " ", ">", " ", "2"}], " ", "&&", 
        " ", 
        RowBox[{
         RowBox[{"StringLength", "@", "#"}], " ", "<=", " ", "6"}]}], " ", 
       "&"}]}], "]"}], ",", " ", "11"}], "]"}]}], "\n", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"gridSize", "^", "2"}], ",", " ", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringLength", "@", "#"}], " ", "&"}], " ", "/@", " ", 
     "words"}], "]"}]}], "}"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.866954168445088*^9, 3.866954173868236*^9}, {
   3.866954217344331*^9, 3.866954233737823*^9}, {3.8669542637818193`*^9, 
   3.866954432473401*^9}, {3.866954521434477*^9, 3.866954578899372*^9}, {
   3.866954633013961*^9, 3.8669546507868547`*^9}, {3.86695469650495*^9, 
   3.866954733998959*^9}, {3.866955656610662*^9, 3.8669556567163143`*^9}, {
   3.866955717095261*^9, 3.866955717300499*^9}, {3.866956199031342*^9, 
   3.866956228195388*^9}, {3.866956261643965*^9, 3.866956264516694*^9}, {
   3.8669565199546957`*^9, 3.866956520357483*^9}, {3.866957719450829*^9, 
   3.866957719745315*^9}, {3.866957761805725*^9, 3.866957762082852*^9}, {
   3.8669578095284023`*^9, 3.8669578385195417`*^9}, {3.8669585972049093`*^9, 
   3.866958671727141*^9}, {3.866958921137422*^9, 3.866958921331512*^9}, {
   3.866958955039008*^9, 3.866958955238679*^9}, {3.866965071419757*^9, 
   3.8669650756861753`*^9}, {3.8669666435036507`*^9, 3.866966648005509*^9}, {
   3.866967160994853*^9, 3.8669671615638037`*^9}, {3.8669673032196836`*^9, 
   3.866967337183861*^9}, {3.8669673825532618`*^9, 3.86696738367627*^9}, {
   3.866968228564864*^9, 3.866968229815795*^9}, {3.866971874958178*^9, 
   3.8669719222758493`*^9}, {3.866971968954213*^9, 3.8669719713021307`*^9}, {
   3.866972139204714*^9, 3.866972139446409*^9}, {3.8669723969019003`*^9, 
   3.8669724146875563`*^9}, {3.866972928622897*^9, 3.8669729640351*^9}, {
   3.866973024419726*^9, 3.866973024533078*^9}, {3.866973103087612*^9, 
   3.866973103865991*^9}, 3.866973688965967*^9, {3.8669762516313887`*^9, 
   3.866976251717979*^9}, {3.866977511508963*^9, 3.866977511587688*^9}, {
   3.866987051094143*^9, 3.866987058553273*^9}, {3.8669909525483017`*^9, 
   3.866990996640258*^9}, {3.866991042123577*^9, 3.866991063042597*^9}, {
   3.8669911055085297`*^9, 3.8669911596112833`*^9}, {3.866991208188504*^9, 
   3.866991249104196*^9}, {3.866991305050581*^9, 3.866991305202161*^9}, {
   3.8669913693064137`*^9, 3.8669913694034977`*^9}, {3.866991425198535*^9, 
   3.8669914253406143`*^9}, {3.866991580568719*^9, 3.866991580745372*^9}, {
   3.8670237724858007`*^9, 3.8670237821028347`*^9}, {3.867024511550139*^9, 
   3.867024534538938*^9}, {3.867025277184732*^9, 3.8670253100412693`*^9}, {
   3.867030356327443*^9, 3.8670303856834717`*^9}, 3.867030577194066*^9, {
   3.867030723869259*^9, 3.867030723967967*^9}, {3.867032058565127*^9, 
   3.8670321199556503`*^9}, {3.867032257513031*^9, 3.867032265136133*^9}, {
   3.867032789594357*^9, 3.867032797063775*^9}, {3.867033666975021*^9, 
   3.867033667588751*^9}, {3.867034920792223*^9, 3.867034921302785*^9}, {
   3.867037385540236*^9, 3.867037392823577*^9}, {3.8670374252200212`*^9, 
   3.8670374420542803`*^9}, {3.867037958609433*^9, 3.86703795878959*^9}, {
   3.867038113948159*^9, 3.8670382271949053`*^9}, {3.867038329217269*^9, 
   3.867038329272482*^9}, {3.86703835997586*^9, 3.867038360096274*^9}, {
   3.867038471475092*^9, 3.867038471685234*^9}, {3.867038533424182*^9, 
   3.8670385351242123`*^9}, {3.8670390528371468`*^9, 3.867039059437698*^9}, {
   3.8670391470492*^9, 3.8670391742279453`*^9}, 3.8670393146755667`*^9, {
   3.867046872308812*^9, 3.8670468732076283`*^9}, {3.8670474116836653`*^9, 
   3.867047415627201*^9}, {3.86704744647106*^9, 3.867047610410265*^9}, {
   3.867047647458865*^9, 3.867047725612743*^9}, {3.867047869042547*^9, 
   3.8670479169820213`*^9}, {3.86705693760351*^9, 3.867056938432365*^9}, {
   3.867056984853735*^9, 3.867056985147768*^9}, {3.867057038097066*^9, 
   3.867057142678594*^9}, {3.867061773660565*^9, 3.8670617950591*^9}, {
   3.8670744143987923`*^9, 3.867074469371077*^9}, {3.867075121237*^9, 
   3.867075124209203*^9}, {3.867114409842639*^9, 3.867114418201*^9}, {
   3.867115191740934*^9, 3.8671152251335983`*^9}, {3.867115337734541*^9, 
   3.867115359129252*^9}, {3.8671154047665243`*^9, 3.867115405178684*^9}, {
   3.867115511709985*^9, 3.867115516906897*^9}, {3.867115652528057*^9, 
   3.867115662595899*^9}, {3.867115814474815*^9, 3.867115814990019*^9}, {
   3.86714360453126*^9, 3.867143609334193*^9}, {3.867144835876539*^9, 
   3.867144842166801*^9}, {3.867146136996162*^9, 3.867146167455127*^9}, {
   3.867244211252746*^9, 3.867244220452663*^9}, {3.867317484145926*^9, 
   3.867317484318088*^9}, {3.867318663291402*^9, 3.867318663482284*^9}, {
   3.8673187425448523`*^9, 3.867318743224115*^9}, {3.867318784299087*^9, 
   3.867318784362399*^9}, {3.867318838404663*^9, 3.8673188663112097`*^9}, {
   3.867320206219782*^9, 3.86732020651962*^9}, {3.867320318056888*^9, 
   3.867320318088088*^9}, {3.867335121252388*^9, 3.867335124590427*^9}, {
   3.8673352032563353`*^9, 3.8673352039976063`*^9}, {3.867402844984927*^9, 
   3.867402845134267*^9}, {3.8674029087424192`*^9, 3.867402909343624*^9}, {
   3.86740299871701*^9, 3.8674030189165077`*^9}, {3.867403155776114*^9, 
   3.8674031559011374`*^9}, {3.8674031978274508`*^9, 3.867403213595676*^9}, {
   3.86740326191825*^9, 3.8674032653149757`*^9}, {3.867403311639269*^9, 
   3.867403311730115*^9}},
 CellLabel->"In[86]:=",
 CellID->754123658,ExpressionUUID->"48a737f0-e833-41c2-b4fc-31c5ad66950d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"dean\"\>", ",", "\<\"occult\"\>", ",", "\<\"bold\"\>", 
   ",", "\<\"carve\"\>", ",", "\<\"inept\"\>", ",", "\<\"molar\"\>", 
   ",", "\<\"frying\"\>", ",", "\<\"nob\"\>", ",", "\<\"custom\"\>", 
   ",", "\<\"winkle\"\>", ",", "\<\"yogic\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.867402848633171*^9, 3.8674028569455214`*^9}, {
   3.8674029098172007`*^9, 3.8674029193265333`*^9}, {3.867402999288418*^9, 
   3.867403073732217*^9}, {3.8674031181712503`*^9, 3.867403123147777*^9}, {
   3.8674031563365173`*^9, 3.8674032698042297`*^9}, 3.867403312196203*^9},
 CellLabel->"Out[86]=",
 CellID->601941534,ExpressionUUID->"8b9b1ad7-1185-4001-af1a-32f03726a698"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"100", ",", "55"}], "}"}]], "Output",
 CellChangeTimes->{{3.867402848633171*^9, 3.8674028569455214`*^9}, {
   3.8674029098172007`*^9, 3.8674029193265333`*^9}, {3.867402999288418*^9, 
   3.867403073732217*^9}, {3.8674031181712503`*^9, 3.867403123147777*^9}, {
   3.8674031563365173`*^9, 3.8674032698042297`*^9}, 3.867403312302414*^9},
 CellLabel->"Out[87]=",
 CellID->35900921,ExpressionUUID->"6fb81811-ca5d-49fc-9d56-58ec3cb80ad7"]
}, Open  ]],

Cell["\<\
Generate a single crossword puzzle and calculate how much time (in seconds) \
the solver took to generate it:\
\>", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.867334975019519*^9, 3.867334990745123*^9}, {
  3.867403379691431*^9, 3.867403398910068*^9}},
 CellID->750792498,ExpressionUUID->"7d5a5809-fff4-4e89-afed-98e5d89934be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"crosswords", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"generateCrossword", "[", 
      RowBox[{"gridSize", ",", " ", "words"}], "]"}], " ", "//", " ", 
     "AbsoluteTiming"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"n", ",", " ", "1"}], "}"}]}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.867335172345084*^9, 3.867335174683132*^9}, 
   3.867402881365838*^9},
 CellLabel->"In[94]:=",
 CellID->107835412,ExpressionUUID->"1f1ce5e8-1c33-4cc2-810e-e5d4bd79cd2b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"51.767598`", ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", 
      TagBox[GridBox[{
         {
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "W"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "I"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "N"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "K"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "L"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "E"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "M"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.28581740635406083`, 0.37959060639794795`, 
                0.6086769040340942], Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.28581740635406083`, 0.37959060639794795`, 0.6086769040340942],
               Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", "\<\" \"\>"},
         {"\<\" \"\>", "\<\" \"\>", "\<\" \"\>", "\<\" \"\>", "\<\" \"\>", \
"\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "B"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.9830915847133688, 0.3877876899899586, 0.7739814920299564], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.9830915847133688, 0.3877876899899586, 0.7739814920299564], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "O"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.28581740635406083`, 0.37959060639794795`, 
                0.6086769040340942], Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.28581740635406083`, 0.37959060639794795`, 0.6086769040340942],
               Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "L"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.9830915847133688, 0.3877876899899586, 0.7739814920299564], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.9830915847133688, 0.3877876899899586, 0.7739814920299564], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "D"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.9830915847133688, 0.3877876899899586, 0.7739814920299564], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.9830915847133688, 0.3877876899899586, 0.7739814920299564], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ]},
         {
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "Y"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.1918333298181023, 0.5583446540053314, 0.803703463361152], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.1918333298181023, 0.5583446540053314, 0.803703463361152], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "O"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.1918333298181023, 0.5583446540053314, 0.803703463361152], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.1918333298181023, 0.5583446540053314, 0.803703463361152], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "G"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.1918333298181023, 0.5583446540053314, 0.803703463361152], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.1918333298181023, 0.5583446540053314, 0.803703463361152], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "I"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.1918333298181023, 0.5583446540053314, 0.803703463361152], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.1918333298181023, 0.5583446540053314, 0.803703463361152], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "C"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.1918333298181023, 0.5583446540053314, 0.803703463361152], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.1918333298181023, 0.5583446540053314, 0.803703463361152], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "L"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.28581740635406083`, 0.37959060639794795`, 
                0.6086769040340942], Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.28581740635406083`, 0.37959060639794795`, 0.6086769040340942],
               Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", "\<\" \"\>"},
         {"\<\" \"\>", "\<\" \"\>", "\<\" \"\>", "\<\" \"\>", "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "O"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.9574286797298444, 0.8421355431748194, 0.753111447365387], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.9574286797298444, 0.8421355431748194, 0.753111447365387], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "A"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.28581740635406083`, 0.37959060639794795`, 
                0.6086769040340942], Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.28581740635406083`, 0.37959060639794795`, 0.6086769040340942],
               Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", "\<\" \"\>"},
         {
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "D"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.4584729267835508, 0.6314095574630034, 0.4896680683036623], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.4584729267835508, 0.6314095574630034, 0.4896680683036623], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "F"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "C"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.03718085116433367, 0.2689109877191955, 0.28960983534844686`],
                Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.03718085116433367, 0.2689109877191955, 0.28960983534844686`], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "A"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.03718085116433367, 0.2689109877191955, 0.28960983534844686`],
                Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.03718085116433367, 0.2689109877191955, 0.28960983534844686`], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "R"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.28581740635406083`, 0.37959060639794795`, 
                0.6086769040340942], Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.28581740635406083`, 0.37959060639794795`, 0.6086769040340942],
               Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "V"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.03718085116433367, 0.2689109877191955, 0.28960983534844686`],
                Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.03718085116433367, 0.2689109877191955, 0.28960983534844686`], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "E"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.03718085116433367, 0.2689109877191955, 0.28960983534844686`],
                Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.03718085116433367, 0.2689109877191955, 0.28960983534844686`], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ]},
         {
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "E"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.4584729267835508, 0.6314095574630034, 0.4896680683036623], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.4584729267835508, 0.6314095574630034, 0.4896680683036623], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "R"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "C"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.9574286797298444, 0.8421355431748194, 0.753111447365387], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.9574286797298444, 0.8421355431748194, 0.753111447365387], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", "\<\" \"\>", "\<\" \"\>", "\<\" \"\>"},
         {
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "A"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.4584729267835508, 0.6314095574630034, 0.4896680683036623], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.4584729267835508, 0.6314095574630034, 0.4896680683036623], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "Y"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "C"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.10427648232550801`, 0.08272432641638106, 0.5574437342058849],
                Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.10427648232550801`, 0.08272432641638106, 0.5574437342058849], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "U"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.10427648232550801`, 0.08272432641638106, 0.5574437342058849],
                Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.10427648232550801`, 0.08272432641638106, 0.5574437342058849], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "S"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.10427648232550801`, 0.08272432641638106, 0.5574437342058849],
                Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.10427648232550801`, 0.08272432641638106, 0.5574437342058849], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "T"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.10427648232550801`, 0.08272432641638106, 0.5574437342058849],
                Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.10427648232550801`, 0.08272432641638106, 0.5574437342058849], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "O"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.10427648232550801`, 0.08272432641638106, 0.5574437342058849],
                Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.10427648232550801`, 0.08272432641638106, 0.5574437342058849], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "M"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.10427648232550801`, 0.08272432641638106, 0.5574437342058849],
                Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.10427648232550801`, 0.08272432641638106, 0.5574437342058849], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ]},
         {
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "N"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.4584729267835508, 0.6314095574630034, 0.4896680683036623], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.4584729267835508, 0.6314095574630034, 0.4896680683036623], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "I"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "L"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.9574286797298444, 0.8421355431748194, 0.753111447365387], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.9574286797298444, 0.8421355431748194, 0.753111447365387], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", "\<\" \"\>", "\<\" \"\>", "\<\" \"\>"},
         {"\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "I"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.17338502488909735`, 0.3323021433798874, 0.9987976943571641], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.17338502488909735`, 0.3323021433798874, 0.9987976943571641], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "N"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "E"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.17338502488909735`, 0.3323021433798874, 0.9987976943571641], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.17338502488909735`, 0.3323021433798874, 0.9987976943571641], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "P"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.17338502488909735`, 0.3323021433798874, 0.9987976943571641], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.17338502488909735`, 0.3323021433798874, 0.9987976943571641], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "T"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.17338502488909735`, 0.3323021433798874, 0.9987976943571641], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.17338502488909735`, 0.3323021433798874, 0.9987976943571641], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "N"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.2563799819331596, 0.4155001122926638, 0.27887306339815576`], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.2563799819331596, 0.4155001122926638, 0.27887306339815576`], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "O"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.2563799819331596, 0.4155001122926638, 0.27887306339815576`], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.2563799819331596, 0.4155001122926638, 0.27887306339815576`], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "B"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.2563799819331596, 0.4155001122926638, 0.27887306339815576`], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.2563799819331596, 0.4155001122926638, 0.27887306339815576`], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ]},
         {"\<\" \"\>", "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = "G"}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", "\<\" \"\>", "\<\" \"\>", "\<\" \"\>", "\<\" \
\"\>", "\<\" \"\>", "\<\" \"\>"}
        },
        AutoDelete->False,
        GridBoxBackground->{"Columns" -> {{
             GrayLevel[0]}}},
        GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], ",", 
      TagBox[GridBox[{
         {
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.09769639962008969, 0.3720561826840916, 0.3948426776633318], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.28581740635406083`, 0.37959060639794795`, 
                0.6086769040340942], Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.28581740635406083`, 0.37959060639794795`, 0.6086769040340942],
               Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", "\<\" \"\>"},
         {"\<\" \"\>", "\<\" \"\>", "\<\" \"\>", "\<\" \"\>", "\<\" \"\>", \
"\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.9830915847133688, 0.3877876899899586, 0.7739814920299564], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.9830915847133688, 0.3877876899899586, 0.7739814920299564], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.28581740635406083`, 0.37959060639794795`, 
                0.6086769040340942], Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.28581740635406083`, 0.37959060639794795`, 0.6086769040340942],
               Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.9830915847133688, 0.3877876899899586, 0.7739814920299564], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.9830915847133688, 0.3877876899899586, 0.7739814920299564], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.9830915847133688, 0.3877876899899586, 0.7739814920299564], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.9830915847133688, 0.3877876899899586, 0.7739814920299564], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ]},
         {
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.1918333298181023, 0.5583446540053314, 0.803703463361152], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.1918333298181023, 0.5583446540053314, 0.803703463361152], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.1918333298181023, 0.5583446540053314, 0.803703463361152], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.1918333298181023, 0.5583446540053314, 0.803703463361152], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.1918333298181023, 0.5583446540053314, 0.803703463361152], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.1918333298181023, 0.5583446540053314, 0.803703463361152], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.1918333298181023, 0.5583446540053314, 0.803703463361152], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.1918333298181023, 0.5583446540053314, 0.803703463361152], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.1918333298181023, 0.5583446540053314, 0.803703463361152], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.1918333298181023, 0.5583446540053314, 0.803703463361152], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.28581740635406083`, 0.37959060639794795`, 
                0.6086769040340942], Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.28581740635406083`, 0.37959060639794795`, 0.6086769040340942],
               Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", "\<\" \"\>"},
         {"\<\" \"\>", "\<\" \"\>", "\<\" \"\>", "\<\" \"\>", "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.9574286797298444, 0.8421355431748194, 0.753111447365387], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.9574286797298444, 0.8421355431748194, 0.753111447365387], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.28581740635406083`, 0.37959060639794795`, 
                0.6086769040340942], Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.28581740635406083`, 0.37959060639794795`, 0.6086769040340942],
               Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", "\<\" \"\>"},
         {
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.4584729267835508, 0.6314095574630034, 0.4896680683036623], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.4584729267835508, 0.6314095574630034, 0.4896680683036623], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.03718085116433367, 0.2689109877191955, 0.28960983534844686`],
                Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.03718085116433367, 0.2689109877191955, 0.28960983534844686`], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.03718085116433367, 0.2689109877191955, 0.28960983534844686`],
                Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.03718085116433367, 0.2689109877191955, 0.28960983534844686`], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.28581740635406083`, 0.37959060639794795`, 
                0.6086769040340942], Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.28581740635406083`, 0.37959060639794795`, 0.6086769040340942],
               Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.03718085116433367, 0.2689109877191955, 0.28960983534844686`],
                Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.03718085116433367, 0.2689109877191955, 0.28960983534844686`], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.03718085116433367, 0.2689109877191955, 0.28960983534844686`],
                Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.03718085116433367, 0.2689109877191955, 0.28960983534844686`], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ]},
         {
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.4584729267835508, 0.6314095574630034, 0.4896680683036623], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.4584729267835508, 0.6314095574630034, 0.4896680683036623], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.9574286797298444, 0.8421355431748194, 0.753111447365387], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.9574286797298444, 0.8421355431748194, 0.753111447365387], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", "\<\" \"\>", "\<\" \"\>", "\<\" \"\>"},
         {
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.4584729267835508, 0.6314095574630034, 0.4896680683036623], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.4584729267835508, 0.6314095574630034, 0.4896680683036623], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.10427648232550801`, 0.08272432641638106, 0.5574437342058849],
                Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.10427648232550801`, 0.08272432641638106, 0.5574437342058849], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.10427648232550801`, 0.08272432641638106, 0.5574437342058849],
                Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.10427648232550801`, 0.08272432641638106, 0.5574437342058849], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.10427648232550801`, 0.08272432641638106, 0.5574437342058849],
                Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.10427648232550801`, 0.08272432641638106, 0.5574437342058849], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.10427648232550801`, 0.08272432641638106, 0.5574437342058849],
                Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.10427648232550801`, 0.08272432641638106, 0.5574437342058849], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.10427648232550801`, 0.08272432641638106, 0.5574437342058849],
                Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.10427648232550801`, 0.08272432641638106, 0.5574437342058849], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.10427648232550801`, 0.08272432641638106, 0.5574437342058849],
                Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.10427648232550801`, 0.08272432641638106, 0.5574437342058849], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ]},
         {
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.4584729267835508, 0.6314095574630034, 0.4896680683036623], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.4584729267835508, 0.6314095574630034, 0.4896680683036623], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.9574286797298444, 0.8421355431748194, 0.753111447365387], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.9574286797298444, 0.8421355431748194, 0.753111447365387], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", "\<\" \"\>", "\<\" \"\>", "\<\" \"\>"},
         {"\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.17338502488909735`, 0.3323021433798874, 0.9987976943571641], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.17338502488909735`, 0.3323021433798874, 0.9987976943571641], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.17338502488909735`, 0.3323021433798874, 0.9987976943571641], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.17338502488909735`, 0.3323021433798874, 0.9987976943571641], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.17338502488909735`, 0.3323021433798874, 0.9987976943571641], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.17338502488909735`, 0.3323021433798874, 0.9987976943571641], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.17338502488909735`, 0.3323021433798874, 0.9987976943571641], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.17338502488909735`, 0.3323021433798874, 0.9987976943571641], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            0]& ], "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.2563799819331596, 0.4155001122926638, 0.27887306339815576`], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.2563799819331596, 0.4155001122926638, 0.27887306339815576`], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.2563799819331596, 0.4155001122926638, 0.27887306339815576`], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.2563799819331596, 0.4155001122926638, 0.27887306339815576`], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ], 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.2563799819331596, 0.4155001122926638, 0.27887306339815576`], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.2563799819331596, 0.4155001122926638, 0.27887306339815576`], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 0]& ]},
         {"\<\" \"\>", "\<\" \"\>", 
          TagBox[
           DynamicModuleBox[{Typeset`i$$ = " "}, 
            InputFieldBox[Dynamic[Typeset`i$$], String,
             BaseStyle->{
               RGBColor[
               0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
               Bold, Larger, FontSize -> 25},
             FieldSize->{0.85, 0.85},
             ImageMargins->0],
            DynamicModuleValues:>{}],
           InputField[
            Setting[#], String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
              RGBColor[
              0.6928508118260537, 0.3809306074166374, 0.06194408198093959], 
              Bold, Larger, FontSize -> 25}, ImageMargins -> 
            
            0]& ], "\<\" \"\>", "\<\" \"\>", "\<\" \"\>", "\<\" \"\>", "\<\" \
\"\>", "\<\" \"\>", "\<\" \"\>"}
        },
        AutoDelete->False,
        GridBoxBackground->{"Columns" -> {{
             GrayLevel[0]}}},
        GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.867402880227171*^9, 3.867402905649123*^9}, {
   3.86740297620662*^9, 3.8674030150219603`*^9}, {3.867403045639864*^9, 
   3.867403072080158*^9}, 3.867403115942917*^9, {3.867403154143194*^9, 
   3.867403260016214*^9}, {3.867403310291423*^9, 3.867403331472983*^9}, {
   3.867403368137229*^9, 3.8674034054763393`*^9}, 3.867403460116539*^9},
 CellLabel->"Out[94]=",
 CellID->1472395620,ExpressionUUID->"ee8c8aa4-7a07-42e7-a38e-3b09a0daecac"]
}, Open  ]],

Cell[TextData[{
 "Generate multiple crossword puzzles using the list ",
 Cell[BoxData[
  FormBox["\"\<\!\(\*
TemplateBox[<|\"boxes\" -> FormBox[
StyleBox[\"words\", \"TI\"], TraditionalForm], \"errors\" -> {}, \"input\" -> \
\"\\\\it{words}\", \"state\" -> \"Boxes\"|>,\"TeXAssistantTemplate\"]\)\>", 
   TraditionalForm]],ExpressionUUID->"ee4a7126-495e-4271-96ce-757c44a6b8a1"],
 "\":"
}], "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.867335001770092*^9, 3.867335021077939*^9}, {
  3.867386186340871*^9, 3.8673861996500883`*^9}},
 CellID->188667701,ExpressionUUID->"74de9471-8723-4882-b26d-c3832c803b14"],

Cell[BoxData[
 RowBox[{
  RowBox[{"crosswords", " ", "=", " ", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"generateCrossword", "[", 
      RowBox[{"gridSize", ",", " ", "words"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"n", ",", " ", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.866954581453271*^9, 3.866954621533882*^9}, {
   3.866954659748835*^9, 3.8669546929525423`*^9}, {3.8669557259643908`*^9, 
   3.866955727113274*^9}, {3.8669563038618937`*^9, 3.8669563043554*^9}, {
   3.866958432994102*^9, 3.866958438590069*^9}, {3.866968213618495*^9, 
   3.866968217715692*^9}, 3.866969967479393*^9, {3.866970079935643*^9, 
   3.866970120046653*^9}, {3.866970213361775*^9, 3.866970286351714*^9}, {
   3.866970513291153*^9, 3.8669705389362783`*^9}, {3.8669706557572403`*^9, 
   3.866970656287735*^9}, {3.866971515395473*^9, 3.866971516929038*^9}, {
   3.866971572517663*^9, 3.866971573230188*^9}, {3.866971746102281*^9, 
   3.86697174729749*^9}, {3.866971823314721*^9, 3.866971824042019*^9}, {
   3.866972028067903*^9, 3.8669720583230057`*^9}, {3.8669720939186983`*^9, 
   3.866972095718541*^9}, {3.866973029254499*^9, 3.866973030511911*^9}, {
   3.866973105742588*^9, 3.866973128577766*^9}, {3.866973864452818*^9, 
   3.866973874320725*^9}, {3.866976145872056*^9, 3.866976186713377*^9}, 
   3.866977465709135*^9, {3.8669779402259903`*^9, 3.8669779479235888`*^9}, {
   3.866978758209947*^9, 3.866978758637156*^9}, 3.866978825724409*^9, {
   3.866990948951757*^9, 3.866990949682199*^9}, {3.8669912340580807`*^9, 
   3.866991235053334*^9}, {3.866991350299547*^9, 3.86699135117566*^9}, 
   3.866991582281852*^9, 3.867023769213842*^9, 3.8670319200011253`*^9, {
   3.8670382434799623`*^9, 3.867038247757207*^9}, {3.867038557679743*^9, 
   3.867038557864266*^9}, {3.867041077431781*^9, 3.867041077837076*^9}, {
   3.867041189296463*^9, 3.867041189468349*^9}, {3.867046905429834*^9, 
   3.867046905650567*^9}, {3.8670469893088703`*^9, 3.867046989429494*^9}, 
   3.8670470356753683`*^9, {3.8670471535107527`*^9, 3.867047153721566*^9}, {
   3.867047390003319*^9, 3.867047394591385*^9}, {3.8670477379833593`*^9, 
   3.867047771025894*^9}, {3.867047920576105*^9, 3.8670479208202963`*^9}, {
   3.8670479996720457`*^9, 3.8670479998904343`*^9}, {3.867056942854536*^9, 
   3.8670569430041933`*^9}, {3.867057035439494*^9, 3.8670570365248528`*^9}, {
   3.867057249879162*^9, 3.86705729119077*^9}, {3.867057332144236*^9, 
   3.8670573336186543`*^9}, {3.867057650536461*^9, 3.867057655065229*^9}, {
   3.867057699699139*^9, 3.8670577012864637`*^9}, {3.867057833229014*^9, 
   3.867057834610031*^9}, {3.867058349585157*^9, 3.8670583497493763`*^9}, {
   3.867058423847796*^9, 3.8670584240698347`*^9}, {3.8670586292340603`*^9, 
   3.8670586302624407`*^9}, {3.867058746876598*^9, 3.8670587478339167`*^9}, {
   3.867060288957004*^9, 3.867060292253853*^9}, {3.867060830757739*^9, 
   3.867060830955586*^9}, {3.867060908340364*^9, 3.8670609369635277`*^9}, {
   3.867061108224923*^9, 3.867061108373423*^9}, {3.867061170629353*^9, 
   3.86706118982487*^9}, {3.867061222342876*^9, 3.867061222566752*^9}, {
   3.867061260848578*^9, 3.867061262181855*^9}, {3.867061333956987*^9, 
   3.867061334599813*^9}, {3.86706180231124*^9, 3.867061835289304*^9}, {
   3.8670619909476147`*^9, 3.867062015356483*^9}, {3.8670622561976213`*^9, 
   3.867062262028735*^9}, {3.867062379994111*^9, 3.8670623803251667`*^9}, {
   3.867063096484989*^9, 3.867063096726674*^9}, {3.867063394159596*^9, 
   3.867063399418724*^9}, {3.867063557826497*^9, 3.867063576880529*^9}, {
   3.867074489315549*^9, 3.867074492173499*^9}, {3.867075220825663*^9, 
   3.867075226193362*^9}, {3.867075335680372*^9, 3.867075336555667*^9}, {
   3.8670755243637037`*^9, 3.867075524684375*^9}, {3.867075637209619*^9, 
   3.8670756375611753`*^9}, {3.867076852584037*^9, 3.8670768530698557`*^9}, {
   3.8671144488111267`*^9, 3.8671144726483603`*^9}, {3.8671145918809566`*^9, 
   3.8671145924217043`*^9}, {3.8671147447060843`*^9, 3.867114747900169*^9}, {
   3.867115852665605*^9, 3.867115854190325*^9}, {3.867116765436907*^9, 
   3.8671167664063663`*^9}, {3.867116913483593*^9, 3.867116914627487*^9}, {
   3.867320229394307*^9, 3.867320230395767*^9}, {3.867334994388977*^9, 
   3.8673349958489113`*^9}, {3.867335185312675*^9, 3.867335188366198*^9}, {
   3.867386180143105*^9, 3.867386180678096*^9}},
 CellLabel->"In[95]:=",
 CellID->2061055063,ExpressionUUID->"52d8d663-9c1f-419a-a5c0-db65dd26f3de"],

Cell[TextData[{
 "Sort the crossword puzzles in non-decreasing order of ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["quality", "TI"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\it{quality}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2d2e0a4d-9582-4814-b8bf-f6f3fda6bd39"],
 " (lower is better) and display them in a single column:"
}], "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.867335071684958*^9, 3.867335100204205*^9}, {
  3.8673822247659607`*^9, 3.867382262459139*^9}},
 CellID->1530031818,ExpressionUUID->"8b915f5b-4e42-4dbe-ad9d-70f5c6adad5a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"crosswords", " ", "=", " ", 
   RowBox[{"Sort", "[", "crosswords", "]"}]}], ";"}], "\n", 
 RowBox[{"Iconize", "[", 
  RowBox[{
   RowBox[{"crosswords", " ", "//", " ", "Column"}], ",", " ", 
   "\"\<Multiple Crossword Puzzles\>\""}], "]"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.867062017493113*^9, 3.867062084623148*^9}, {
   3.867063281891446*^9, 3.867063287643476*^9}, {3.867114725690262*^9, 
   3.867114733521369*^9}, {3.8671457977204323`*^9, 3.86714580432183*^9}, {
   3.867146070388996*^9, 3.867146097562625*^9}, {3.867146198564722*^9, 
   3.867146198703269*^9}, {3.867317474154805*^9, 3.867317474886376*^9}, {
   3.867318650935758*^9, 3.867318656247123*^9}, 3.867335199172523*^9, {
   3.867403659882162*^9, 3.8674036698333817`*^9}, {3.867403716340238*^9, 
   3.867403717507511*^9}},
 CellLabel->"In[106]:=",
 CellID->1241217731,ExpressionUUID->"fdf41743-5883-4cb2-a3a9-7517f8caad18"],

Cell[BoxData[
 InterpretationBox[
  DynamicModuleBox[{Typeset`open = False}, 
   TemplateBox[{"Expression", 
     StyleBox[
     "\"Multiple Crossword Puzzles\"", "IconizedCustomName", StripOnInput -> 
      False], 
     GridBox[{{
        RowBox[{
          TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
          TagBox["Column", "IconizedItem"]}]}, {
        RowBox[{
          TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
          TagBox["692008", "IconizedItem"]}]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
     Dynamic[Typeset`open]},
    "IconizedObject"]],
  Column[{{4, 
     Grid[{{
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8973488066513795, 0.04816242014875605, 0.384168380947834], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["U", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8973488066513795, 0.04816242014875605, 0.384168380947834], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["S", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8973488066513795, 0.04816242014875605, 0.384168380947834], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8973488066513795, 0.04816242014875605, 0.384168380947834], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8973488066513795, 0.04816242014875605, 0.384168380947834], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["M", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8973488066513795, 0.04816242014875605, 0.384168380947834], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["W", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7330387418142092, 0.579530488122654, 0.45273579711281275`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
       " ", " ", " ", " ", " ", " ", " ", " ", 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7330387418142092, 0.579530488122654, 0.45273579711281275`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {" ", 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.014213702586182153`, 0.4957259131924572, 0.923446001983429], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["F", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16727273777758578`, 0.12805958161074393`, 0.11333584304050048`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16727273777758578`, 0.12805958161074393`, 0.11333584304050048`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["Y", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16727273777758578`, 0.12805958161074393`, 0.11333584304050048`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16727273777758578`, 0.12805958161074393`, 0.11333584304050048`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7330387418142092, 0.579530488122654, 0.45273579711281275`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["G", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16727273777758578`, 0.12805958161074393`, 0.11333584304050048`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["B", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5786883413036459, 0.3780083300120731, 0.6393879951438886], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.014213702586182153`, 0.4957259131924572, 0.923446001983429], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5786883413036459, 0.3780083300120731, 0.6393879951438886], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["D", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5786883413036459, 0.3780083300120731, 0.6393879951438886], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        InputField["K", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7330387418142092, 0.579530488122654, 0.45273579711281275`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {" ", 
        InputField["B", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.014213702586182153`, 0.4957259131924572, 0.923446001983429], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.14749265806878942`, 0.6984863663987582, 0.1145338635503157], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.14749265806878942`, 0.6984863663987582, 0.1145338635503157], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4384547411828643, 0.49283745365002596`, 0.038375079431197445`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["U", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.14749265806878942`, 0.6984863663987582, 0.1145338635503157], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7330387418142092, 0.579530488122654, 0.45273579711281275`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.14749265806878942`, 0.6984863663987582, 0.1145338635503157], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2393520992482283, 0.9509238622106382, 0.5352115207595505], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["Y", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8286110329100198, 0.8632516894317752, 0.28231771504611536`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4384547411828643, 0.49283745365002596`, 0.038375079431197445`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7330387418142092, 0.579530488122654, 0.45273579711281275`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2393520992482283, 0.9509238622106382, 0.5352115207595505], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["M", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.25178590212149565`, 0.2128642608340927, 0.11883488877581683`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8286110329100198, 0.8632516894317752, 0.28231771504611536`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.25178590212149565`, 0.2128642608340927, 0.11883488877581683`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.25178590212149565`, 0.2128642608340927, 0.11883488877581683`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.25178590212149565`, 0.2128642608340927, 0.11883488877581683`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " "}, {
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2393520992482283, 0.9509238622106382, 0.5352115207595505], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["G", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8286110329100198, 0.8632516894317752, 0.28231771504611536`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["V", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4384547411828643, 0.49283745365002596`, 0.038375079431197445`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " "}, {
        InputField["P", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2393520992482283, 0.9509238622106382, 0.5352115207595505], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8286110329100198, 0.8632516894317752, 0.28231771504611536`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["D", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9391796959157501, 0.7128993625493785, 0.23181697329454276`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4384547411828643, 0.49283745365002596`, 0.038375079431197445`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9391796959157501, 0.7128993625493785, 0.23181697329454276`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9391796959157501, 0.7128993625493785, 0.23181697329454276`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2393520992482283, 0.9509238622106382, 0.5352115207595505], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8286110329100198, 0.8632516894317752, 0.28231771504611536`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", " ", " "}}, Frame -> All, Background -> GrayLevel[0]], 
     Grid[{{
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8973488066513795, 0.04816242014875605, 0.384168380947834], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8973488066513795, 0.04816242014875605, 0.384168380947834], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8973488066513795, 0.04816242014875605, 0.384168380947834], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8973488066513795, 0.04816242014875605, 0.384168380947834], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8973488066513795, 0.04816242014875605, 0.384168380947834], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8973488066513795, 0.04816242014875605, 0.384168380947834], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7330387418142092, 0.579530488122654, 0.45273579711281275`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
       " ", " ", " ", " ", " ", " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7330387418142092, 0.579530488122654, 0.45273579711281275`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {" ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.014213702586182153`, 0.4957259131924572, 0.923446001983429], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16727273777758578`, 0.12805958161074393`, 0.11333584304050048`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16727273777758578`, 0.12805958161074393`, 0.11333584304050048`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16727273777758578`, 0.12805958161074393`, 0.11333584304050048`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16727273777758578`, 0.12805958161074393`, 0.11333584304050048`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7330387418142092, 0.579530488122654, 0.45273579711281275`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16727273777758578`, 0.12805958161074393`, 0.11333584304050048`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5786883413036459, 0.3780083300120731, 0.6393879951438886], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.014213702586182153`, 0.4957259131924572, 0.923446001983429], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5786883413036459, 0.3780083300120731, 0.6393879951438886], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5786883413036459, 0.3780083300120731, 0.6393879951438886], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7330387418142092, 0.579530488122654, 0.45273579711281275`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {" ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.014213702586182153`, 0.4957259131924572, 0.923446001983429], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.14749265806878942`, 0.6984863663987582, 0.1145338635503157], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.14749265806878942`, 0.6984863663987582, 0.1145338635503157], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4384547411828643, 0.49283745365002596`, 0.038375079431197445`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.14749265806878942`, 0.6984863663987582, 0.1145338635503157], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7330387418142092, 0.579530488122654, 0.45273579711281275`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.14749265806878942`, 0.6984863663987582, 0.1145338635503157], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2393520992482283, 0.9509238622106382, 0.5352115207595505], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8286110329100198, 0.8632516894317752, 0.28231771504611536`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4384547411828643, 0.49283745365002596`, 0.038375079431197445`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7330387418142092, 0.579530488122654, 0.45273579711281275`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2393520992482283, 0.9509238622106382, 0.5352115207595505], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.25178590212149565`, 0.2128642608340927, 0.11883488877581683`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8286110329100198, 0.8632516894317752, 0.28231771504611536`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.25178590212149565`, 0.2128642608340927, 0.11883488877581683`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.25178590212149565`, 0.2128642608340927, 0.11883488877581683`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.25178590212149565`, 0.2128642608340927, 0.11883488877581683`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2393520992482283, 0.9509238622106382, 0.5352115207595505], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8286110329100198, 0.8632516894317752, 0.28231771504611536`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4384547411828643, 0.49283745365002596`, 0.038375079431197445`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2393520992482283, 0.9509238622106382, 0.5352115207595505], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8286110329100198, 0.8632516894317752, 0.28231771504611536`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9391796959157501, 0.7128993625493785, 0.23181697329454276`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4384547411828643, 0.49283745365002596`, 0.038375079431197445`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9391796959157501, 0.7128993625493785, 0.23181697329454276`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9391796959157501, 0.7128993625493785, 0.23181697329454276`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2393520992482283, 0.9509238622106382, 0.5352115207595505], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8286110329100198, 0.8632516894317752, 0.28231771504611536`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", " ", " "}}, Frame -> All, Background -> GrayLevel[0]]}, {4, 
     Grid[{{
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9573300274034307, 0.20539692799720477`, 0.6493095104826769], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8001878087594239, 0.3108309154761577, 0.5710740407619854], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9573300274034307, 0.20539692799720477`, 0.6493095104826769], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["P", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9573300274034307, 0.20539692799720477`, 0.6493095104826769], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9573300274034307, 0.20539692799720477`, 0.6493095104826769], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["M", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8267163508577611, 0.21831387113342116`, 0.9515091686891293], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        " "}, {" ", 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8001878087594239, 0.3108309154761577, 0.5710740407619854], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField["Y", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.640547250839617, 0.7623207488157209, 0.2585937998423973], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.640547250839617, 0.7623207488157209, 0.2585937998423973], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["G", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.640547250839617, 0.7623207488157209, 0.2585937998423973], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.640547250839617, 0.7623207488157209, 0.2585937998423973], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.640547250839617, 0.7623207488157209, 0.2585937998423973], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0]}, {" ", 
        InputField["B", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8001878087594239, 0.3108309154761577, 0.5710740407619854], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7210675069280741, 0.9239945089881381, 0.05475514349700061], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7210675069280741, 0.9239945089881381, 0.05475514349700061], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["D", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7210675069280741, 0.9239945089881381, 0.05475514349700061], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8267163508577611, 0.21831387113342116`, 0.9515091686891293], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " "}, {
        InputField["W", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5192050675524542, 0.5114872471050815, 0.1028820033736364], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8692150181338152, 0.1992217332026207, 0.9422521038670051], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8267163508577611, 0.21831387113342116`, 0.9515091686891293], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["D", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16357853534455669`, 0.8353605993350537, 0.8499474545567689], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5192050675524542, 0.5114872471050815, 0.1028820033736364], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8692150181338152, 0.1992217332026207, 0.9422521038670051], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.0555986475087864, 0.6227609343213238, 0.7015717768040584], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.0555986475087864, 0.6227609343213238, 0.7015717768040584], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8267163508577611, 0.21831387113342116`, 0.9515091686891293], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["V", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.0555986475087864, 0.6227609343213238, 0.7015717768040584], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.0555986475087864, 0.6227609343213238, 0.7015717768040584], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5192050675524542, 0.5114872471050815, 0.1028820033736364], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["U", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8692150181338152, 0.1992217332026207, 0.9422521038670051], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16357853534455669`, 0.8353605993350537, 0.8499474545567689], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["K", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5192050675524542, 0.5114872471050815, 0.1028820033736364], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8692150181338152, 0.1992217332026207, 0.9422521038670051], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["F", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7528055484651655, 0.9490879046291325, 0.5225060167541502], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7528055484651655, 0.9490879046291325, 0.5225060167541502], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["Y", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7528055484651655, 0.9490879046291325, 0.5225060167541502], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7528055484651655, 0.9490879046291325, 0.5225060167541502], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7528055484651655, 0.9490879046291325, 0.5225060167541502], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["G", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7528055484651655, 0.9490879046291325, 0.5225060167541502], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5192050675524542, 0.5114872471050815, 0.1028820033736364], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8692150181338152, 0.1992217332026207, 0.9422521038670051], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " ", " "}, {
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5192050675524542, 0.5114872471050815, 0.1028820033736364], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.22452984626477646`, 0.37769776453266357`, 0.047628859171102045`],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["U", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.22452984626477646`, 0.37769776453266357`, 0.047628859171102045`],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["S", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.22452984626477646`, 0.37769776453266357`, 0.047628859171102045`],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.22452984626477646`, 0.37769776453266357`, 0.047628859171102045`],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.22452984626477646`, 0.37769776453266357`, 0.047628859171102045`],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["M", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.22452984626477646`, 0.37769776453266357`, 0.047628859171102045`],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
       " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}}, Frame -> All, 
      Background -> GrayLevel[0]], 
     Grid[{{
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9573300274034307, 0.20539692799720477`, 0.6493095104826769], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8001878087594239, 0.3108309154761577, 0.5710740407619854], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9573300274034307, 0.20539692799720477`, 0.6493095104826769], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9573300274034307, 0.20539692799720477`, 0.6493095104826769], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9573300274034307, 0.20539692799720477`, 0.6493095104826769], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8267163508577611, 0.21831387113342116`, 0.9515091686891293], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        " "}, {" ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8001878087594239, 0.3108309154761577, 0.5710740407619854], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.640547250839617, 0.7623207488157209, 0.2585937998423973], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.640547250839617, 0.7623207488157209, 0.2585937998423973], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.640547250839617, 0.7623207488157209, 0.2585937998423973], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.640547250839617, 0.7623207488157209, 0.2585937998423973], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.640547250839617, 0.7623207488157209, 0.2585937998423973], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0]}, {" ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8001878087594239, 0.3108309154761577, 0.5710740407619854], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7210675069280741, 0.9239945089881381, 0.05475514349700061], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7210675069280741, 0.9239945089881381, 0.05475514349700061], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7210675069280741, 0.9239945089881381, 0.05475514349700061], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8267163508577611, 0.21831387113342116`, 0.9515091686891293], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5192050675524542, 0.5114872471050815, 0.1028820033736364], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8692150181338152, 0.1992217332026207, 0.9422521038670051], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8267163508577611, 0.21831387113342116`, 0.9515091686891293], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16357853534455669`, 0.8353605993350537, 0.8499474545567689], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5192050675524542, 0.5114872471050815, 0.1028820033736364], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8692150181338152, 0.1992217332026207, 0.9422521038670051], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.0555986475087864, 0.6227609343213238, 0.7015717768040584], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.0555986475087864, 0.6227609343213238, 0.7015717768040584], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8267163508577611, 0.21831387113342116`, 0.9515091686891293], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.0555986475087864, 0.6227609343213238, 0.7015717768040584], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.0555986475087864, 0.6227609343213238, 0.7015717768040584], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5192050675524542, 0.5114872471050815, 0.1028820033736364], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8692150181338152, 0.1992217332026207, 0.9422521038670051], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16357853534455669`, 0.8353605993350537, 0.8499474545567689], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5192050675524542, 0.5114872471050815, 0.1028820033736364], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8692150181338152, 0.1992217332026207, 0.9422521038670051], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7528055484651655, 0.9490879046291325, 0.5225060167541502], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7528055484651655, 0.9490879046291325, 0.5225060167541502], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7528055484651655, 0.9490879046291325, 0.5225060167541502], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7528055484651655, 0.9490879046291325, 0.5225060167541502], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7528055484651655, 0.9490879046291325, 0.5225060167541502], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7528055484651655, 0.9490879046291325, 0.5225060167541502], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5192050675524542, 0.5114872471050815, 0.1028820033736364], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8692150181338152, 0.1992217332026207, 0.9422521038670051], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " ", " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5192050675524542, 0.5114872471050815, 0.1028820033736364], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.22452984626477646`, 0.37769776453266357`, 0.047628859171102045`],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.22452984626477646`, 0.37769776453266357`, 0.047628859171102045`],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.22452984626477646`, 0.37769776453266357`, 0.047628859171102045`],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.22452984626477646`, 0.37769776453266357`, 0.047628859171102045`],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.22452984626477646`, 0.37769776453266357`, 0.047628859171102045`],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.22452984626477646`, 0.37769776453266357`, 0.047628859171102045`],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
       " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}}, Frame -> All, 
      Background -> GrayLevel[0]]}, {4, 
     Grid[{{
        InputField["M", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5688354267555216, 0.957194337051098, 0.25010310601428043`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5688354267555216, 0.957194337051098, 0.25010310601428043`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5688354267555216, 0.957194337051098, 0.25010310601428043`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5688354267555216, 0.957194337051098, 0.25010310601428043`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5688354267555216, 0.957194337051098, 0.25010310601428043`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["F", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.07295637104870445, 0.735126343371032, 0.39593496065655676`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " "}, {
       " ", " ", " ", " ", " ", 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7943117003499107, 0.7258100813751234, 0.9232559891983934], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7943117003499107, 0.7258100813751234, 0.9232559891983934], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.07295637104870445, 0.735126343371032, 0.39593496065655676`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["V", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7943117003499107, 0.7258100813751234, 0.9232559891983934], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7943117003499107, 0.7258100813751234, 0.9232559891983934], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["Y", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.029504856821608305`, 0.7476501659554633, 0.503031191757793], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.029504856821608305`, 0.7476501659554633, 0.503031191757793], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["G", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.029504856821608305`, 0.7476501659554633, 0.503031191757793], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.029504856821608305`, 0.7476501659554633, 0.503031191757793], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.029504856821608305`, 0.7476501659554633, 0.503031191757793], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["Y", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.07295637104870445, 0.735126343371032, 0.39593496065655676`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " "}, {
       " ", " ", " ", 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6133714689849477, 0.46849708696294345`, 0.2300655641068483], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.07295637104870445, 0.735126343371032, 0.39593496065655676`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " "}, {
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8659926154262223, 0.3782951311086771, 0.2118757601325565], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["D", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3323806235032769, 0.09381041447514527, 0.687615794701044], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6133714689849477, 0.46849708696294345`, 0.2300655641068483], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3323806235032769, 0.09381041447514527, 0.687615794701044], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3323806235032769, 0.09381041447514527, 0.687615794701044], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.31037443319802027`, 0.7827272874439184, 0.6680871518437546], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.31037443319802027`, 0.7827272874439184, 0.6680871518437546], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["B", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.31037443319802027`, 0.7827272874439184, 0.6680871518437546], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8659926154262223, 0.3782951311086771, 0.2118757601325565], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["P", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6133714689849477, 0.46849708696294345`, 0.2300655641068483], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField["G", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.07295637104870445, 0.735126343371032, 0.39593496065655676`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " "}, {
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08864130146818838, 0.38352230824751343`, 0.9820351533365339], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["U", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08864130146818838, 0.38352230824751343`, 0.9820351533365339], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["S", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08864130146818838, 0.38352230824751343`, 0.9820351533365339], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08864130146818838, 0.38352230824751343`, 0.9820351533365339], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08864130146818838, 0.38352230824751343`, 0.9820351533365339], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["M", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08864130146818838, 0.38352230824751343`, 0.9820351533365339], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["B", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6101522236677681, 0.7558517247744887, 0.1566228955478317], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["U", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8659926154262223, 0.3782951311086771, 0.2118757601325565], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " ", " ", 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6101522236677681, 0.7558517247744887, 0.1566228955478317], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8659926154262223, 0.3782951311086771, 0.2118757601325565], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField["W", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5726158098174603, 0.642021357941881, 0.7552023305991082], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5726158098174603, 0.642021357941881, 0.7552023305991082], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5726158098174603, 0.642021357941881, 0.7552023305991082], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["K", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5726158098174603, 0.642021357941881, 0.7552023305991082], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5726158098174603, 0.642021357941881, 0.7552023305991082], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5726158098174603, 0.642021357941881, 0.7552023305991082], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8659926154262223, 0.3782951311086771, 0.2118757601325565], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " ", " ", 
        InputField["D", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6101522236677681, 0.7558517247744887, 0.1566228955478317], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}}, Frame -> All, 
      Background -> GrayLevel[0]], 
     Grid[{{
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5688354267555216, 0.957194337051098, 0.25010310601428043`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5688354267555216, 0.957194337051098, 0.25010310601428043`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5688354267555216, 0.957194337051098, 0.25010310601428043`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5688354267555216, 0.957194337051098, 0.25010310601428043`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5688354267555216, 0.957194337051098, 0.25010310601428043`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.07295637104870445, 0.735126343371032, 0.39593496065655676`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " "}, {
       " ", " ", " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7943117003499107, 0.7258100813751234, 0.9232559891983934], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7943117003499107, 0.7258100813751234, 0.9232559891983934], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.07295637104870445, 0.735126343371032, 0.39593496065655676`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7943117003499107, 0.7258100813751234, 0.9232559891983934], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7943117003499107, 0.7258100813751234, 0.9232559891983934], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.029504856821608305`, 0.7476501659554633, 0.503031191757793], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.029504856821608305`, 0.7476501659554633, 0.503031191757793], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.029504856821608305`, 0.7476501659554633, 0.503031191757793], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.029504856821608305`, 0.7476501659554633, 0.503031191757793], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.029504856821608305`, 0.7476501659554633, 0.503031191757793], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.07295637104870445, 0.735126343371032, 0.39593496065655676`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " "}, {
       " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6133714689849477, 0.46849708696294345`, 0.2300655641068483], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.07295637104870445, 0.735126343371032, 0.39593496065655676`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8659926154262223, 0.3782951311086771, 0.2118757601325565], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3323806235032769, 0.09381041447514527, 0.687615794701044], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6133714689849477, 0.46849708696294345`, 0.2300655641068483], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3323806235032769, 0.09381041447514527, 0.687615794701044], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3323806235032769, 0.09381041447514527, 0.687615794701044], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.31037443319802027`, 0.7827272874439184, 0.6680871518437546], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.31037443319802027`, 0.7827272874439184, 0.6680871518437546], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.31037443319802027`, 0.7827272874439184, 0.6680871518437546], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8659926154262223, 0.3782951311086771, 0.2118757601325565], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6133714689849477, 0.46849708696294345`, 0.2300655641068483], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.07295637104870445, 0.735126343371032, 0.39593496065655676`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08864130146818838, 0.38352230824751343`, 0.9820351533365339], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08864130146818838, 0.38352230824751343`, 0.9820351533365339], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08864130146818838, 0.38352230824751343`, 0.9820351533365339], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08864130146818838, 0.38352230824751343`, 0.9820351533365339], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08864130146818838, 0.38352230824751343`, 0.9820351533365339], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08864130146818838, 0.38352230824751343`, 0.9820351533365339], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6101522236677681, 0.7558517247744887, 0.1566228955478317], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8659926154262223, 0.3782951311086771, 0.2118757601325565], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6101522236677681, 0.7558517247744887, 0.1566228955478317], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8659926154262223, 0.3782951311086771, 0.2118757601325565], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5726158098174603, 0.642021357941881, 0.7552023305991082], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5726158098174603, 0.642021357941881, 0.7552023305991082], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5726158098174603, 0.642021357941881, 0.7552023305991082], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5726158098174603, 0.642021357941881, 0.7552023305991082], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5726158098174603, 0.642021357941881, 0.7552023305991082], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5726158098174603, 0.642021357941881, 0.7552023305991082], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8659926154262223, 0.3782951311086771, 0.2118757601325565], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6101522236677681, 0.7558517247744887, 0.1566228955478317], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}}, Frame -> All, 
      Background -> GrayLevel[0]]}, {4, 
     Grid[{{
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08800980159560767, 0.9861993611127002, 0.6125066637589813], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["M", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5619791159732324, 0.49382226056279266`, 0.6372846275011177], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", " ", " ", " "}, {
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08800980159560767, 0.9861993611127002, 0.6125066637589813], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5619791159732324, 0.49382226056279266`, 0.6372846275011177], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9512384025210461, 0.45762079833229086`, 0.5990978385443062], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["U", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9512384025210461, 0.45762079833229086`, 0.5990978385443062], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["S", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9512384025210461, 0.45762079833229086`, 0.5990978385443062], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9512384025210461, 0.45762079833229086`, 0.5990978385443062], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9512384025210461, 0.45762079833229086`, 0.5990978385443062], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["M", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9512384025210461, 0.45762079833229086`, 0.5990978385443062], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["B", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08800980159560767, 0.9861993611127002, 0.6125066637589813], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.47989165434914405`, 0.012675060349318423`, 0.7879263130559848], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5619791159732324, 0.49382226056279266`, 0.6372846275011177], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["D", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.47989165434914405`, 0.012675060349318423`, 0.7879263130559848], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9813489527911641, 0.04514516387041434, 0.1364295701477256], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {" ", " ", 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5619791159732324, 0.49382226056279266`, 0.6372846275011177], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["Y", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.24155694992840915`, 0.4025807627187954, 0.24435377082769705`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.24155694992840915`, 0.4025807627187954, 0.24435377082769705`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["G", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.24155694992840915`, 0.4025807627187954, 0.24435377082769705`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.24155694992840915`, 0.4025807627187954, 0.24435377082769705`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.24155694992840915`, 0.4025807627187954, 0.24435377082769705`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["F", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.09509187919667772, 0.13345245368238468`, 0.591098713346021], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5619791159732324, 0.49382226056279266`, 0.6372846275011177], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", " ", 
        InputField["U", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9813489527911641, 0.04514516387041434, 0.1364295701477256], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.09509187919667772, 0.13345245368238468`, 0.591098713346021], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField["W", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.32916408463157376`, 0.5887221698026237, 0.3553476852142998], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.32916408463157376`, 0.5887221698026237, 0.3553476852142998], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.32916408463157376`, 0.5887221698026237, 0.3553476852142998], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["K", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.32916408463157376`, 0.5887221698026237, 0.3553476852142998], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.32916408463157376`, 0.5887221698026237, 0.3553476852142998], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.32916408463157376`, 0.5887221698026237, 0.3553476852142998], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["Y", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.09509187919667772, 0.13345245368238468`, 0.591098713346021], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["D", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4250521211492553, 0.3563337741019883, 0.9941547201332395], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9813489527911641, 0.04514516387041434, 0.1364295701477256], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.09509187919667772, 0.13345245368238468`, 0.591098713346021], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2766912624464679, 0.5068385074733284, 0.49466051118545273`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2766912624464679, 0.5068385074733284, 0.49466051118545273`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["P", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2766912624464679, 0.5068385074733284, 0.49466051118545273`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2766912624464679, 0.5068385074733284, 0.49466051118545273`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", " "}, {
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.09509187919667772, 0.13345245368238468`, 0.591098713346021], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4250521211492553, 0.3563337741019883, 0.9941547201332395], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4498575069549138, 0.050295467507781355`, 0.34444144533912513`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4498575069549138, 0.050295467507781355`, 0.34444144533912513`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4498575069549138, 0.050295467507781355`, 0.34444144533912513`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["V", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4498575069549138, 0.050295467507781355`, 0.34444144533912513`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4498575069549138, 0.050295467507781355`, 0.34444144533912513`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["G", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.09509187919667772, 0.13345245368238468`, 0.591098713346021], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4250521211492553, 0.3563337741019883, 0.9941547201332395], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " ", " "}}, Frame -> All, Background -> GrayLevel[0]], 
     Grid[{{
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08800980159560767, 0.9861993611127002, 0.6125066637589813], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5619791159732324, 0.49382226056279266`, 0.6372846275011177], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", " ", " ", " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08800980159560767, 0.9861993611127002, 0.6125066637589813], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5619791159732324, 0.49382226056279266`, 0.6372846275011177], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9512384025210461, 0.45762079833229086`, 0.5990978385443062], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9512384025210461, 0.45762079833229086`, 0.5990978385443062], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9512384025210461, 0.45762079833229086`, 0.5990978385443062], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9512384025210461, 0.45762079833229086`, 0.5990978385443062], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9512384025210461, 0.45762079833229086`, 0.5990978385443062], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9512384025210461, 0.45762079833229086`, 0.5990978385443062], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08800980159560767, 0.9861993611127002, 0.6125066637589813], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.47989165434914405`, 0.012675060349318423`, 0.7879263130559848], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5619791159732324, 0.49382226056279266`, 0.6372846275011177], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.47989165434914405`, 0.012675060349318423`, 0.7879263130559848], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9813489527911641, 0.04514516387041434, 0.1364295701477256], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {" ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5619791159732324, 0.49382226056279266`, 0.6372846275011177], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.24155694992840915`, 0.4025807627187954, 0.24435377082769705`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.24155694992840915`, 0.4025807627187954, 0.24435377082769705`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.24155694992840915`, 0.4025807627187954, 0.24435377082769705`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.24155694992840915`, 0.4025807627187954, 0.24435377082769705`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.24155694992840915`, 0.4025807627187954, 0.24435377082769705`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.09509187919667772, 0.13345245368238468`, 0.591098713346021], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5619791159732324, 0.49382226056279266`, 0.6372846275011177], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9813489527911641, 0.04514516387041434, 0.1364295701477256], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.09509187919667772, 0.13345245368238468`, 0.591098713346021], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.32916408463157376`, 0.5887221698026237, 0.3553476852142998], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.32916408463157376`, 0.5887221698026237, 0.3553476852142998], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.32916408463157376`, 0.5887221698026237, 0.3553476852142998], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.32916408463157376`, 0.5887221698026237, 0.3553476852142998], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.32916408463157376`, 0.5887221698026237, 0.3553476852142998], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.32916408463157376`, 0.5887221698026237, 0.3553476852142998], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.09509187919667772, 0.13345245368238468`, 0.591098713346021], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4250521211492553, 0.3563337741019883, 0.9941547201332395], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9813489527911641, 0.04514516387041434, 0.1364295701477256], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.09509187919667772, 0.13345245368238468`, 0.591098713346021], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2766912624464679, 0.5068385074733284, 0.49466051118545273`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2766912624464679, 0.5068385074733284, 0.49466051118545273`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2766912624464679, 0.5068385074733284, 0.49466051118545273`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2766912624464679, 0.5068385074733284, 0.49466051118545273`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.09509187919667772, 0.13345245368238468`, 0.591098713346021], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4250521211492553, 0.3563337741019883, 0.9941547201332395], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4498575069549138, 0.050295467507781355`, 0.34444144533912513`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4498575069549138, 0.050295467507781355`, 0.34444144533912513`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4498575069549138, 0.050295467507781355`, 0.34444144533912513`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4498575069549138, 0.050295467507781355`, 0.34444144533912513`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4498575069549138, 0.050295467507781355`, 0.34444144533912513`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.09509187919667772, 0.13345245368238468`, 0.591098713346021], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4250521211492553, 0.3563337741019883, 0.9941547201332395], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " ", " "}}, Frame -> All, Background -> GrayLevel[0]]}, {5, 
     Grid[{{" ", " ", " ", " ", " ", 
        InputField["M", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8123640975311608, 0.27731820368452453`, 0.44688842845745547`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8123640975311608, 0.27731820368452453`, 0.44688842845745547`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8123640975311608, 0.27731820368452453`, 0.44688842845745547`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8123640975311608, 0.27731820368452453`, 0.44688842845745547`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8123640975311608, 0.27731820368452453`, 0.44688842845745547`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7583982091043695, 0.36346926103511756`, 0.9877840115517693], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7583982091043695, 0.36346926103511756`, 0.9877840115517693], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7583982091043695, 0.36346926103511756`, 0.9877840115517693], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["V", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7583982091043695, 0.36346926103511756`, 0.9877840115517693], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7583982091043695, 0.36346926103511756`, 0.9877840115517693], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", " "}, {" ", " ", " ", " ", " ", 
        InputField["B", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1147168047434679, 0.07087869992909313, 0.17375802799834728`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1147168047434679, 0.07087869992909313, 0.17375802799834728`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1147168047434679, 0.07087869992909313, 0.17375802799834728`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["D", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1147168047434679, 0.07087869992909313, 0.17375802799834728`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {" ", 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9044771984681836, 0.4543661034189812, 0.5258463811937113], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9044771984681836, 0.4543661034189812, 0.5258463811937113], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["B", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9044771984681836, 0.4543661034189812, 0.5258463811937113], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " "}, {
        InputField["F", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.019761770126833333`, 0.8677294107412583, 0.7532661836221493], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5342925298136001, 0.043451967792813795`, 0.22914160929462124`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["Y", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8163217330502528, 0.682002582332669, 0.8832409621287891], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["W", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5769565879815706, 0.5358305639858452, 0.07983508289552343], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.019761770126833333`, 0.8677294107412583, 0.7532661836221493], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField["U", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5342925298136001, 0.043451967792813795`, 0.22914160929462124`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8163217330502528, 0.682002582332669, 0.8832409621287891], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5769565879815706, 0.5358305639858452, 0.07983508289552343], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["Y", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.019761770126833333`, 0.8677294107412583, 0.7532661836221493], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["D", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9446334406024515, 0.8371141957306079, 0.12753619451904208`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["S", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5342925298136001, 0.043451967792813795`, 0.22914160929462124`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["G", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8163217330502528, 0.682002582332669, 0.8832409621287891], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5769565879815706, 0.5358305639858452, 0.07983508289552343], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.019761770126833333`, 0.8677294107412583, 0.7532661836221493], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08485955760130603, 0.7317815517051836, 0.7427223476379319], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08485955760130603, 0.7317815517051836, 0.7427223476379319], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["P", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08485955760130603, 0.7317815517051836, 0.7427223476379319], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5342925298136001, 0.043451967792813795`, 0.22914160929462124`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8163217330502528, 0.682002582332669, 0.8832409621287891], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["K", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5769565879815706, 0.5358305639858452, 0.07983508289552343], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.019761770126833333`, 0.8677294107412583, 0.7532661836221493], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9446334406024515, 0.8371141957306079, 0.12753619451904208`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5342925298136001, 0.043451967792813795`, 0.22914160929462124`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.29807661778093864`, 0.4012050294450178, 0.3689538483241104], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8163217330502528, 0.682002582332669, 0.8832409621287891], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["U", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.29807661778093864`, 0.4012050294450178, 0.3689538483241104], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5769565879815706, 0.5358305639858452, 0.07983508289552343], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.29807661778093864`, 0.4012050294450178, 0.3689538483241104], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["G", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.019761770126833333`, 0.8677294107412583, 0.7532661836221493], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9446334406024515, 0.8371141957306079, 0.12753619451904208`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["M", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5342925298136001, 0.043451967792813795`, 0.22914160929462124`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5769565879815706, 0.5358305639858452, 0.07983508289552343], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}}, Frame -> All, 
      Background -> GrayLevel[0]], 
     Grid[{{" ", " ", " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8123640975311608, 0.27731820368452453`, 0.44688842845745547`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8123640975311608, 0.27731820368452453`, 0.44688842845745547`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8123640975311608, 0.27731820368452453`, 0.44688842845745547`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8123640975311608, 0.27731820368452453`, 0.44688842845745547`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8123640975311608, 0.27731820368452453`, 0.44688842845745547`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7583982091043695, 0.36346926103511756`, 0.9877840115517693], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7583982091043695, 0.36346926103511756`, 0.9877840115517693], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7583982091043695, 0.36346926103511756`, 0.9877840115517693], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7583982091043695, 0.36346926103511756`, 0.9877840115517693], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7583982091043695, 0.36346926103511756`, 0.9877840115517693], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", " "}, {" ", " ", " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1147168047434679, 0.07087869992909313, 0.17375802799834728`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1147168047434679, 0.07087869992909313, 0.17375802799834728`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1147168047434679, 0.07087869992909313, 0.17375802799834728`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1147168047434679, 0.07087869992909313, 0.17375802799834728`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {" ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9044771984681836, 0.4543661034189812, 0.5258463811937113], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9044771984681836, 0.4543661034189812, 0.5258463811937113], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9044771984681836, 0.4543661034189812, 0.5258463811937113], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.019761770126833333`, 0.8677294107412583, 0.7532661836221493], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5342925298136001, 0.043451967792813795`, 0.22914160929462124`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8163217330502528, 0.682002582332669, 0.8832409621287891], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5769565879815706, 0.5358305639858452, 0.07983508289552343], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.019761770126833333`, 0.8677294107412583, 0.7532661836221493], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5342925298136001, 0.043451967792813795`, 0.22914160929462124`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8163217330502528, 0.682002582332669, 0.8832409621287891], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5769565879815706, 0.5358305639858452, 0.07983508289552343], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.019761770126833333`, 0.8677294107412583, 0.7532661836221493], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9446334406024515, 0.8371141957306079, 0.12753619451904208`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5342925298136001, 0.043451967792813795`, 0.22914160929462124`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8163217330502528, 0.682002582332669, 0.8832409621287891], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5769565879815706, 0.5358305639858452, 0.07983508289552343], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.019761770126833333`, 0.8677294107412583, 0.7532661836221493], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08485955760130603, 0.7317815517051836, 0.7427223476379319], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08485955760130603, 0.7317815517051836, 0.7427223476379319], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.08485955760130603, 0.7317815517051836, 0.7427223476379319], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5342925298136001, 0.043451967792813795`, 0.22914160929462124`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8163217330502528, 0.682002582332669, 0.8832409621287891], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5769565879815706, 0.5358305639858452, 0.07983508289552343], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.019761770126833333`, 0.8677294107412583, 0.7532661836221493], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9446334406024515, 0.8371141957306079, 0.12753619451904208`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5342925298136001, 0.043451967792813795`, 0.22914160929462124`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.29807661778093864`, 0.4012050294450178, 0.3689538483241104], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8163217330502528, 0.682002582332669, 0.8832409621287891], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.29807661778093864`, 0.4012050294450178, 0.3689538483241104], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5769565879815706, 0.5358305639858452, 0.07983508289552343], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.29807661778093864`, 0.4012050294450178, 0.3689538483241104], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.019761770126833333`, 0.8677294107412583, 0.7532661836221493], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9446334406024515, 0.8371141957306079, 0.12753619451904208`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5342925298136001, 0.043451967792813795`, 0.22914160929462124`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5769565879815706, 0.5358305639858452, 0.07983508289552343], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " "}}, Frame -> All, 
      Background -> GrayLevel[0]]}, {5, 
     Grid[{{
        InputField["D", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.05485205759352785, 0.7959598377519024, 0.985590642971004], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3556830575208654, 0.2644573545975393, 0.18665401687518068`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["U", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3556830575208654, 0.2644573545975393, 0.18665401687518068`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["S", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3556830575208654, 0.2644573545975393, 0.18665401687518068`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3556830575208654, 0.2644573545975393, 0.18665401687518068`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3556830575208654, 0.2644573545975393, 0.18665401687518068`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["M", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3556830575208654, 0.2644573545975393, 0.18665401687518068`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.05485205759352785, 0.7959598377519024, 0.985590642971004], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " ", " ", 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5518871865501165, 0.005729078088938744, 0.7172846236394914], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.05485205759352785, 0.7959598377519024, 0.985590642971004], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6076064275231476, 0.44754189702795366`, 0.21812533863648031`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7979069957492562, 0.04664929322718292, 0.24833573468549108`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7979069957492562, 0.04664929322718292, 0.24833573468549108`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7979069957492562, 0.04664929322718292, 0.24833573468549108`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["U", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7979069957492562, 0.04664929322718292, 0.24833573468549108`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5518871865501165, 0.005729078088938744, 0.7172846236394914], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7979069957492562, 0.04664929322718292, 0.24833573468549108`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.05485205759352785, 0.7959598377519024, 0.985590642971004], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6076064275231476, 0.44754189702795366`, 0.21812533863648031`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", " ", 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5518871865501165, 0.005729078088938744, 0.7172846236394914], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {" ", 
        InputField["F", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.943282749132047, 0.3721708949031175, 0.823538631586211],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.943282749132047, 0.3721708949031175, 0.823538631586211],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["Y", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.943282749132047, 0.3721708949031175, 0.823538631586211],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.943282749132047, 0.3721708949031175, 0.823538631586211],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.943282749132047, 0.3721708949031175, 0.823538631586211],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["G", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.943282749132047, 0.3721708949031175, 0.823538631586211],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5518871865501165, 0.005729078088938744, 0.7172846236394914], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["Y", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.33809929279355755`, 0.10179747345720491`, 0.36312341757380695`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["V", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6076064275231476, 0.44754189702795366`, 0.21812533863648031`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", " ", " ", " "}, {
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.33809929279355755`, 0.10179747345720491`, 0.36312341757380695`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6076064275231476, 0.44754189702795366`, 0.21812533863648031`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["W", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5544727485497294, 0.19405396810585285`, 0.5245067529911807], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5544727485497294, 0.19405396810585285`, 0.5245067529911807], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5544727485497294, 0.19405396810585285`, 0.5245067529911807], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["K", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5544727485497294, 0.19405396810585285`, 0.5245067529911807], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5544727485497294, 0.19405396810585285`, 0.5245067529911807], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5544727485497294, 0.19405396810585285`, 0.5245067529911807], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["G", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.33809929279355755`, 0.10179747345720491`, 0.36312341757380695`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", " ", 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7357311046809754, 0.7043857356615582, 0.4116475581785939], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " "}, {
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.33809929279355755`, 0.10179747345720491`, 0.36312341757380695`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.38989527136285895`, 0.17984486924356968`, 0.12749982459350107`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.38989527136285895`, 0.17984486924356968`, 0.12749982459350107`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["P", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.38989527136285895`, 0.17984486924356968`, 0.12749982459350107`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.38989527136285895`, 0.17984486924356968`, 0.12749982459350107`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["B", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7357311046809754, 0.7043857356615582, 0.4116475581785939], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.03428508095535587, 0.9623702183312617, 0.8071052036585034], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.03428508095535587, 0.9623702183312617, 0.8071052036585034], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["D", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.03428508095535587, 0.9623702183312617, 0.8071052036585034], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.33809929279355755`, 0.10179747345720491`, 0.36312341757380695`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", " ", " ", " ", " ", " "}}, Frame -> All, Background -> 
      GrayLevel[0]], 
     Grid[{{
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.05485205759352785, 0.7959598377519024, 0.985590642971004], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3556830575208654, 0.2644573545975393, 0.18665401687518068`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3556830575208654, 0.2644573545975393, 0.18665401687518068`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3556830575208654, 0.2644573545975393, 0.18665401687518068`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3556830575208654, 0.2644573545975393, 0.18665401687518068`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3556830575208654, 0.2644573545975393, 0.18665401687518068`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3556830575208654, 0.2644573545975393, 0.18665401687518068`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.05485205759352785, 0.7959598377519024, 0.985590642971004], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5518871865501165, 0.005729078088938744, 0.7172846236394914], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.05485205759352785, 0.7959598377519024, 0.985590642971004], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6076064275231476, 0.44754189702795366`, 0.21812533863648031`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7979069957492562, 0.04664929322718292, 0.24833573468549108`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7979069957492562, 0.04664929322718292, 0.24833573468549108`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7979069957492562, 0.04664929322718292, 0.24833573468549108`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7979069957492562, 0.04664929322718292, 0.24833573468549108`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5518871865501165, 0.005729078088938744, 0.7172846236394914], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7979069957492562, 0.04664929322718292, 0.24833573468549108`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.05485205759352785, 0.7959598377519024, 0.985590642971004], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6076064275231476, 0.44754189702795366`, 0.21812533863648031`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5518871865501165, 0.005729078088938744, 0.7172846236394914], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {" ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.943282749132047, 0.3721708949031175, 0.823538631586211],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.943282749132047, 0.3721708949031175, 0.823538631586211],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.943282749132047, 0.3721708949031175, 0.823538631586211],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.943282749132047, 0.3721708949031175, 0.823538631586211],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.943282749132047, 0.3721708949031175, 0.823538631586211],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.943282749132047, 0.3721708949031175, 0.823538631586211],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5518871865501165, 0.005729078088938744, 0.7172846236394914], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.33809929279355755`, 0.10179747345720491`, 0.36312341757380695`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6076064275231476, 0.44754189702795366`, 0.21812533863648031`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", " ", " ", " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.33809929279355755`, 0.10179747345720491`, 0.36312341757380695`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6076064275231476, 0.44754189702795366`, 0.21812533863648031`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5544727485497294, 0.19405396810585285`, 0.5245067529911807], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5544727485497294, 0.19405396810585285`, 0.5245067529911807], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5544727485497294, 0.19405396810585285`, 0.5245067529911807], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5544727485497294, 0.19405396810585285`, 0.5245067529911807], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5544727485497294, 0.19405396810585285`, 0.5245067529911807], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5544727485497294, 0.19405396810585285`, 0.5245067529911807], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.33809929279355755`, 0.10179747345720491`, 0.36312341757380695`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7357311046809754, 0.7043857356615582, 0.4116475581785939], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.33809929279355755`, 0.10179747345720491`, 0.36312341757380695`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.38989527136285895`, 0.17984486924356968`, 0.12749982459350107`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.38989527136285895`, 0.17984486924356968`, 0.12749982459350107`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.38989527136285895`, 0.17984486924356968`, 0.12749982459350107`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.38989527136285895`, 0.17984486924356968`, 0.12749982459350107`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7357311046809754, 0.7043857356615582, 0.4116475581785939], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.03428508095535587, 0.9623702183312617, 0.8071052036585034], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.03428508095535587, 0.9623702183312617, 0.8071052036585034], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.03428508095535587, 0.9623702183312617, 0.8071052036585034], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.33809929279355755`, 0.10179747345720491`, 0.36312341757380695`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", " ", " ", " ", " ", " "}}, Frame -> All, Background -> 
      GrayLevel[0]]}, {6, 
     Grid[{{" ", " ", 
        InputField["D", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7024529188150206, 0.9410244250247959, 0.2145161581071453], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.946752641839312, 0.5476331619885422, 0.6980315214174646], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["U", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.946752641839312, 0.5476331619885422, 0.6980315214174646], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["S", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.946752641839312, 0.5476331619885422, 0.6980315214174646], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.946752641839312, 0.5476331619885422, 0.6980315214174646], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.946752641839312, 0.5476331619885422, 0.6980315214174646], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["M", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.946752641839312, 0.5476331619885422, 0.6980315214174646], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.06489454498994451, 0.18280414221051644`, 0.6357672854496743], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7024529188150206, 0.9410244250247959, 0.2145161581071453], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " ", " "}, {
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.06489454498994451, 0.18280414221051644`, 0.6357672854496743], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7024529188150206, 0.9410244250247959, 0.2145161581071453], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.709575760550551, 0.861556213939455, 0.6541963126258734],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6907109123495354, 0.0029458830776130096`, 0.06272996269209274], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.709575760550551, 0.861556213939455, 0.6541963126258734],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["U", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.709575760550551, 0.861556213939455, 0.6541963126258734],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.709575760550551, 0.861556213939455, 0.6541963126258734],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.709575760550551, 0.861556213939455, 0.6541963126258734],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.06489454498994451, 0.18280414221051644`, 0.6357672854496743], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7024529188150206, 0.9410244250247959, 0.2145161581071453], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6907109123495354, 0.0029458830776130096`, 0.06272996269209274], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " "}, {
        InputField["P", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.06489454498994451, 0.18280414221051644`, 0.6357672854496743], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["F", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9058547974782931, 0.26335348448839424`, 0.5748422116537315], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6907109123495354, 0.0029458830776130096`, 0.06272996269209274], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["W", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.41940167233635606`, 0.5326964718270832, 0.6944955667375314], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " "}, {
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.06489454498994451, 0.18280414221051644`, 0.6357672854496743], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9058547974782931, 0.26335348448839424`, 0.5748422116537315], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["V", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6907109123495354, 0.0029458830776130096`, 0.06272996269209274], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.41940167233635606`, 0.5326964718270832, 0.6944955667375314], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " "}, {" ", 
        InputField["B", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.157914001618374, 0.3930684221345586, 0.4779735169200381], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["Y", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9058547974782931, 0.26335348448839424`, 0.5748422116537315], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6907109123495354, 0.0029458830776130096`, 0.06272996269209274], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.41940167233635606`, 0.5326964718270832, 0.6944955667375314], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6619407852119317, 0.9778793296019974, 0.24631871695608965`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["B", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6619407852119317, 0.9778793296019974, 0.24631871695608965`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["Y", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.459437873462595, 0.33387616618798344`, 0.1273340799779854], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.459437873462595, 0.33387616618798344`, 0.1273340799779854], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["G", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.459437873462595, 0.33387616618798344`, 0.1273340799779854], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.459437873462595, 0.33387616618798344`, 0.1273340799779854], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.459437873462595, 0.33387616618798344`, 0.1273340799779854], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["K", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.41940167233635606`, 0.5326964718270832, 0.6944955667375314], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " "}, {" ", 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.157914001618374, 0.3930684221345586, 0.4779735169200381], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9058547974782931, 0.26335348448839424`, 0.5748422116537315], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["M", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3108933511395078, 0.1648059402406037, 0.14728844301612498`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3108933511395078, 0.1648059402406037, 0.14728844301612498`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.41940167233635606`, 0.5326964718270832, 0.6944955667375314], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3108933511395078, 0.1648059402406037, 0.14728844301612498`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3108933511395078, 0.1648059402406037, 0.14728844301612498`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {" ", 
        InputField["D", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.157914001618374, 0.3930684221345586, 0.4779735169200381], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["G", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9058547974782931, 0.26335348448839424`, 0.5748422116537315], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.41940167233635606`, 0.5326964718270832, 0.6944955667375314], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " "}}, 
      Frame -> All, Background -> GrayLevel[0]], 
     Grid[{{" ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7024529188150206, 0.9410244250247959, 0.2145161581071453], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.946752641839312, 0.5476331619885422, 0.6980315214174646], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.946752641839312, 0.5476331619885422, 0.6980315214174646], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.946752641839312, 0.5476331619885422, 0.6980315214174646], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.946752641839312, 0.5476331619885422, 0.6980315214174646], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.946752641839312, 0.5476331619885422, 0.6980315214174646], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.946752641839312, 0.5476331619885422, 0.6980315214174646], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.06489454498994451, 0.18280414221051644`, 0.6357672854496743], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7024529188150206, 0.9410244250247959, 0.2145161581071453], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " ", " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.06489454498994451, 0.18280414221051644`, 0.6357672854496743], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7024529188150206, 0.9410244250247959, 0.2145161581071453], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.709575760550551, 0.861556213939455, 0.6541963126258734],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6907109123495354, 0.0029458830776130096`, 0.06272996269209274], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.709575760550551, 0.861556213939455, 0.6541963126258734],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.709575760550551, 0.861556213939455, 0.6541963126258734],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.709575760550551, 0.861556213939455, 0.6541963126258734],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.709575760550551, 0.861556213939455, 0.6541963126258734],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.06489454498994451, 0.18280414221051644`, 0.6357672854496743], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7024529188150206, 0.9410244250247959, 0.2145161581071453], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6907109123495354, 0.0029458830776130096`, 0.06272996269209274], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.06489454498994451, 0.18280414221051644`, 0.6357672854496743], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9058547974782931, 0.26335348448839424`, 0.5748422116537315], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6907109123495354, 0.0029458830776130096`, 0.06272996269209274], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.41940167233635606`, 0.5326964718270832, 0.6944955667375314], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.06489454498994451, 0.18280414221051644`, 0.6357672854496743], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9058547974782931, 0.26335348448839424`, 0.5748422116537315], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6907109123495354, 0.0029458830776130096`, 0.06272996269209274], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.41940167233635606`, 0.5326964718270832, 0.6944955667375314], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " "}, {" ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.157914001618374, 0.3930684221345586, 0.4779735169200381], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9058547974782931, 0.26335348448839424`, 0.5748422116537315], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6907109123495354, 0.0029458830776130096`, 0.06272996269209274], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.41940167233635606`, 0.5326964718270832, 0.6944955667375314], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6619407852119317, 0.9778793296019974, 0.24631871695608965`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6619407852119317, 0.9778793296019974, 0.24631871695608965`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.459437873462595, 0.33387616618798344`, 0.1273340799779854], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.459437873462595, 0.33387616618798344`, 0.1273340799779854], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.459437873462595, 0.33387616618798344`, 0.1273340799779854], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.459437873462595, 0.33387616618798344`, 0.1273340799779854], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.459437873462595, 0.33387616618798344`, 0.1273340799779854], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.41940167233635606`, 0.5326964718270832, 0.6944955667375314], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " "}, {" ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.157914001618374, 0.3930684221345586, 0.4779735169200381], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9058547974782931, 0.26335348448839424`, 0.5748422116537315], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3108933511395078, 0.1648059402406037, 0.14728844301612498`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3108933511395078, 0.1648059402406037, 0.14728844301612498`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.41940167233635606`, 0.5326964718270832, 0.6944955667375314], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3108933511395078, 0.1648059402406037, 0.14728844301612498`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3108933511395078, 0.1648059402406037, 0.14728844301612498`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {" ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.157914001618374, 0.3930684221345586, 0.4779735169200381], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9058547974782931, 0.26335348448839424`, 0.5748422116537315], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.41940167233635606`, 0.5326964718270832, 0.6944955667375314], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " "}}, 
      Frame -> All, Background -> GrayLevel[0]]}, {6, 
     Grid[{{
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.37212350550037154`, 0.8664847859673923, 0.9094757498656889], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["W", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.21265989686540343`, 0.5697431859798383, 0.49671191034988293`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.21265989686540343`, 0.5697431859798383, 0.49671191034988293`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.21265989686540343`, 0.5697431859798383, 0.49671191034988293`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["K", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.21265989686540343`, 0.5697431859798383, 0.49671191034988293`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.21265989686540343`, 0.5697431859798383, 0.49671191034988293`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.21265989686540343`, 0.5697431859798383, 0.49671191034988293`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.04062340370440065, 0.3260568915200035, 0.8817877899350204], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.04062340370440065, 0.3260568915200035, 0.8817877899350204], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["B", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.04062340370440065, 0.3260568915200035, 0.8817877899350204], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " ", " "}, {
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.37212350550037154`, 0.8664847859673923, 0.9094757498656889], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5019001036071005, 0.5047048868563948, 0.06357655444632515], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["F", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9000377776865511, 0.5448124636192728, 0.14248331016696025`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9000377776865511, 0.5448124636192728, 0.14248331016696025`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["Y", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9000377776865511, 0.5448124636192728, 0.14248331016696025`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9000377776865511, 0.5448124636192728, 0.14248331016696025`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9000377776865511, 0.5448124636192728, 0.14248331016696025`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["G", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9000377776865511, 0.5448124636192728, 0.14248331016696025`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["P", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.37212350550037154`, 0.8664847859673923, 0.9094757498656889], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5019001036071005, 0.5047048868563948, 0.06357655444632515], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " ", " "}, {
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.37212350550037154`, 0.8664847859673923, 0.9094757498656889], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["D", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5019001036071005, 0.5047048868563948, 0.06357655444632515], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9324085588519555, 0.501732116650851, 0.9788184536684261], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["U", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9324085588519555, 0.501732116650851, 0.9788184536684261], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["S", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9324085588519555, 0.501732116650851, 0.9788184536684261], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9324085588519555, 0.501732116650851, 0.9788184536684261], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9324085588519555, 0.501732116650851, 0.9788184536684261], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["M", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9324085588519555, 0.501732116650851, 0.9788184536684261], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0]}, {" ", " ", " ", 
        InputField["M", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.41069785097423783`, 0.9794070196712856, 0.8346121276149983], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.34285390721174425`, 0.18392625380867456`, 0.2626207722051146], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["D", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1092995946687747, 0.30363196675910364`, 0.1846515563539417], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["Y", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9654902333241653, 0.9413218151261309, 0.17207341484744076`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9654902333241653, 0.9413218151261309, 0.17207341484744076`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["G", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9654902333241653, 0.9413218151261309, 0.17207341484744076`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9654902333241653, 0.9413218151261309, 0.17207341484744076`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9654902333241653, 0.9413218151261309, 0.17207341484744076`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.34285390721174425`, 0.18392625380867456`, 0.2626207722051146], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1092995946687747, 0.30363196675910364`, 0.1846515563539417], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.41069785097423783`, 0.9794070196712856, 0.8346121276149983], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", 
        InputField["U", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.34285390721174425`, 0.18392625380867456`, 0.2626207722051146], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1092995946687747, 0.30363196675910364`, 0.1846515563539417], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.039498420956515234`, 0.3198721468027499, 0.14031397693409975`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.41069785097423783`, 0.9794070196712856, 0.8346121276149983], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.039498420956515234`, 0.3198721468027499, 0.14031397693409975`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["V", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.039498420956515234`, 0.3198721468027499, 0.14031397693409975`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.039498420956515234`, 0.3198721468027499, 0.14031397693409975`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.34285390721174425`, 0.18392625380867456`, 0.2626207722051146], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1092995946687747, 0.30363196675910364`, 0.1846515563539417], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.41069785097423783`, 0.9794070196712856, 0.8346121276149983], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.34285390721174425`, 0.18392625380867456`, 0.2626207722051146], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}}, Frame -> 
      All, Background -> GrayLevel[0]], 
     Grid[{{
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.37212350550037154`, 0.8664847859673923, 0.9094757498656889], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.21265989686540343`, 0.5697431859798383, 0.49671191034988293`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.21265989686540343`, 0.5697431859798383, 0.49671191034988293`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.21265989686540343`, 0.5697431859798383, 0.49671191034988293`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.21265989686540343`, 0.5697431859798383, 0.49671191034988293`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.21265989686540343`, 0.5697431859798383, 0.49671191034988293`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.21265989686540343`, 0.5697431859798383, 0.49671191034988293`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.04062340370440065, 0.3260568915200035, 0.8817877899350204], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.04062340370440065, 0.3260568915200035, 0.8817877899350204], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.04062340370440065, 0.3260568915200035, 0.8817877899350204], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " ", " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.37212350550037154`, 0.8664847859673923, 0.9094757498656889], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5019001036071005, 0.5047048868563948, 0.06357655444632515], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9000377776865511, 0.5448124636192728, 0.14248331016696025`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9000377776865511, 0.5448124636192728, 0.14248331016696025`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9000377776865511, 0.5448124636192728, 0.14248331016696025`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9000377776865511, 0.5448124636192728, 0.14248331016696025`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9000377776865511, 0.5448124636192728, 0.14248331016696025`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9000377776865511, 0.5448124636192728, 0.14248331016696025`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.37212350550037154`, 0.8664847859673923, 0.9094757498656889], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5019001036071005, 0.5047048868563948, 0.06357655444632515], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " ", " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.37212350550037154`, 0.8664847859673923, 0.9094757498656889], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5019001036071005, 0.5047048868563948, 0.06357655444632515], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9324085588519555, 0.501732116650851, 0.9788184536684261], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9324085588519555, 0.501732116650851, 0.9788184536684261], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9324085588519555, 0.501732116650851, 0.9788184536684261], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9324085588519555, 0.501732116650851, 0.9788184536684261], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9324085588519555, 0.501732116650851, 0.9788184536684261], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9324085588519555, 0.501732116650851, 0.9788184536684261], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0]}, {" ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.41069785097423783`, 0.9794070196712856, 0.8346121276149983], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.34285390721174425`, 0.18392625380867456`, 0.2626207722051146], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1092995946687747, 0.30363196675910364`, 0.1846515563539417], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9654902333241653, 0.9413218151261309, 0.17207341484744076`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9654902333241653, 0.9413218151261309, 0.17207341484744076`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9654902333241653, 0.9413218151261309, 0.17207341484744076`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9654902333241653, 0.9413218151261309, 0.17207341484744076`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9654902333241653, 0.9413218151261309, 0.17207341484744076`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.34285390721174425`, 0.18392625380867456`, 0.2626207722051146], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1092995946687747, 0.30363196675910364`, 0.1846515563539417], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.41069785097423783`, 0.9794070196712856, 0.8346121276149983], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.34285390721174425`, 0.18392625380867456`, 0.2626207722051146], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1092995946687747, 0.30363196675910364`, 0.1846515563539417], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.039498420956515234`, 0.3198721468027499, 0.14031397693409975`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.41069785097423783`, 0.9794070196712856, 0.8346121276149983], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.039498420956515234`, 0.3198721468027499, 0.14031397693409975`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.039498420956515234`, 0.3198721468027499, 0.14031397693409975`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.039498420956515234`, 0.3198721468027499, 0.14031397693409975`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.34285390721174425`, 0.18392625380867456`, 0.2626207722051146], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1092995946687747, 0.30363196675910364`, 0.1846515563539417], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.41069785097423783`, 0.9794070196712856, 0.8346121276149983], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.34285390721174425`, 0.18392625380867456`, 0.2626207722051146], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " "}}, Frame -> 
      All, Background -> GrayLevel[0]]}, {6, 
     Grid[{{
        InputField["M", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7394398858029332, 0.02134270933502247, 0.16881728441494603`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7394398858029332, 0.02134270933502247, 0.16881728441494603`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7394398858029332, 0.02134270933502247, 0.16881728441494603`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7394398858029332, 0.02134270933502247, 0.16881728441494603`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7394398858029332, 0.02134270933502247, 0.16881728441494603`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["D", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6630923007374729, 0.9670894154020921, 0.8359783490587178], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " "}, {
       " ", " ", " ", " ", " ", 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9862981010372807, 0.17850630854691518`, 0.02680610938575123], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9862981010372807, 0.17850630854691518`, 0.02680610938575123], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9862981010372807, 0.17850630854691518`, 0.02680610938575123], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["P", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9862981010372807, 0.17850630854691518`, 0.02680610938575123], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9862981010372807, 0.17850630854691518`, 0.02680610938575123], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["Y", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16484849880937547`, 0.8380328570111899, 0.640579750749561], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16484849880937547`, 0.8380328570111899, 0.640579750749561], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["G", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16484849880937547`, 0.8380328570111899, 0.640579750749561], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16484849880937547`, 0.8380328570111899, 0.640579750749561], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16484849880937547`, 0.8380328570111899, 0.640579750749561], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6630923007374729, 0.9670894154020921, 0.8359783490587178], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " "}, {
       " ", " ", " ", " ", 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1717171310584935, 0.29774911485800715`, 0.6565771028157288], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.7783539503840367, 0.674015478749298, 0.769845805165682],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.7783539503840367, 0.674015478749298, 0.769845805165682],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["B", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.7783539503840367, 0.674015478749298, 0.769845805165682],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.781555078144407, 0.8200088988993821, 0.5863322985277806], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3589512341365959, 0.4938286705282895, 0.024388104761071894`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1717171310584935, 0.29774911485800715`, 0.6565771028157288], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["F", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.011487663033891149`, 0.19053025509819443`, 0.6614832556751724], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " "}, {
        InputField["U", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.781555078144407, 0.8200088988993821, 0.5863322985277806], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3589512341365959, 0.4938286705282895, 0.024388104761071894`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["V", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1717171310584935, 0.29774911485800715`, 0.6565771028157288], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.011487663033891149`, 0.19053025509819443`, 0.6614832556751724], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " "}, {
        InputField["S", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.781555078144407, 0.8200088988993821, 0.5863322985277806], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3589512341365959, 0.4938286705282895, 0.024388104761071894`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1717171310584935, 0.29774911485800715`, 0.6565771028157288], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["Y", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.011487663033891149`, 0.19053025509819443`, 0.6614832556751724], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["B", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.475680423745668, 0.8308665625775047, 0.8298327786448472], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.781555078144407, 0.8200088988993821, 0.5863322985277806], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["U", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3589512341365959, 0.4938286705282895, 0.024388104761071894`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.011487663033891149`, 0.19053025509819443`, 0.6614832556751724], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.475680423745668, 0.8308665625775047, 0.8298327786448472], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.781555078144407, 0.8200088988993821, 0.5863322985277806], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3589512341365959, 0.4938286705282895, 0.024388104761071894`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["W", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.43197949139404446`, 0.029643368127765912`, 0.5856950746559144], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.43197949139404446`, 0.029643368127765912`, 0.5856950746559144], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.43197949139404446`, 0.029643368127765912`, 0.5856950746559144], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["K", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.43197949139404446`, 0.029643368127765912`, 0.5856950746559144], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.43197949139404446`, 0.029643368127765912`, 0.5856950746559144], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.43197949139404446`, 0.029643368127765912`, 0.5856950746559144], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["M", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.781555078144407, 0.8200088988993821, 0.5863322985277806], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3589512341365959, 0.4938286705282895, 0.024388104761071894`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField["G", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.011487663033891149`, 0.19053025509819443`, 0.6614832556751724], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["D", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.475680423745668, 0.8308665625775047, 0.8298327786448472], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}}, Frame -> All, 
      Background -> GrayLevel[0]], 
     Grid[{{
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7394398858029332, 0.02134270933502247, 0.16881728441494603`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7394398858029332, 0.02134270933502247, 0.16881728441494603`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7394398858029332, 0.02134270933502247, 0.16881728441494603`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7394398858029332, 0.02134270933502247, 0.16881728441494603`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7394398858029332, 0.02134270933502247, 0.16881728441494603`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6630923007374729, 0.9670894154020921, 0.8359783490587178], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " "}, {
       " ", " ", " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9862981010372807, 0.17850630854691518`, 0.02680610938575123], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9862981010372807, 0.17850630854691518`, 0.02680610938575123], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9862981010372807, 0.17850630854691518`, 0.02680610938575123], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9862981010372807, 0.17850630854691518`, 0.02680610938575123], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9862981010372807, 0.17850630854691518`, 0.02680610938575123], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16484849880937547`, 0.8380328570111899, 0.640579750749561], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16484849880937547`, 0.8380328570111899, 0.640579750749561], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16484849880937547`, 0.8380328570111899, 0.640579750749561], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16484849880937547`, 0.8380328570111899, 0.640579750749561], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.16484849880937547`, 0.8380328570111899, 0.640579750749561], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.6630923007374729, 0.9670894154020921, 0.8359783490587178], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " "}, {
       " ", " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1717171310584935, 0.29774911485800715`, 0.6565771028157288], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.7783539503840367, 0.674015478749298, 0.769845805165682],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.7783539503840367, 0.674015478749298, 0.769845805165682],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[0.7783539503840367, 0.674015478749298, 0.769845805165682],
            Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.781555078144407, 0.8200088988993821, 0.5863322985277806], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3589512341365959, 0.4938286705282895, 0.024388104761071894`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1717171310584935, 0.29774911485800715`, 0.6565771028157288], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.011487663033891149`, 0.19053025509819443`, 0.6614832556751724], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.781555078144407, 0.8200088988993821, 0.5863322985277806], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3589512341365959, 0.4938286705282895, 0.024388104761071894`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1717171310584935, 0.29774911485800715`, 0.6565771028157288], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.011487663033891149`, 0.19053025509819443`, 0.6614832556751724], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.781555078144407, 0.8200088988993821, 0.5863322985277806], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3589512341365959, 0.4938286705282895, 0.024388104761071894`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.1717171310584935, 0.29774911485800715`, 0.6565771028157288], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.011487663033891149`, 0.19053025509819443`, 0.6614832556751724], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.475680423745668, 0.8308665625775047, 0.8298327786448472], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.781555078144407, 0.8200088988993821, 0.5863322985277806], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3589512341365959, 0.4938286705282895, 0.024388104761071894`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.011487663033891149`, 0.19053025509819443`, 0.6614832556751724], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.475680423745668, 0.8308665625775047, 0.8298327786448472], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.781555078144407, 0.8200088988993821, 0.5863322985277806], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3589512341365959, 0.4938286705282895, 0.024388104761071894`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.43197949139404446`, 0.029643368127765912`, 0.5856950746559144], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.43197949139404446`, 0.029643368127765912`, 0.5856950746559144], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.43197949139404446`, 0.029643368127765912`, 0.5856950746559144], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.43197949139404446`, 0.029643368127765912`, 0.5856950746559144], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.43197949139404446`, 0.029643368127765912`, 0.5856950746559144], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.43197949139404446`, 0.029643368127765912`, 0.5856950746559144], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.781555078144407, 0.8200088988993821, 0.5863322985277806], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.3589512341365959, 0.4938286705282895, 0.024388104761071894`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.011487663033891149`, 0.19053025509819443`, 0.6614832556751724], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.475680423745668, 0.8308665625775047, 0.8298327786448472], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}}, Frame -> All, 
      Background -> GrayLevel[0]]}, {6, 
     Grid[{{
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.13199397905096966`, 0.9349020902503749, 0.4871177483784248], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["M", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9003220696782215, 0.956261062957148, 0.11452187641361977`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8324356234970416, 0.9905089420803064, 0.8156304030821317], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["U", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8324356234970416, 0.9905089420803064, 0.8156304030821317], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["S", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8324356234970416, 0.9905089420803064, 0.8156304030821317], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8324356234970416, 0.9905089420803064, 0.8156304030821317], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8324356234970416, 0.9905089420803064, 0.8156304030821317], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["M", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8324356234970416, 0.9905089420803064, 0.8156304030821317], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.13199397905096966`, 0.9349020902503749, 0.4871177483784248], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9003220696782215, 0.956261062957148, 0.11452187641361977`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " ", " "}, {
        InputField["B", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.13199397905096966`, 0.9349020902503749, 0.4871177483784248], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4432862499729109, 0.8004765930867108, 0.18899298585697433`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9003220696782215, 0.956261062957148, 0.11452187641361977`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["D", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4432862499729109, 0.8004765930867108, 0.18899298585697433`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5347592620369384, 0.3548032458798833, 0.5040004998845276], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5347592620369384, 0.3548032458798833, 0.5040004998845276], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5347592620369384, 0.3548032458798833, 0.5040004998845276], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["P", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5347592620369384, 0.3548032458798833, 0.5040004998845276], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5347592620369384, 0.3548032458798833, 0.5040004998845276], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0]}, {" ", " ", 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9003220696782215, 0.956261062957148, 0.11452187641361977`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " ", " "}, {" ", 
        InputField["F", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.051264730031884476`, 0.7367012699090196, 0.3367441455576645], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.051264730031884476`, 0.7367012699090196, 0.3367441455576645], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["Y", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.051264730031884476`, 0.7367012699090196, 0.3367441455576645], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.051264730031884476`, 0.7367012699090196, 0.3367441455576645], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.051264730031884476`, 0.7367012699090196, 0.3367441455576645], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["G", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.051264730031884476`, 0.7367012699090196, 0.3367441455576645], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9449303891011971, 0.8218247548944799, 0.5143129254148864], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.558079327436271, 0.6795289191196867, 0.06158819866813281], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " ", " ", 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9449303891011971, 0.8218247548944799, 0.5143129254148864], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.558079327436271, 0.6795289191196867, 0.06158819866813281], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["D", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7844041114348097, 0.5290165517933592, 0.5074761625189892], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["Y", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8767793839542397, 0.8623142886039266, 0.8569845715018876], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["O", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8767793839542397, 0.8623142886039266, 0.8569845715018876], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["G", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8767793839542397, 0.8623142886039266, 0.8569845715018876], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8767793839542397, 0.8623142886039266, 0.8569845715018876], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["C", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8767793839542397, 0.8623142886039266, 0.8569845715018876], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["R", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.558079327436271, 0.6795289191196867, 0.06158819866813281], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7844041114348097, 0.5290165517933592, 0.5074761625189892], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", 
        InputField["U", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9449303891011971, 0.8218247548944799, 0.5143129254148864], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField["V", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.558079327436271, 0.6795289191196867, 0.06158819866813281], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["A", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7844041114348097, 0.5290165517933592, 0.5074761625189892], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["W", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2958011481950089, 0.927265900441191, 0.9828559344232535], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["I", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2958011481950089, 0.927265900441191, 0.9828559344232535], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2958011481950089, 0.927265900441191, 0.9828559344232535], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["K", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2958011481950089, 0.927265900441191, 0.9828559344232535], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["L", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2958011481950089, 0.927265900441191, 0.9828559344232535], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2958011481950089, 0.927265900441191, 0.9828559344232535], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField["E", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.558079327436271, 0.6795289191196867, 0.06158819866813281], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField["N", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7844041114348097, 0.5290165517933592, 0.5074761625189892], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", 
        InputField["T", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9449303891011971, 0.8218247548944799, 0.5143129254148864], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}}, Frame -> All, 
      Background -> GrayLevel[0]], 
     Grid[{{
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.13199397905096966`, 0.9349020902503749, 0.4871177483784248], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9003220696782215, 0.956261062957148, 0.11452187641361977`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8324356234970416, 0.9905089420803064, 0.8156304030821317], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8324356234970416, 0.9905089420803064, 0.8156304030821317], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8324356234970416, 0.9905089420803064, 0.8156304030821317], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8324356234970416, 0.9905089420803064, 0.8156304030821317], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8324356234970416, 0.9905089420803064, 0.8156304030821317], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8324356234970416, 0.9905089420803064, 0.8156304030821317], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.13199397905096966`, 0.9349020902503749, 0.4871177483784248], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9003220696782215, 0.956261062957148, 0.11452187641361977`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " ", " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.13199397905096966`, 0.9349020902503749, 0.4871177483784248], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4432862499729109, 0.8004765930867108, 0.18899298585697433`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9003220696782215, 0.956261062957148, 0.11452187641361977`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.4432862499729109, 0.8004765930867108, 0.18899298585697433`], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5347592620369384, 0.3548032458798833, 0.5040004998845276], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5347592620369384, 0.3548032458798833, 0.5040004998845276], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5347592620369384, 0.3548032458798833, 0.5040004998845276], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5347592620369384, 0.3548032458798833, 0.5040004998845276], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.5347592620369384, 0.3548032458798833, 0.5040004998845276], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0]}, {" ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9003220696782215, 0.956261062957148, 0.11452187641361977`], Bold,
            Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " ", " "}, {" ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.051264730031884476`, 0.7367012699090196, 0.3367441455576645], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.051264730031884476`, 0.7367012699090196, 0.3367441455576645], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.051264730031884476`, 0.7367012699090196, 0.3367441455576645], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.051264730031884476`, 0.7367012699090196, 0.3367441455576645], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.051264730031884476`, 0.7367012699090196, 0.3367441455576645], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.051264730031884476`, 0.7367012699090196, 0.3367441455576645], 
           Bold, Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9449303891011971, 0.8218247548944799, 0.5143129254148864], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.558079327436271, 0.6795289191196867, 0.06158819866813281], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", " ", " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9449303891011971, 0.8218247548944799, 0.5143129254148864], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.558079327436271, 0.6795289191196867, 0.06158819866813281], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7844041114348097, 0.5290165517933592, 0.5074761625189892], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8767793839542397, 0.8623142886039266, 0.8569845715018876], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8767793839542397, 0.8623142886039266, 0.8569845715018876], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8767793839542397, 0.8623142886039266, 0.8569845715018876], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8767793839542397, 0.8623142886039266, 0.8569845715018876], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.8767793839542397, 0.8623142886039266, 0.8569845715018876], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.558079327436271, 0.6795289191196867, 0.06158819866813281], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7844041114348097, 0.5290165517933592, 0.5074761625189892], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9449303891011971, 0.8218247548944799, 0.5143129254148864], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.558079327436271, 0.6795289191196867, 0.06158819866813281], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7844041114348097, 0.5290165517933592, 0.5074761625189892], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2958011481950089, 0.927265900441191, 0.9828559344232535], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2958011481950089, 0.927265900441191, 0.9828559344232535], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2958011481950089, 0.927265900441191, 0.9828559344232535], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2958011481950089, 0.927265900441191, 0.9828559344232535], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2958011481950089, 0.927265900441191, 0.9828559344232535], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.2958011481950089, 0.927265900441191, 0.9828559344232535], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0]}, {
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.558079327436271, 0.6795289191196867, 0.06158819866813281], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.7844041114348097, 0.5290165517933592, 0.5074761625189892], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " ", " ", " ", " ", 
        " ", 
        InputField[" ", String, FieldSize -> {0.85, 0.85}, BaseStyle -> {
           RGBColor[
           0.9449303891011971, 0.8218247548944799, 0.5143129254148864], Bold, 
           Larger, FontSize -> 25}, ImageMargins -> 0], " "}}, Frame -> All, 
      Background -> GrayLevel[0]]}}],
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.867403697195879*^9, 3.867403717957008*^9}},
 CellLabel->"Out[107]=",
 CellID->391546226,ExpressionUUID->"a01858a5-7cb0-41c5-847d-6d3331093dd2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 TaggingRules->{},
 CellChangeTimes->{{3.866902579267787*^9, 3.8669025995933723`*^9}, {
  3.866902646196124*^9, 3.866902647454269*^9}},
 CellID->1847366805,ExpressionUUID->"e1eae2c2-2970-4cb5-9b53-e36f8888c062"],

Cell[TextData[{
 "Wikipedia, ",
 ButtonBox["Boolean satisfiability problem",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Boolean_satisfiability_problem"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Boolean_satisfiability_problem"]
}], "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.867156888926763*^9, 3.86715689025108*^9}, 
   3.867159732230534*^9, {3.867317372455072*^9, 3.867317372459001*^9}, {
   3.867404126365337*^9, 3.867404150063714*^9}},
 CellID->640944848,ExpressionUUID->"93652e8e-873c-44c7-975d-225347d23b26"],

Cell[TextData[{
 "Aruj Bansal, ",
 ButtonBox["[Tutorial] 2-SAT",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://codeforces.com/blog/entry/92977"], None},
  ButtonNote->"https://codeforces.com/blog/entry/92977"],
 ", July 2021"
}], "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.867156888926763*^9, 3.86715689025108*^9}, 
   3.867159732230534*^9, 3.867317372752264*^9, {3.8673183969949503`*^9, 
   3.8673183969980097`*^9}, {3.867403964567384*^9, 3.867404033017447*^9}},
 CellID->843009373,ExpressionUUID->"1b5d2cd0-62d4-4b99-8003-11056d771995"],

Cell[TextData[{
 "Dimitri Bohlender, ",
 ButtonBox["Generating Crosswords via SAT/SMT",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://bohlender.pro/blog/generating-crosswords-with-sat-smt/"], 
    None},
  ButtonNote->
   "https://bohlender.pro/blog/generating-crosswords-with-sat-smt/"],
 ", October 2020"
}], "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.867156888926763*^9, 3.86715689025108*^9}, 
   3.867159732230534*^9, 3.867317372752264*^9, 3.8673183971563883`*^9, {
   3.867404082992979*^9, 3.8674041229077682`*^9}},
 CellID->784853913,ExpressionUUID->"b498c9ff-2e7a-4110-8827-ce858206927c"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
   CellTags -> {"MainDockedCell"}, CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   CellFrameMargins -> {{39, 5}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CacheGraphics -> False, CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PrintingOptions->{"PaperOrientation"->"Portrait",
"PaperSize"->{595, 842}},
TaggingRules->{
 "ResourceType" -> "ComputationalEssay", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> <||>, "CreationTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "UpdatedTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "CompatibilityTest" -> 
  HoldComplete[
    BinaryDeserialize[
     ByteArray[{56, 67, 58, 120, 156, 133, 143, 205, 78, 131, 64, 20, 133, 
      163, 173, 110, 116, 213, 165, 79, 224, 6, 70, 11, 105, 138, 59, 197, 
      198, 184, 193, 70, 92, 184, 100, 24, 238, 164, 83, 7, 46, 153, 123, 41, 
      229, 237, 29, 140, 186, 193, 196, 245, 249, 249, 206, 209, 115, 90, 164,
       88, 183, 216, 53, 213, 230, 216, 58, 32, 50, 216, 232, 19, 58, 203, 0, 
      42, 202, 175, 95, 129, 176, 115, 10, 242, 129, 24, 234, 212, 26, 104, 
      184, 120, 4, 109, 26, 195, 222, 153, 33, 67, 137, 248, 81, 232, 83, 154,
       229, 192, 62, 25, 252, 25, 217, 58, 115, 144, 12, 133, 69, 89, 253, 24,
       222, 134, 22, 124, 238, 242, 222, 50, 184, 70, 178, 57, 0, 229, 87, 
      227, 156, 142, 229, 216, 46, 237, 134, 72, 14, 191, 133, 139, 169, 70, 
      243, 172, 179, 214, 99, 207, 159, 253, 11, 55, 14, 184, 72, 45, 118, 
      213, 75, 185, 7, 197, 249, 251, 142, 185, 165, 59, 33, 250, 190, 15, 
      123, 180, 218, 201, 90, 141, 122, 168, 176, 22, 88, 238, 133, 251, 110, 
      167, 175, 185, 98, 138, 72, 177, 97, 127, 65, 248, 215, 217, 195, 86, 
      178, 218, 133, 253, 81, 123, 208, 236, 9, 38, 188, 205, 191, 188, 106, 
      149, 68, 55, 75, 121, 27, 64, 164, 203, 32, 6, 41, 131, 36, 134, 117, 
      160, 228, 58, 74, 226, 74, 173, 202, 104, 249, 9, 89, 192, 149, 140}]]],
   "ToolsOpen" -> False, "StatusMessage" -> "", "TryRealOnly" -> False, 
  "AutoUpdate" -> True, "AttachedHints" -> {
    CellObject[461057], 
    CellObject[461153]}},
CreateCellID->True,
SpellingDictionaries->{"CorrectWords"->{"Aruj", "Bansal", "Bohlender"}},
FrontEndVersion->"13.1 for Mac OS X ARM (64-bit) (June 21, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
       CellTags -> {"MainDockedCell"}, CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{39, 5}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    AutoQuoteCharacters -> {}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.458824, 0.458824, 0.458824]], 
   
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[
               0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
                1.]]}, StripOnInput -> False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "]]}, {
              FaceForm[
               RGBColor[
               0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
                1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, 
           ImageSize -> {11., 11.}, PlotRange -> {{0., 11.}, {0., 11.}}, 
           AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
           "\"Click for more information\""}, "PrettyTooltipTemplate"], 
         ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ParentCell[
              EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}]]; 
          If[
            And[
             MatchQ[
              CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ParentCell[
                EvaluationCell[]], {
               TaggingRules, "AttachedMoreInfoTag"}] === #], CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ParentCell[
                 EvaluationCell[]], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
          "PrettyTooltipTemplate"], ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] === #],
             CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ReleaseHold[#3], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.75], 
                 Thickness[
                  NCache[
                   Rational[2, 45], 0.044444444444444446`]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.5], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], 
                    Graphics[{
                    RGBColor[
                    0.9882352941176471, 0.4196078431372549, 
                    0.20392156862745098`], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]], 
                    "Click to copy to the clipboard"], 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Graphics[{
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "Copied"]], UpdateInterval -> 
                    1, TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain", 
           StripOnInput -> False], Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8, StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain"], 
          Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8], "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           ButtonBox[
            StyleBox[
            "\"Insert Code Group\"", "Text", FontFamily -> "Source Sans Pro", 
             FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
            With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = RSNB`$cp$, 
                 ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                 False}, 
                Internal`WithLocalSettings[
                 ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                  Needs["ResourceSystemClient`DefinitionNotebook`"], 
                  ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  RSNB`nb$, 
                   
                   ComputationalEssayHelpers`Private`\
createComputationalParagraph[]], 
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
            BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue[Enabled], 
               FEPrivate`If[
                CurrentValue["MouseOver"], {
                FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                FontColor -> 
                 RGBColor[
                  0.17960779999999998`, 0.17960779999999998`, 
                   0.17960779999999998`]}], {
               FontColor -> 
                RGBColor[
                 0.5898038999999999, 0.5898038999999999, 
                  0.5898038999999999]}], Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
            Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
            "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
            Evaluator -> Automatic], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Headings\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Section", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "4") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Section"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsection", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "5") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsubsection", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "6") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsubsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], Delimiter, DynamicBox[
               ToBoxes[
                
                Grid[{{"Title", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "1") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Title"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subtitle", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "2") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subtitle"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Chapter", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "3") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Chapter"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Author\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Author"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Abstract\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Abstract"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Text\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Text", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "7") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Text"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"CodeText", ((((" (" <> "Shift+") <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "7") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "CodeText"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Item\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Item"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             StyleBox[
              
              TemplateBox[{
               "\"Open/Close Groups\"", 
                "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\"\
"}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
              StripOnInput -> False], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {
            "\"Open Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {1 -> RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "ColumnsIndexed" -> {1 -> 0, -1 -> 0}, "Rows" -> {{Automatic}}}, 
         FrameStyle -> GrayLevel[0.75]], "Grid"]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Thickness[0.03333333333333333], {
                   FaceForm[{
                    RGBColor[
                    0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27.,
                     1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                    2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                   FaceForm[{
                    RGBColor[0.898, 0.898, 0.898], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23.,
                     2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.,
                     2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                    5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                    4.}, {11., 3.}, {8., 3.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
                    0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{9.697299999999998, 24.522}, {
                    9.133299999999998, 24.645}, {8.861299999999998, 
                    24.259999999999998`}, {9.313299999999998, 24.092}}, {{
                    9.291299999999998, 23.933}, {8.9683, 
                    24.052999999999997`}, {9.2183, 23.726999999999997`}, {
                    9.587299999999999, 23.601}}, {{9.553299999999998, 
                    23.447}, {9.169299999999998, 23.578}, {8.760299999999999, 
                    23.456999999999997`}, {9.102299999999998, 
                    23.348999999999997`}}, {{9.083299999999998, 22.633}, {
                    9.025299999999998, 23.208}, {8.567299999999998, 23.354}, {
                    8.555299999999999, 22.865}}, {{8.521299999999998, 
                    23.551}, {9.039299999999999, 23.703}, {8.711299999999998, 
                    24.13}, {8.2183, 23.962999999999997`}}, {{8.4073, 
                    23.197}, {8.171299999999999, 22.851}, {8.171299999999999, 
                    22.445}, {8.398299999999999, 22.837}}, {{
                    8.091299999999999, 23.014}, {8.395299999999999, 23.458}, {
                    8.091299999999999, 23.871}, {7.786299999999999, 
                    23.458}}, {{8.010299999999999, 22.851}, {
                    7.773299999999999, 23.197}, {7.782299999999998, 22.837}, {
                    8.010299999999999, 22.445}}, {{7.964299999999999, 
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                    7.141299999999999, 23.703}, {7.659299999999998, 
                    23.551}}, {{7.626299999999999, 22.865}, {
                    7.614299999999998, 23.354}, {7.155299999999999, 23.209}, {
                    7.097299999999999, 22.633999999999997`}}, {{
                    7.078299999999999, 23.348999999999997`}, {
                    7.422299999999998, 23.456999999999997`}, {
                    7.0112999999999985`, 23.578}, {6.6282999999999985`, 
                    23.447}}, {{6.593299999999998, 23.601}, {
                    6.962299999999999, 23.726999999999997`}, {
                    7.214299999999998, 24.054}, {6.889299999999999, 
                    23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                    7.319299999999998, 24.259999999999998`}, {
                    7.0482999999999985`, 24.645}, {6.484299999999998, 
                    24.522}}, {{7.113299999999999, 25.217}, {
                    7.158299999999999, 24.761}, {7.356299999999999, 
                    24.479999999999997`}, {7.344299999999999, 24.904}}, {{
                    7.5032999999999985`, 24.817999999999998`}, {
                    7.518299999999998, 24.279}, {8.010299999999999, 24.113}, {
                    8.010299999999999, 24.637999999999998`}}, {{
                    7.2452999999999985`, 25.302}, {7.4712999999999985`, 
                    24.997}, {7.8622999999999985`, 24.857}, {
                    7.656299999999998, 25.122}}, {{7.800299999999998, 
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                    25.192}, {8.091299999999999, 25.689}}, {{
                    8.171299999999999, 24.637999999999998`}, {
                    8.171299999999999, 24.113}, {8.663299999999998, 24.279}, {
                    8.677299999999999, 24.817999999999998`}}, {{
                    8.836299999999998, 24.904}, {8.8243, 
                    24.479999999999997`}, {9.022299999999998, 24.761}, {
                    9.068299999999999, 25.217}}, {{8.318299999999999, 
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                    25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                    "]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.,
                     25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                    26.}, {11., 26.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {
                    24., 20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 
                    20.}, {18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {
                    10., 19.}, {6., 19.}}, {{11., 19.}, {17., 19.}, {17., 
                    18.}, {11., 18.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                    "]]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                    "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                    "]}]}}}, {
                ImageSize -> {Automatic, 32}, 
                 ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                 Scaled[0.25], AspectRatio -> Automatic, 
                 ImageSize -> {30., 30.}, 
                 PlotRange -> {{0., 30.}, {0., 30.}}}], 
               StyleBox[
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"Computational Essay\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                StripOnInput -> False]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", "\"\""}, {
          
           ActionMenuBox[
            TemplateBox[{
              TemplateBox[{
                TemplateBox[{"\"Sample Content\"", 
                  TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                 "RowDefault"], 
                "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\""}, "PrettyTooltipTemplate"], Null& , 
              "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\"", True}, "OrangeButtonTemplate"], {
            "\"Insert Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`insertSampleContent[]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Clear Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    Module[{$CellContext`cells = Flatten[
                    Map[{NotebookFind[
                    ButtonNotebook[], #, All, CellTags, AutoScroll -> False]; 
                    SelectedCells[]}& , {
                    "ExampleTopicSentence", "TopicSentenceButton", 
                    "ExampleCodeText", "ExampleInput", "ExampleOutput", 
                    "EssayStructureExample", "CitationExample", 
                    "SectionMoreInfoYourEssayTitle", 
                    "SectionMoreInfoAuthorInfoButton", 
                    "SectionMoreInfoAbstract", 
                    "SectionMoreInfoSectionHeaderInfoButton"}]]}, 
                    NotebookDelete[$CellContext`cells]]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sample Essay\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    SystemOpen["https://wolfr.am/SampleEssay"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           
           TemplateBox[{
            "\"Open Guidelines\"", SystemOpen[
             "https://wolfr.am/ComputationalEssayGuidelines"]& , "\"\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             TemplateBox[{
               TagBox[
                GridBox[{{"\"Tools\"", 
                   PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{0., 0.65}, {0., -0.65}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None], True -> 
                    GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[-0.1]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
               "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`ToggleToolbar[
              ButtonNotebook[]]& , "\"Toggle documentation toolbar\"", False},
             "OrangeButtonTemplate"], 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxDividers -> {
              "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
             RGBColor[0.99215, 0.843125, 0.68235]], "Grid"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Check\"", "\"Check notebook for potential errors\""}, 
              "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`CheckDefinitionNotebook[
              ButtonNotebook[]]& , "\"Check notebook for potential errors\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Publish to Cloud\"", 
               "\"Publish your computational essay to the cloud\""}, 
              "PrettyTooltipTemplate"], 
             With[{$CellContext`nb = ButtonNotebook[]}, CreateDialog[
                
                ComputationalEssayHelpers`Private`createSubmissionDialog[$\
CellContext`nb], WindowSize -> {350, 150}, Background -> White, WindowFrame -> 
                "Normal", "Evaluator" -> "System"]; Null]& , 
             "\"Publish your computational essay to the cloud\"", False}, 
            "OrangeButtonTemplate"], 
           ItemBox[
            StyleBox[
             DynamicBox[
              ToBoxes[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
               StandardForm], Evaluator -> "System", 
              Initialization :> (CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
               "")], "Text", 
             GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
            StripOnInput -> False], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Submit to Notebook Archive\"", 
               "\"Submit your essay to the Wolfram Notebook Archive\""}, 
              "PrettyTooltipTemplate"], 
             ComputationalEssayHelpers`Private`submitEssay[]& , 
             "\"Submit your essay to the Wolfram Notebook Archive\"", False}, 
            "OrangeButtonTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
           "Rows" -> {{Center}}}, AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.9843, 0.68625, 0.3647], 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {
            1 -> RGBColor[0.9843, 0.68625, 0.3647], 2 -> 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "Columns" -> {5, {0.9}, 5}, 
           "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 1.55}}, FrameStyle -> 
         RGBColor[0.9843, 0.68625, 0.3647]], "Grid"]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{{
                Thickness[0.03333333333333333], {
                 FaceForm[{
                   RGBColor[
                   0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27., 
                  1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                  2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                 FaceForm[{
                   RGBColor[0.898, 0.898, 0.898], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 
                  2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22., 
                  2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                  5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                  4.}, {11., 3.}, {8., 3.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{9.697299999999998, 24.522}, {9.133299999999998, 
                   24.645}, {8.861299999999998, 24.259999999999998`}, {
                   9.313299999999998, 24.092}}, {{9.291299999999998, 
                   23.933}, {8.9683, 24.052999999999997`}, {9.2183, 
                   23.726999999999997`}, {9.587299999999999, 23.601}}, {{
                   9.553299999999998, 23.447}, {9.169299999999998, 23.578}, {
                   8.760299999999999, 23.456999999999997`}, {
                   9.102299999999998, 23.348999999999997`}}, {{
                   9.083299999999998, 22.633}, {9.025299999999998, 23.208}, {
                   8.567299999999998, 23.354}, {8.555299999999999, 
                   22.865}}, {{8.521299999999998, 23.551}, {9.039299999999999,
                    23.703}, {8.711299999999998, 24.13}, {8.2183, 
                   23.962999999999997`}}, {{8.4073, 23.197}, {
                   8.171299999999999, 22.851}, {8.171299999999999, 22.445}, {
                   8.398299999999999, 22.837}}, {{8.091299999999999, 
                   23.014}, {8.395299999999999, 23.458}, {8.091299999999999, 
                   23.871}, {7.786299999999999, 23.458}}, {{8.010299999999999,
                    22.851}, {7.773299999999999, 23.197}, {7.782299999999998, 
                   22.837}, {8.010299999999999, 22.445}}, {{7.964299999999999,
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                   7.141299999999999, 23.703}, {7.659299999999998, 
                   23.551}}, {{7.626299999999999, 22.865}, {7.614299999999998,
                    23.354}, {7.155299999999999, 23.209}, {7.097299999999999, 
                   22.633999999999997`}}, {{7.078299999999999, 
                   23.348999999999997`}, {7.422299999999998, 
                   23.456999999999997`}, {7.0112999999999985`, 23.578}, {
                   6.6282999999999985`, 23.447}}, {{6.593299999999998, 
                   23.601}, {6.962299999999999, 23.726999999999997`}, {
                   7.214299999999998, 24.054}, {6.889299999999999, 
                   23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                   7.319299999999998, 24.259999999999998`}, {
                   7.0482999999999985`, 24.645}, {6.484299999999998, 
                   24.522}}, {{7.113299999999999, 25.217}, {7.158299999999999,
                    24.761}, {7.356299999999999, 24.479999999999997`}, {
                   7.344299999999999, 24.904}}, {{7.5032999999999985`, 
                   24.817999999999998`}, {7.518299999999998, 24.279}, {
                   8.010299999999999, 24.113}, {8.010299999999999, 
                   24.637999999999998`}}, {{7.2452999999999985`, 25.302}, {
                   7.4712999999999985`, 24.997}, {7.8622999999999985`, 
                   24.857}, {7.656299999999998, 25.122}}, {{7.800299999999998,
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                   25.192}, {8.091299999999999, 25.689}}, {{8.171299999999999,
                    24.637999999999998`}, {8.171299999999999, 24.113}, {
                   8.663299999999998, 24.279}, {8.677299999999999, 
                   24.817999999999998`}}, {{8.836299999999998, 24.904}, {
                   8.8243, 24.479999999999997`}, {9.022299999999998, 
                   24.761}, {9.068299999999999, 25.217}}, {{8.318299999999999,
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                   25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                   "]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11., 
                  25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                  26.}, {11., 26.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {24.,
                   20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 20.}, {
                  18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {10., 19.}, {
                  6., 19.}}, {{11., 19.}, {17., 19.}, {17., 18.}, {11., 
                  18.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                  "]]}, {
                 FaceForm[{
                   RGBColor[0.392, 0.392, 0.392], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                   "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                   "]}]}}}, {
              ImageSize -> 12, AspectRatio -> Automatic, 
               ImageSize -> {30., 30.}, PlotRange -> {{0., 30.}, {0., 30.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
         "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
         Dynamic[
           FEPrivate`If[
            CurrentValue[Enabled], 
            GrayLevel[1], 
            RGBColor[0.8730375, 0.83578125, 0.7955875]], Evaluator -> 
           "System"], StripOnInput -> False], ButtonFunction :> 
        With[{RSNB`nb$ = ButtonNotebook[]}, 
          If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
            ProgressIndicator[Appearance -> "Necklace"]]; 
          With[{RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False}, 
              Internal`WithLocalSettings[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; 
                Needs["ResourceSystemClient`DefinitionNotebook`"], 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                RSNB`nb$, 
                 #2[]], 
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 False; Null]; Null]]]; 
          CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; Null],
         FrameMargins -> {{5, 5}, {0, 0}}, 
        Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1R5n1BhlAEFANlwxXNmaCoem
KIPacD1kBBQBisOVba1zbos1QlMDQUBxoCzEtUAtjRhGQVAj2EAGMCBGGZGm
Ee82In1KfLgREwvExCkA9SYWEg==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1Zds2ptsAkFANlwxXNmaCoee
JJP7c4J/r4+FICAbKAIUhyvbWufcn2L6eH4IXA0EAUWA4kBZiGuBWiammqGp
gSCgOFCWAQyIUUakacS7jUifEh9uxMQCMXEKAB4IRIc=
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaNDUxIhCFkQWRlQ6vOz678/PIEgIBuuGK7s6Iz0
X++f/DnY+Ht9LAQB2UARoDhc2c4Wry/Pb/zZVw1XA1W5rxooDpSFuBZk1Nv7
aGogCCgOlGUAA2KUEWka8W4j0qfEhxsxsUBMnAIAq2R1ew==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
        Background -> RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
        Method -> "Queued", ImageSize -> {All, 23}, Enabled -> Dynamic[
          Not[
           TrueQ[ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
          TrackedSymbols :> {
           ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
        Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              AdjustmentBox[
               TemplateBox[{
                 ActionMenuBox[
                  TagBox[
                   PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                   MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                  Method -> "Queued"], "\"View suggestions\""}, 
                "PrettyTooltipTemplate"], BoxBaselineShift -> -0.3]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -1.}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05555555555555555], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh4qXaoYcOfoO
m+a+X37stKZDbP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4PzZRxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA8nn+Z
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.175292500000001, 
             7.416875}, {7.796855000000001, 11.3084375}, {7.796855000000001, 
             13.38}, {10.11998, 13.38}, {10.11998, 11.3084375}, {
             9.741542500000001, 7.416875}, {8.175292500000001, 
             7.416875}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/cTvZcLf/4oOD6tE1rk/5HNQjDzAkqeL4FsusdsW
1KjgwAAGAg7hCSdehX2Xd5BvfR24Q07QwaZCOJPjjZyDHdf1xQW2Qg56LJYa
iWlyDv2HvmrEzBeG80GmVbmIwvkvtjT6Sb8Qg+t/BLLPUwJuPti6DEm4/WD7
2qTg7gMZJyIm7QBzP4y/zEVob88lJTi/7+dk7hV1ynD9c3LzfPxZVODmr3ro
0futUwVu/0bpbbqnzqjA3Qfjw9wP48P8B9MP8z/MfFj4wOyHhR/MfbDwRQ9/
ACBxmlc=
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.7185389999999999, 0.5009625, 0.266231]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.47902599999999995`, 0.333975, 0.17748733333333333`]], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.854902, 0.396078, 0.145098], 
       RGBColor[
       0.0196078431372549, 0.28627450980392155`, 0.6509803921568628]]]], 
   Cell[
    StyleData["StringTypeLink"], 
    TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        DynamicBox[
         If[
          CurrentValue["MouseOver"], 
          ButtonBox[
           
           StyleBox[#, FontColor -> 
            RGBColor[0.9686274509803922, 0.4666666666666667, 0.]], 
           ButtonData -> #2], 
          ButtonBox[#, ButtonData -> #2]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {
     BaseStyle -> {FontColor -> GrayLevel[0.46666667], "Link"}}], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.905882]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, StyleMenuListing -> None, Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.880722, 0.611041, 0.142051], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.9821083, 0.94165615, 0.87130765]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.368417, 0.506779, 0.709798], Background -> 
    RGBColor[0.90526255, 0.92601685, 0.9564697]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.560181, 0.691569, 0.194885], Background -> 
    RGBColor[0.9340271499999999, 0.95373535, 0.87923275]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    RGBColor[0.898039, 0.898039, 0.898039]], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}]}, Visible -> False, 
  FrontEndVersion -> "13.1 for Mac OS X ARM (64-bit) (June 21, 2022)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"58bceecf-a0f8-4b3d-b062-6df51c86ee81"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Examples"->{
  Cell[583, 22, 280, 4, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "Your Essay Title"->{
  Cell[583, 22, 280, 4, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "AuthorName"->{
  Cell[866, 28, 268, 6, 32, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
   CellTags->"AuthorName",
   CellID->960727095]},
 "Abstract"->{
  Cell[1137, 36, 1216, 20, 108, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "TemplateCell"->{
  Cell[1137, 36, 1216, 20, 108, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "SectionHeader"->{
  Cell[2378, 60, 274, 5, 67, "Section",ExpressionUUID->"849c21e6-34ac-43f9-ad41-3a00597c0248",
   CellTags->"SectionHeader",
   CellID->453852445]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Examples", 799088, 15532},
 {"Your Essay Title", 799274, 15536},
 {"AuthorName", 799454, 15540},
 {"Abstract", 799613, 15544},
 {"TemplateCell", 799798, 15548},
 {"SectionHeader", 799984, 15552}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 280, 4, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577],
Cell[866, 28, 268, 6, 32, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
 CellTags->"AuthorName",
 CellID->960727095],
Cell[1137, 36, 1216, 20, 108, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573],
Cell[CellGroupData[{
Cell[2378, 60, 274, 5, 67, "Section",ExpressionUUID->"849c21e6-34ac-43f9-ad41-3a00597c0248",
 CellTags->"SectionHeader",
 CellID->453852445],
Cell[2655, 67, 1977, 33, 81, "Text",ExpressionUUID->"5f2b45a3-ce89-4555-920d-dc925c365a04",
 CellID->1865274427],
Cell[4635, 102, 1135, 18, 32, "Item",ExpressionUUID->"5a46b116-cd97-4cbc-a9b6-ed2dc80694c4",
 CellID->152521665],
Cell[5773, 122, 1495, 26, 32, "Item",ExpressionUUID->"16ba0445-d156-4f54-a378-faf5e7419749",
 CellID->277751525],
Cell[7271, 150, 357, 7, 38, "CodeText",ExpressionUUID->"1b29ad84-30c2-4a10-912c-5e91eb6e8140",
 CellID->816550230],
Cell[7631, 159, 629, 16, 52, "Code",ExpressionUUID->"4e630832-4324-4824-aa5d-86b367ad8eb3",
 CellID->886335147],
Cell[8263, 177, 1728, 36, 34, "Item",ExpressionUUID->"9dee6b0f-7a49-413c-982b-1831e9a49f2f",
 CellID->1323558088],
Cell[9994, 215, 1828, 39, 32, "Item",ExpressionUUID->"f2a6d553-6d6b-42a0-9dcf-c042b1d3a552",
 CellID->238392932],
Cell[11825, 256, 2034, 41, 34, "Item",ExpressionUUID->"4fc33455-9b11-435f-8d7f-791a9f187479",
 CellID->1427353553],
Cell[13862, 299, 1503, 22, 53, "Item",ExpressionUUID->"1c6a7c8e-3814-438f-90d8-e661c93f06b5",
 CellID->736894797],
Cell[15368, 323, 1425, 21, 32, "Item",ExpressionUUID->"f7e6a454-3f75-4b2f-890b-3eeb49f4f82c",
 CellID->520237067],
Cell[16796, 346, 1644, 24, 32, "Item",ExpressionUUID->"fb0b5ad9-ec05-4b72-8858-1c72262e4085",
 CellID->202006067],
Cell[18443, 372, 328, 5, 35, "Text",ExpressionUUID->"dff05da6-eb85-4fea-a409-1eba898309ca",
 CellID->413635360],
Cell[18774, 379, 1792, 40, 148, "Code",ExpressionUUID->"e4b442b3-db58-40ed-9036-e3414ac68a3e",
 CellID->1085202133],
Cell[20569, 421, 527, 12, 32, "Item",ExpressionUUID->"a5cc46fe-a066-4c4e-a432-9aab38f46f72",
 CellID->1522827300],
Cell[21099, 435, 950, 23, 34, "Item",ExpressionUUID->"b20f928c-bd62-4b01-8ebd-29aeee6c96a8",
 CellID->2065510407],
Cell[22052, 460, 1479, 37, 34, "Item",ExpressionUUID->"9a9b5870-a317-4348-a946-a01af428c6fa",
 CellID->138693104],
Cell[23534, 499, 565, 12, 32, "Item",ExpressionUUID->"56d29f3a-0b1e-4c0a-9a37-f290483e4e45",
 CellID->1950734194],
Cell[24102, 513, 1782, 41, 53, "Item",ExpressionUUID->"726db643-becd-4e21-afa4-e8e8a2224173",
 CellID->530138565]
}, Open  ]],
Cell[CellGroupData[{
Cell[25921, 559, 400, 6, 67, "Section",ExpressionUUID->"f538743c-a36f-43ff-9533-f940f294f015",
 CellID->46032747],
Cell[CellGroupData[{
Cell[26346, 569, 195, 3, 54, "Subsection",ExpressionUUID->"2368c4fb-0b58-43ae-b178-6e20bfafc894",
 CellID->1549600826],
Cell[26544, 574, 2894, 68, 36, "Item",ExpressionUUID->"e0b4cc2f-1446-40d5-9eef-716e73bbe8e0",
 CellID->845512656],
Cell[29441, 644, 3680, 91, 57, "Item",ExpressionUUID->"a2e84951-ef14-46dc-beeb-a614f1615230",
 CellID->1203046640],
Cell[33124, 737, 1345, 30, 34, "Item",ExpressionUUID->"af56b0b3-31cd-4a65-812e-88c2b0701539",
 CellID->1015524914],
Cell[CellGroupData[{
Cell[34494, 771, 1935, 47, 36, "Item",ExpressionUUID->"7abc263c-d0eb-449d-aea8-4a28b16a50a8",
 CellID->1046341975],
Cell[36432, 820, 1345, 30, 28, "Subitem",ExpressionUUID->"5a068f36-50be-472b-bafd-e680aa1b619f",
 CellID->125988542]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37826, 856, 545, 13, 54, "Subsection",ExpressionUUID->"ea61266e-161b-4f3c-a08e-e3d1be6e5cd2",
 CellID->2008940669],
Cell[CellGroupData[{
Cell[38396, 873, 198, 3, 45, "Subsubsection",ExpressionUUID->"87524243-34ce-4168-b37a-ddf30de0921e",
 CellID->1385909908],
Cell[38597, 878, 1498, 32, 38, "CodeText",ExpressionUUID->"4248090d-29dc-4c51-83f8-e6aeec3f0079",
 CellID->1142010376],
Cell[40098, 912, 4509, 105, 509, "Code",ExpressionUUID->"41fe962a-eef1-4823-82dc-9d95815a6a3b",
 CellID->1420465418],
Cell[44610, 1019, 4763, 124, 61, "Text",ExpressionUUID->"f81e7d5b-a4b5-4f5b-bc2e-3fe1115818e8",
 CellID->701023275],
Cell[49376, 1145, 1774, 49, 34, "ItemNumbered",ExpressionUUID->"ef13ff2f-da37-4982-ae51-856bf40f7572",
 CellID->1763857461],
Cell[51153, 1196, 1788, 49, 34, "ItemNumbered",ExpressionUUID->"5a847731-8963-4346-ba4b-c7fd0643c749",
 CellID->1530663813],
Cell[52944, 1247, 1713, 47, 34, "ItemNumbered",ExpressionUUID->"d6972dbb-93d9-478b-a3d0-b2c181c0366c",
 CellID->483974490],
Cell[54660, 1296, 2304, 56, 60, "Text",ExpressionUUID->"eb3c5229-2384-4ae3-855b-383def588f9a",
 CellID->279766939]
}, Open  ]],
Cell[CellGroupData[{
Cell[57001, 1357, 202, 3, 45, "Subsubsection",ExpressionUUID->"45ef7cc8-5ea5-4d47-b747-67e35a1bd56f",
 CellID->706601752],
Cell[57206, 1362, 1016, 24, 35, "Text",ExpressionUUID->"f0daece1-8cc0-4bee-bcfb-3ee790cedfbe",
 CellID->1500473072],
Cell[58225, 1388, 477, 14, 38, "CodeText",ExpressionUUID->"785a6f5c-4221-480c-910d-0ac9ce9c5d3e",
 CellID->106265360],
Cell[58705, 1404, 3443, 94, 262, "Code",ExpressionUUID->"e1aef048-8c8b-4249-b278-35ae5c31e50e",
 CellID->1914990853]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[62197, 1504, 209, 3, 54, "Subsection",ExpressionUUID->"b0277c8d-72b9-415e-8fda-236709853e82",
 CellID->1247321661],
Cell[62409, 1509, 2919, 77, 64, "Text",ExpressionUUID->"5f6a1f50-5afe-4431-8761-9c24eb6dc677",
 CellID->1016876241],
Cell[65331, 1588, 3897, 101, 41, "Text",ExpressionUUID->"09af6554-a1d2-4a3f-a833-10ce6952543d",
 CellID->1195908432],
Cell[69231, 1691, 910, 24, 58, "Text",ExpressionUUID->"55502eee-4319-4516-82cf-b00e9284c0a9",
 CellID->310498368],
Cell[70144, 1717, 4862, 127, 41, "Text",ExpressionUUID->"58e50465-11e0-4930-a910-18bd3738f9b0",
 CellID->606484318],
Cell[75009, 1846, 510, 9, 35, "Text",ExpressionUUID->"3f828ef3-ab36-4dc0-89b9-d3c87ac3d44c",
 CellID->2021351407],
Cell[75522, 1857, 1161, 28, 37, "Text",ExpressionUUID->"19781adb-4f04-43c9-b0b7-f83aca7c5005",
 CellID->162243244],
Cell[76686, 1887, 697, 12, 35, "Text",ExpressionUUID->"7e105890-f7bf-43c4-8397-31873369a26e",
 CellID->1808342631],
Cell[77386, 1901, 676, 12, 38, "CodeText",ExpressionUUID->"23fed046-1283-43c8-917d-33d65879053e",
 CellID->216624700],
Cell[78065, 1915, 6690, 155, 870, "Code",ExpressionUUID->"82271e77-6754-45a3-a987-8dcad1fffd7e",
 CellID->1570325732]
}, Open  ]],
Cell[CellGroupData[{
Cell[84792, 2075, 213, 3, 54, "Subsection",ExpressionUUID->"c78f11ed-6471-46fd-a124-0fd5f8086b69",
 CellID->666047636],
Cell[CellGroupData[{
Cell[85030, 2082, 209, 3, 45, "Subsubsection",ExpressionUUID->"a40bd1ee-1f01-4a51-a621-cc2f2718696a",
 CellID->434660529],
Cell[85242, 2087, 2049, 45, 62, "Text",ExpressionUUID->"ab4705b9-4938-4c20-8984-0b73289ee35b",
 CellID->447011485],
Cell[87294, 2134, 1381, 37, 42, "Text",ExpressionUUID->"8161d267-00b5-46d8-b2dd-4f6799de219a",
 CellID->735618045],
Cell[88678, 2173, 270, 4, 38, "CodeText",ExpressionUUID->"4f1258f6-8e1c-40e3-a476-cc7d151cad61",
 CellID->874023650],
Cell[88951, 2179, 4065, 108, 224, "Code",ExpressionUUID->"11cb3635-6774-4be9-894b-fe4bbc08d5a5",
 CellID->1481401489]
}, Open  ]],
Cell[CellGroupData[{
Cell[93053, 2292, 207, 3, 45, "Subsubsection",ExpressionUUID->"b98c190f-1cd3-47dd-bf1f-2cca229ed4a7",
 CellID->691640678],
Cell[93263, 2297, 169319, 2796, 427, "Text",ExpressionUUID->"00aab212-4c20-4cdb-9dba-502b97269871",
 CellID->6880573],
Cell[262585, 5095, 1046, 21, 58, "Text",ExpressionUUID->"c928c03b-7d1b-4dc6-8f3a-639f94381152",
 CellID->2055330071],
Cell[263634, 5118, 807, 17, 35, "Text",ExpressionUUID->"0a1c749c-6c6e-4b20-aa0b-7971bc4f42e9",
 CellID->461822836],
Cell[264444, 5137, 1177, 27, 37, "Text",ExpressionUUID->"0ce180af-d43b-4baf-ad34-b6b84ccb69e7",
 CellID->1326028707],
Cell[265624, 5166, 2635, 65, 41, "Text",ExpressionUUID->"bc3b6d1b-09d2-4b80-91f4-c1b0dfbe7907",
 CellID->1264903366],
Cell[268262, 5233, 1630, 43, 37, "Text",ExpressionUUID->"91434ce0-0b12-4b22-8224-781072006ddb",
 CellID->258820689],
Cell[269895, 5278, 2924, 72, 42, "Text",ExpressionUUID->"4617c154-588c-4300-82ff-ec95563c5b52",
 CellID->1404862146],
Cell[272822, 5352, 255, 5, 38, "CodeText",ExpressionUUID->"6d6be5b0-7137-4026-b554-c9468aaab228",
 CellID->1570905586],
Cell[273080, 5359, 10299, 238, 1041, "Code",ExpressionUUID->"8d2a852d-a73c-4791-a5bb-13a8dc15d207",
 CellID->239425455]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[283428, 5603, 312, 5, 54, "Subsection",ExpressionUUID->"3dfbbe96-1f8e-4f0c-ab92-99e4381724db",
 CellID->1750767021],
Cell[283743, 5610, 2578, 63, 85, "Text",ExpressionUUID->"ad18043a-39b5-45a9-ad5d-5505c8b5c456",
 CellID->1120088538],
Cell[286324, 5675, 298, 6, 38, "CodeText",ExpressionUUID->"470deb56-dda6-4c41-abdb-6811a5b6388b",
 CellID->513640145],
Cell[286625, 5683, 1621, 39, 110, "Code",ExpressionUUID->"12ac9409-685a-4973-9c5b-f3d81e881521",
 CellID->438513800]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[288295, 5728, 296, 5, 67, "Section",ExpressionUUID->"58a07f39-78a9-4eaf-8240-64410ebc2e56",
 CellID->2116664303],
Cell[CellGroupData[{
Cell[288616, 5737, 207, 3, 54, "Subsection",ExpressionUUID->"02715089-0b71-4148-b17f-017d9d59d46e",
 CellID->1314817202],
Cell[288826, 5742, 487, 9, 35, "Text",ExpressionUUID->"d10293c4-02e4-4937-a358-c89fe1a8252c",
 CellID->392277630],
Cell[289316, 5753, 1150, 24, 38, "CodeText",ExpressionUUID->"e91cef8b-e951-4b5c-8a05-8192dfe4e8b1",
 CellID->993229572],
Cell[290469, 5779, 8389, 200, 859, "Code",ExpressionUUID->"a2153eb2-7bdb-4319-94f6-2f548198b943",
 CellID->686398179]
}, Open  ]],
Cell[CellGroupData[{
Cell[298895, 5984, 204, 3, 54, "Subsection",ExpressionUUID->"3911270f-f8a7-4af4-b6a2-56c1693126eb",
 CellID->572795505],
Cell[299102, 5989, 761, 12, 58, "Text",ExpressionUUID->"49da48ef-27cb-4280-87dd-197d4ce4b07f",
 CellID->12042769],
Cell[299866, 6003, 1067, 17, 81, "Text",ExpressionUUID->"b813ce25-6265-488f-b924-84edfd5d3ca2",
 CellID->1259012004],
Cell[300936, 6022, 1231, 26, 58, "Text",ExpressionUUID->"a1d5b279-902a-4ce0-a4f6-e4190155d728",
 CellID->319133317],
Cell[302170, 6050, 251, 5, 38, "CodeText",ExpressionUUID->"3b8bdd17-28ec-4b83-9ae1-e91077d195c0",
 CellID->399800589],
Cell[302424, 6057, 3584, 91, 422, "Code",ExpressionUUID->"b413418d-7bda-4a4c-8cb1-d39d5e7bcf89",
 CellID->983764004],
Cell[306011, 6150, 594, 14, 35, "Text",ExpressionUUID->"d45ef065-0465-4d73-99e0-1ca6dea3d99e",
 CellID->450386767],
Cell[306608, 6166, 318, 7, 38, "CodeText",ExpressionUUID->"8d07f0eb-a886-4fe5-8ce1-861b3d4a63de",
 CellID->731701074],
Cell[306929, 6175, 279, 6, 52, "Code",ExpressionUUID->"faff1ba7-a4b7-4436-85eb-29a40ee84c8e",
 CellID->1428547562],
Cell[307211, 6183, 496, 9, 58, "Text",ExpressionUUID->"83a9064b-59fe-4b11-ab68-dbddbeade544",
 CellID->906795886],
Cell[307710, 6194, 957, 22, 35, "Text",ExpressionUUID->"d830aeab-17fb-4314-b2ca-69c3369a6048",
 CellID->1297536388],
Cell[308670, 6218, 1915, 44, 61, "CodeText",ExpressionUUID->"330dcf83-3d6d-4f79-bcf1-5bf9d23a8c00",
 CellID->240734920],
Cell[310588, 6264, 1653, 40, 129, "Code",ExpressionUUID->"0ce93d6c-493c-4e5c-ba6f-98dac03d7aaa",
 CellID->364628259]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[312290, 6310, 368, 5, 67, "Section",ExpressionUUID->"39cfb252-c4f4-474e-8a28-063fcb078c9c",
 CellID->1820351526],
Cell[312661, 6317, 757, 16, 35, "Text",ExpressionUUID->"eb033809-59bc-4e6f-92ed-f1b01a19b313",
 CellID->42444941],
Cell[CellGroupData[{
Cell[313443, 6337, 513, 12, 54, "Subsection",ExpressionUUID->"80552e85-0861-457e-863f-68cda69770cd",
 CellID->313292030],
Cell[313959, 6351, 288, 6, 38, "CodeText",ExpressionUUID->"14719b73-5b47-443f-b635-e3dc4327ba84",
 CellID->1056441035],
Cell[314250, 6359, 43387, 992, 4670, "Code",ExpressionUUID->"c265e064-3707-4064-a638-8f4c34158a37",
 CellID->1830589319]
}, Open  ]],
Cell[CellGroupData[{
Cell[357674, 7356, 189, 3, 54, "Subsection",ExpressionUUID->"8f361cf9-afd6-4682-9473-168bd9428244",
 CellID->1443047120],
Cell[357866, 7361, 729, 18, 40, "CodeText",ExpressionUUID->"bed52ecb-0f14-41b8-a9d9-cb76128c31da",
 CellID->1228083603],
Cell[358598, 7381, 5479, 76, 30, "Input",ExpressionUUID->"a599ba97-c5b8-4d76-af5e-096ea0f2ee07",
 CellID->1760120269],
Cell[364080, 7459, 317, 6, 38, "CodeText",ExpressionUUID->"e820e9e8-7ad9-4540-b6d3-ac3f6f942694",
 CellID->828361204],
Cell[CellGroupData[{
Cell[364422, 7469, 5817, 93, 52, "Input",ExpressionUUID->"48a737f0-e833-41c2-b4fc-31c5ad66950d",
 CellID->754123658],
Cell[370242, 7564, 702, 11, 34, "Output",ExpressionUUID->"8b9b1ad7-1185-4001-af1a-32f03726a698",
 CellID->601941534],
Cell[370947, 7577, 470, 8, 34, "Output",ExpressionUUID->"6fb81811-ca5d-49fc-9d56-58ec3cb80ad7",
 CellID->35900921]
}, Open  ]],
Cell[371432, 7588, 346, 7, 38, "CodeText",ExpressionUUID->"7d5a5809-fff4-4e89-afed-98e5d89934be",
 CellID->750792498],
Cell[CellGroupData[{
Cell[371803, 7599, 540, 14, 30, "Input",ExpressionUUID->"1f1ce5e8-1c33-4cc2-810e-e5d4bd79cd2b",
 CellID->107835412],
Cell[372346, 7615, 69309, 1561, 401, "Output",ExpressionUUID->"ee8c8aa4-7a07-42e7-a38e-3b09a0daecac",
 CellID->1472395620]
}, Open  ]],
Cell[441670, 9179, 613, 13, 38, "CodeText",ExpressionUUID->"74de9471-8723-4882-b26d-c3832c803b14",
 CellID->188667701],
Cell[442286, 9194, 4480, 66, 30, "Input",ExpressionUUID->"52d8d663-9c1f-419a-a5c0-db65dd26f3de",
 CellID->2061055063],
Cell[446769, 9262, 655, 14, 38, "CodeText",ExpressionUUID->"8b915f5b-4e42-4dbe-ad9d-70f5c6adad5a",
 CellID->1530031818],
Cell[CellGroupData[{
Cell[447449, 9280, 940, 18, 52, "Input",ExpressionUUID->"fdf41743-5883-4cb2-a3a9-7517f8caad18",
 CellID->1241217731],
Cell[448392, 9300, 236137, 4027, 39, "Output",ExpressionUUID->"a01858a5-7cb0-41c5-847d-6d3331093dd2",
 CellID->391546226]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[684590, 13334, 241, 4, 67, "Section",ExpressionUUID->"e1eae2c2-2970-4cb5-9b53-e36f8888c062",
 CellID->1847366805],
Cell[684834, 13340, 569, 12, 32, "Item",ExpressionUUID->"93652e8e-873c-44c7-975d-225347d23b26",
 CellID->640944848],
Cell[685406, 13354, 557, 13, 32, "Item",ExpressionUUID->"1b5d2cd0-62d4-4b99-8003-11056d771995",
 CellID->843009373],
Cell[685966, 13369, 614, 15, 32, "Item",ExpressionUUID->"b498c9ff-2e7a-4110-8827-ce858206927c",
 CellID->784853913]
}, Open  ]]
}, Open  ]]
}
]
*)

